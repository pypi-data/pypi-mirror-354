from .code import *
from .code_t import *
from .see import *

import pyperclip
import os
from dotenv import load_dotenv
from .telegram_handler import _TelegramHandler

_telegram_instance: _TelegramHandler | None = None


def _auto_initialize_if_needed():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –º–æ–¥—É–ª—å, –∏—Å–ø–æ–ª—å–∑—É—è redislite."""
    global _telegram_instance
    if _telegram_instance:
        return

    #print("üîß –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –≤—ã–∑–æ–≤–∞. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞...")

    library_path = os.path.dirname(__file__)
    dotenv_path = os.path.join(library_path, '.env')

    if not os.path.exists(dotenv_path):
        raise FileNotFoundError(f"–ù–µ –Ω–∞–π–¥–µ–Ω .env —Ñ–∞–π–ª –≤–Ω—É—Ç—Ä–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏! –ü–æ–º–µ—Å—Ç–∏—Ç–µ .env –ø–æ —ç—Ç–æ–º—É –ø—É—Ç–∏: {library_path}")

    load_dotenv(dotenv_path=dotenv_path)

    # --- –£–ü–†–û–©–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê ---
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ
    token = os.getenv("TELEGRAM_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")

    if not all([token, chat_id]):
        raise ValueError("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ TELEGRAM_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –ø—É—Å—Ç—ã –≤ .env —Ñ–∞–π–ª–µ.")

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞. –û–Ω —Å–∞–º —Ä–∞–∑–±–µ—Ä–µ—Ç—Å—è —Å Redis.
    _telegram_instance = _TelegramHandler(token=token, chat_id=chat_id)
    #print("–ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ-–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")


async def call(text: str, task_id: str):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∑–∞–¥–∞—á—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID.
    :param text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    :param task_id: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç—Ä–æ–∫–æ–≤—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç—Ç–æ–π –∑–∞–¥–∞—á–∏.
    """
    _auto_initialize_if_needed()
    await _telegram_instance.send_message(text, task_id)

#
# async def ans(task_id: str):
#     """
#     –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∑–∞–¥–∞—á–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID.
#     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—Ç–≤–µ—Ç–µ –∏–ª–∏ None.
#     """
#     _auto_initialize_if_needed()
#     reply_data = await _telegram_instance.check_for_reply(task_id)
#
#     if reply_data:
#         answer = f"""{reply_data['text']}"""
#         pyperclip.copy(answer)
#         pyperclip.paste()
#     else:
#         print(f"–û—Ç–≤–µ—Ç–∞ –¥–ª—è –∑–∞–¥–∞—á–∏ '{task_id}' –ø–æ–∫–∞ –Ω–µ—Ç.")

#     return '0'

# async def ans(task_id: str) :
#     """
#     –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∑–∞–¥–∞—á–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID.
#     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—Ç–≤–µ—Ç–µ –∏–ª–∏ None.
#     """
#     _auto_initialize_if_needed()
#     reply_data = await _telegram_instance.check_for_reply(task_id)
#
#     if reply_data:
#         # --- –£–õ–£–ß–®–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê ---
#         # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ –∏ –∫–æ–ø–∏—Ä—É–µ–º –µ–≥–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
#         username = reply_data.get('username', 'N/A')
#         answer_text = reply_data.get('text', '')
#
#         full_answer_info = f"–û—Ç–≤–µ—Ç –æ—Ç @{username}: {answer_text}"
#         #print(full_answer_info)
#
#         # –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–∞–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
#         pyperclip.copy(answer_text)
#         pyperclip.paste()
#
#         #print(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ ('{answer_text}') —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞.")
#     else:
#         print(f"–û—Ç–≤–µ—Ç–∞ –¥–ª—è –∑–∞–¥–∞—á–∏ '{task_id}' –ø–æ–∫–∞ –Ω–µ—Ç.")
#
#     # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏, —á—Ç–æ–±—ã –≤—ã–∑—ã–≤–∞—é—â–∏–π –∫–æ–¥ –º–æ–≥ —Å –Ω–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å
#     # return reply_data

# numpyp/__init__.py

async def ans(task_id: str, debug: bool = False) -> dict | None:
    _auto_initialize_if_needed()
    # "–ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º" debug –≤–≥–ª—É–±—å –º–æ–¥—É–ª—è
    reply_data = await _telegram_instance.check_for_reply(task_id, debug=debug)

    if reply_data:
        username = reply_data.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
        answer_text = reply_data.get('text', '')
        full_answer_info = f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç @{username} –¥–ª—è –∑–∞–¥–∞—á–∏ '{task_id}': {answer_text}"
        print(full_answer_info)
        pyperclip.copy(answer_text)
        print(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ ('{answer_text}') —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞.")
    else:
        print(f"–û—Ç–≤–µ—Ç–∞ –¥–ª—è –∑–∞–¥–∞—á–∏ '{task_id}' –ø–æ–∫–∞ –Ω–µ—Ç.")

    return reply_data