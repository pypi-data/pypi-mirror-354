name: PR Validation

on:
  pull_request:
    branches: master
  push:
    branches: master

jobs:
  quality-check:
    runs-on: ubuntu-24.04
    name: Source code quality check
    steps:
      - name: Get latest SHA on the branch
        id: get_sha
        run: |
          echo "COMMIT_SHA=${{ github.event.pull_request.head.sha || github.sha }}" >> $GITHUB_OUTPUT

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.get_sha.outputs.COMMIT_SHA }}
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.6.3"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install

      - name: Install the project dependencies
        run: |
          uv sync --frozen --verbose --all-groups

      - name: Run tests
        run: |
          echo '### tests result' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          uv run coverage run -m pytest -vv >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Type checks
        run: |
          echo '### mypy checks' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          uv run mypy src >> $GITHUB_STEP_SUMMARY
          uv run mypy tests >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Lint
        run: |
          echo '### ruff linter checks' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY  
          uv run ruff check >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage-reports/coverage.xml
