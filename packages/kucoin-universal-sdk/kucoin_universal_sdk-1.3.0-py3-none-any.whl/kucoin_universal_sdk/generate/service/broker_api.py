# Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

from abc import ABC, abstractmethod
from kucoin_universal_sdk.internal.interfaces.transport import Transport
from kucoin_universal_sdk.generate.broker.apibroker.api_api_broker import APIBrokerAPI, APIBrokerAPIImpl
from kucoin_universal_sdk.generate.broker.ndbroker.api_nd_broker import NDBrokerAPI, NDBrokerAPIImpl


class BrokerService(ABC):

    @abstractmethod
    def get_api_broker_api(self) -> APIBrokerAPI:
        """
        get APIBrokerAPI
        """
        pass

    @abstractmethod
    def get_nd_broker_api(self) -> NDBrokerAPI:
        """
        get NDBrokerAPI
        """
        pass


class BrokerServiceImpl(BrokerService):

    def __init__(self, transport: Transport):
        self.transport = transport
        self.api_broker = APIBrokerAPIImpl(transport)
        self.nd_broker = NDBrokerAPIImpl(transport)

    def get_api_broker_api(self) -> APIBrokerAPI:
        return self.api_broker

    def get_nd_broker_api(self) -> NDBrokerAPI:
        return self.nd_broker
