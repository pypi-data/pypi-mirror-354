# coding: utf-8

# Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

from __future__ import annotations
import pprint
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, List, Optional


class GetOcoOrderDetailByOrderIdOrders(BaseModel):
    """
    GetOcoOrderDetailByOrderIdOrders

    Attributes:
        id (str): 
        symbol (str): 
        side (str): 
        price (str): 
        stop_price (str): 
        size (str): 
        status (str): 
    """

    id: Optional[str] = None
    symbol: Optional[str] = None
    side: Optional[str] = None
    price: Optional[str] = None
    stop_price: Optional[str] = Field(default=None, alias="stopPrice")
    size: Optional[str] = None
    status: Optional[str] = None

    __properties: ClassVar[List[str]] = [
        "id", "symbol", "side", "price", "stopPrice", "size", "status"
    ]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=False,
        protected_namespaces=(),
    )

    def to_str(self) -> str:
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        return self.model_dump_json(by_alias=True, exclude_none=True)

    @classmethod
    def from_json(cls,
                  json_str: str) -> Optional[GetOcoOrderDetailByOrderIdOrders]:
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        _dict = self.model_dump(
            by_alias=True,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(
        cls, obj: Optional[Dict[str, Any]]
    ) -> Optional[GetOcoOrderDetailByOrderIdOrders]:
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "id": obj.get("id"),
            "symbol": obj.get("symbol"),
            "side": obj.get("side"),
            "price": obj.get("price"),
            "stopPrice": obj.get("stopPrice"),
            "size": obj.get("size"),
            "status": obj.get("status")
        })
        return _obj
