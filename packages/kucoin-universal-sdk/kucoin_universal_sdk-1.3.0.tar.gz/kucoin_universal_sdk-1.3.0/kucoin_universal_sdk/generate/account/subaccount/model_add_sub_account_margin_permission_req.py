# coding: utf-8

# Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

from __future__ import annotations
import pprint
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, List, Optional


class AddSubAccountMarginPermissionReq(BaseModel):
    """
    AddSubAccountMarginPermissionReq

    Attributes:
        uid (str): Sub account UID
    """

    uid: Optional[str] = Field(default=None, description="Sub account UID")

    __properties: ClassVar[List[str]] = ["uid"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=False,
        protected_namespaces=(),
    )

    def to_str(self) -> str:
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        return self.model_dump_json(by_alias=True, exclude_none=True)

    @classmethod
    def from_json(cls,
                  json_str: str) -> Optional[AddSubAccountMarginPermissionReq]:
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        _dict = self.model_dump(
            by_alias=True,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(
        cls, obj: Optional[Dict[str, Any]]
    ) -> Optional[AddSubAccountMarginPermissionReq]:
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({"uid": obj.get("uid")})
        return _obj


class AddSubAccountMarginPermissionReqBuilder:

    def __init__(self):
        self.obj = {}

    def set_uid(self, value: str) -> AddSubAccountMarginPermissionReqBuilder:
        """
        Sub account UID
        """
        self.obj['uid'] = value
        return self

    def build(self) -> AddSubAccountMarginPermissionReq:
        return AddSubAccountMarginPermissionReq(**self.obj)
