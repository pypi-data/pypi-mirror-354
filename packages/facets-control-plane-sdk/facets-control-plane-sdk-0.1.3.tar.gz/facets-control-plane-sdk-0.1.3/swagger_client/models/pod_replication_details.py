# coding: utf-8

"""
    Api Documentation

    Api Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PodReplicationDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'available': 'int',
        'ready': 'int',
        'total': 'int',
        'unavailable': 'int',
        'updated': 'int'
    }

    attribute_map = {
        'available': 'available',
        'ready': 'ready',
        'total': 'total',
        'unavailable': 'unavailable',
        'updated': 'updated'
    }

    def __init__(self, available=None, ready=None, total=None, unavailable=None, updated=None):  # noqa: E501
        """PodReplicationDetails - a model defined in Swagger"""  # noqa: E501
        self._available = None
        self._ready = None
        self._total = None
        self._unavailable = None
        self._updated = None
        self.discriminator = None
        if available is not None:
            self.available = available
        if ready is not None:
            self.ready = ready
        if total is not None:
            self.total = total
        if unavailable is not None:
            self.unavailable = unavailable
        if updated is not None:
            self.updated = updated

    @property
    def available(self):
        """Gets the available of this PodReplicationDetails.  # noqa: E501


        :return: The available of this PodReplicationDetails.  # noqa: E501
        :rtype: int
        """
        return self._available

    @available.setter
    def available(self, available):
        """Sets the available of this PodReplicationDetails.


        :param available: The available of this PodReplicationDetails.  # noqa: E501
        :type: int
        """

        self._available = available

    @property
    def ready(self):
        """Gets the ready of this PodReplicationDetails.  # noqa: E501


        :return: The ready of this PodReplicationDetails.  # noqa: E501
        :rtype: int
        """
        return self._ready

    @ready.setter
    def ready(self, ready):
        """Sets the ready of this PodReplicationDetails.


        :param ready: The ready of this PodReplicationDetails.  # noqa: E501
        :type: int
        """

        self._ready = ready

    @property
    def total(self):
        """Gets the total of this PodReplicationDetails.  # noqa: E501


        :return: The total of this PodReplicationDetails.  # noqa: E501
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this PodReplicationDetails.


        :param total: The total of this PodReplicationDetails.  # noqa: E501
        :type: int
        """

        self._total = total

    @property
    def unavailable(self):
        """Gets the unavailable of this PodReplicationDetails.  # noqa: E501


        :return: The unavailable of this PodReplicationDetails.  # noqa: E501
        :rtype: int
        """
        return self._unavailable

    @unavailable.setter
    def unavailable(self, unavailable):
        """Sets the unavailable of this PodReplicationDetails.


        :param unavailable: The unavailable of this PodReplicationDetails.  # noqa: E501
        :type: int
        """

        self._unavailable = unavailable

    @property
    def updated(self):
        """Gets the updated of this PodReplicationDetails.  # noqa: E501


        :return: The updated of this PodReplicationDetails.  # noqa: E501
        :rtype: int
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this PodReplicationDetails.


        :param updated: The updated of this PodReplicationDetails.  # noqa: E501
        :type: int
        """

        self._updated = updated

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PodReplicationDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PodReplicationDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
