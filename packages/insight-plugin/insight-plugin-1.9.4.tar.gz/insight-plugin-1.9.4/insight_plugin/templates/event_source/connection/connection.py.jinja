import {{ base_module }}
from {{ base_module }}.exceptions import PluginException, ConnectionTestException
from .schema import ConnectionSchema
from rapidkit.sources.{{ event_source_name }}.task import EventSource, FAST_FOLLOW_THRESHOLD
from rapidkit.utils.core import RapidkitException
from typing import Any, Dict
import asyncio


class Connection({{ base_module }}.Connection):

    def __init__(self):
        super(self.__class__, self).__init__(input=ConnectionSchema())
        self.params = {}
        self.secrets = {}

    def connect(self, params={}):
        self.secrets = {key: (value["secretKey"] if "secretKey" in value else value) for key, value in params.items()}
        pass

    def test(self):
        pass

    def test_task(self) -> Dict[str, Any]:
        async def async_test_task():
            event_source = EventSource(name="plugin")
            _, _ = await event_source.run({}, secrets=self.secrets)
            self.logger.info("Connection test passed")
            return {
                "success": True,
                "message": "Connection test passed"
            }
        try:
            self.logger.info("Running a connection test")
            return asyncio.run(async_test_task())
        except RapidkitException as exception:
            self.logger.info("Connection test failed")
            self.logger.info(f"Error cause: {exception.message}")
            self.logger.info(f"Error code: {exception.code}")
            raise ConnectionTestException(
                cause="The connection test has failed.",
                assistance="Please ensure credentials have required permissions.",
                data=exception,
            )
        except Exception as exception:
            self.logger.info("Connection test failed")
            self.logger.info(f"Error cause: {PluginException.causes[PluginException.Preset.UNKNOWN]}")
            self.logger.info(f"Error details: {exception}")
            raise ConnectionTestException(
                cause="The connection test has failed.",
                assistance="Please ensure credentials have required permissions and view logs for details.",
                data=exception,
            )
