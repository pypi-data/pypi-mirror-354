# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: make87_messages_ros2/jazzy/delphi_esr_msgs/msg/esr_status2.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from make87_messages_ros2.jazzy.std_msgs.msg import header_pb2 as make87__messages__ros2_dot_jazzy_dot_std__msgs_dot_msg_dot_header__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n@make87_messages_ros2/jazzy/delphi_esr_msgs/msg/esr_status2.proto\x12.make87_messages_ros2.jazzy.delphi_esr_msgs.msg\x1a\x34make87_messages_ros2/jazzy/std_msgs/msg/header.proto\"\xa1\x03\n\nEsrStatus2\x12?\n\x06header\x18\x01 \x01(\x0b\x32/.make87_messages_ros2.jazzy.std_msgs.msg.Header\x12\x0e\n\x06\x63\x61nmsg\x18\x02 \x01(\t\x12\x1a\n\x12maximum_tracks_ack\x18\x03 \x01(\r\x12\x17\n\x0frolling_count_2\x18\x04 \x01(\r\x12\x16\n\x0eoverheat_error\x18\x05 \x01(\x08\x12\x18\n\x10range_perf_error\x18\x06 \x01(\x08\x12\x16\n\x0einternal_error\x18\x07 \x01(\x08\x12\x18\n\x10xcvr_operational\x18\x08 \x01(\x08\x12\x15\n\rraw_data_mode\x18\t \x01(\x08\x12\x1a\n\x12steering_angle_ack\x18\n \x01(\r\x12\x13\n\x0btemperature\x18\x0b \x01(\x05\x12\x1b\n\x13veh_spd_comp_factor\x18\x0c \x01(\x02\x12\x15\n\rgrouping_mode\x18\r \x01(\r\x12\x15\n\ryaw_rate_bias\x18\x0e \x01(\x02\x12\x16\n\x0esw_version_dsp\x18\x0f \x01(\tb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'make87_messages_ros2.jazzy.delphi_esr_msgs.msg.esr_status2_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_ESRSTATUS2']._serialized_start=171
  _globals['_ESRSTATUS2']._serialized_end=588
# @@protoc_insertion_point(module_scope)
