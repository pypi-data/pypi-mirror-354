# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: make87_messages_ros2/rolling/autoware_map_msgs/msg/point_cloud_map_cell_with_id.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from make87_messages_ros2.rolling.autoware_map_msgs.msg import point_cloud_map_cell_meta_data_pb2 as make87__messages__ros2_dot_rolling_dot_autoware__map__msgs_dot_msg_dot_point__cloud__map__cell__meta__data__pb2
from make87_messages_ros2.rolling.sensor_msgs.msg import point_cloud2_pb2 as make87__messages__ros2_dot_rolling_dot_sensor__msgs_dot_msg_dot_point__cloud2__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nUmake87_messages_ros2/rolling/autoware_map_msgs/msg/point_cloud_map_cell_with_id.proto\x12\x32make87_messages_ros2.rolling.autoware_map_msgs.msg\x1aWmake87_messages_ros2/rolling/autoware_map_msgs/msg/point_cloud_map_cell_meta_data.proto\x1a?make87_messages_ros2/rolling/sensor_msgs/msg/point_cloud2.proto\"\xda\x01\n\x17PointCloudMapCellWithID\x12\x0f\n\x07\x63\x65ll_id\x18\x01 \x01(\t\x12M\n\npointcloud\x18\x02 \x01(\x0b\x32\x39.make87_messages_ros2.rolling.sensor_msgs.msg.PointCloud2\x12_\n\x08metadata\x18\x03 \x01(\x0b\x32M.make87_messages_ros2.rolling.autoware_map_msgs.msg.PointCloudMapCellMetaDatab\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'make87_messages_ros2.rolling.autoware_map_msgs.msg.point_cloud_map_cell_with_id_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_POINTCLOUDMAPCELLWITHID']._serialized_start=296
  _globals['_POINTCLOUDMAPCELLWITHID']._serialized_end=514
# @@protoc_insertion_point(module_scope)
