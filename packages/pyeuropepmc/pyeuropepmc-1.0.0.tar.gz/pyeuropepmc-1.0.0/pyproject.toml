[tool.poetry]
name = "pyeuropepmc"
version = "1.0.0"
description = "A Python package for working with the Europe PMC API to search and retrieve scientific literature."
license = "file:LICENSE"
readme = "README.md"
authors = ["Jonas Heinicke (HZI) <jonas.heinicke@helmholtz-hzi.de>"]

[tool.poetry.dependencies]
python = "3.10.13"
ipython = ">=7.30"
ipykernel = ">=6.7"
ipywidgets = ">=7.6"
isort = ">=5.10"
jupyterlab = ">=3.2"
notebook = ">=6.4"
numpy = ">=1.21"
pandas = ">=1.4"
rdflib-jsonld = ">=0.5"
rdflib = ">=6.0"
python-dotenv = ">=0.19"
requests = "^2.32.4"
typer = ">=0.12.5,<0.13.0"
backoff = "^2.2.1"
tornado = "^6.5.1"
flask = "^3.1.1"


[tool.poetry.group.dev.dependencies]
pytest = "8.2.2"
pre-commit = "3.7.1"
black = "24.4.2"
mypy = "1.10.1"
flask = ">=2.1"
types-PyYAML = "6.0.12.20240311"
types-requests = "2.26.0"
flake8 = ">=4.0"
pytest-benchmark = "^5.1.0"
flake8-pyproject = "^1.2.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
  \.git
  | \.venv
)/
'''

[tool.isort]
known_first_party = ["pyeuropepmc"]
force_sort_within_sections = true


[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["tests"]
markers = [
  "slow: mark test as slow (use '-m \"not slow\"' to skip)",
  "integration: mark test as integration (use '-m \"not integration\"' to skip)",
  "unit: mark test as unit (use '-m \"not unit\"' to skip)",
  "network: mark test that requires network access (use '-m \"not network\"' to skip)",
  "functional: mark test as functional (use '-m \"not functional\"' to skip)",
]

[tool.flake8]
ignore = ["E731", "E266", "E501", "C901", "W503"]
max-line-length = 99
exclude = [".git", "node_modules", ".venv", "dist", "build", "docs", "tests", "__pycache__", ".pytest_cache"]

