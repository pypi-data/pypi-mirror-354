[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyopenapi-gen"
version = "0.8.3"
description = "Python OpenAPI client generator - core library"
authors = [{ name = "PyOpenAPI Team", email = "dev@example.com" }]
readme = "README.md"
requires-python = ">=3.10,<4.0.0"
dependencies = [
  "openapi-spec-validator>=0.7",
  "openapi-core>=0.19",
  "jinja2>=3.0",
  "PyYAML>=6.0",
  "typer>=0.12.0,<0.15.0",
  "httpx>=0.24.0",
]
license = { text = "MIT" }
keywords = ["openapi", "swagger", "client", "generator", "async", "python"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: MacOS",
  "Operating System :: POSIX :: Linux",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Code Generators",
  "Typing :: Typed",
]

[project.optional-dependencies]
dev = [
  "black>=23.0",
  "ruff>=0.4",
  "mypy>=1.7",
  "pytest>=7.0",
  "pytest-cov>=4.0",
  "pytest-timeout>=2.1.0",
  "pytest-xdist>=3.0.0",
  "types-toml>=0.10.8",
  "pytest-asyncio>=0.20.0",
  "safety>=2.0.0",
  "bandit[toml]>=1.7.0",
  "types-pyyaml>=6.0.12",
  "httpx>=0.24.0",
]

[tool.black]
line-length = 120
target-version = ["py312"]
include = "\\.py$"

[tool.ruff]
line-length = 120
preview = true

[tool.ruff.lint]
select = ["F401", "E", "W", "I"]
ignore = ["E501"]  # Ignore line length for test files - focus on logic errors

[tool.mypy]
python_version = "3.12"
strict = true
show_error_codes = true
namespace_packages = true
implicit_optional = false
# Disable overly strict return checking for match statements
warn_no_return = false

[tool.pytest.ini_options]
addopts = "-ra"
testpaths = ["tests"]
pythonpath = "src"
python_files = ["test_*.py"]
python_functions = ["test_"]
log_cli = false
log_cli_level = "WARNING"
asyncio_default_fixture_loop_scope = "function"
# For details on registering custom marks, see:
# https://docs.pytest.org/en/stable/how-to/mark.html
markers = [
    "timeout: specify a timeout for a test function (integration with pytest-timeout).",
]



[project.scripts]
pyopenapi-gen = "pyopenapi_gen.cli:app"
