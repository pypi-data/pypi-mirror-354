import{a as Y,b as X}from"./chunk-D3GAWKNQ.js";import"./chunk-K2P6CES6.js";import{b as F}from"./chunk-Z4ZYSIRC.js";import{f as N}from"./chunk-3L3RRFVB.js";import{Ea as O,I as b,Ja as v,K as R,O as k,f as L,ha as A,i as S,ka as C}from"./chunk-FVXVO67X.js";import{gb as x,ia as M,ib as z,t as w,u as P,x as D}from"./chunk-KYOHYQWH.js";import{k as c}from"./chunk-KYPE3LET.js";var G=D(17),E=class y extends A{constructor(t,e,r){super(t,e,r),this.$polargram=!0,this.zoom_rmin=this.zoom_rmax=0,this.t0=0,this.mult=1,this.decodeOptions(r)}isNormalAngles(){let t=this.getObject();return t?.fRadian||t?.fGrad||t?.fDegree}decodeOptions(t){let e=new b(t);this.options||(this.options={}),Object.assign(this.options,{rdot:e.check("RDOT"),rangle:e.check("RANGLE",!0)?e.partAsInt():0,NoLabels:e.check("N"),OrthoLabels:e.check("O")}),this.storeDrawOpt(t)}setAnglesRange(t,e,r){if(t>=e&&(e=t+1),r){let s=this.getObject();s.fRwtmin=t,s.fRwtmax=e}this.t0=t,this.mult=2*Math.PI/(e-t)}translate(t,e,r){let s=(t-this.t0)*this.mult,i=this.r(e),n=i/this.szx*this.szy,a=i*Math.cos(-s),o=n*Math.sin(-s);return r||(a=Math.round(a),o=Math.round(o),i=Math.round(i),n=Math.round(n)),{grx:a,gry:o,rx:i,ry:n}}format(t){return t===Math.round(t)?t.toString():this.ndig>10?t.toExponential(4):t.toFixed(this.ndig>0?this.ndig:0)}axisAsText(t,e){return t==="r"?e===Math.round(e)?e.toString():this.ndig>10?e.toExponential(4):e.toFixed(this.ndig+2):(e*=180/Math.PI,e===Math.round(e)?e.toString():e.toFixed(1))}getFrameRect(){let t=this.getPadPainter(),e=t.getRootPad(!0),r=t.getPadWidth(),s=t.getPadHeight(),i={};return e?(i.szx=Math.round(Math.max(.1,.5-Math.max(e.fLeftMargin,e.fRightMargin))*r),i.szy=Math.round(Math.max(.1,.5-Math.max(e.fBottomMargin,e.fTopMargin))*s)):(i.szx=Math.round(.5*r),i.szy=Math.round(.5*s)),i.width=2*i.szx,i.height=2*i.szy,i.x=Math.round(r/2-i.szx),i.y=Math.round(s/2-i.szy),i.hint_delta_x=i.szx,i.hint_delta_y=i.szy,i.transform=k(i.x,i.y)||"",i}mouseEvent(t,e){let r=null;if(t!=="leave"){let s=L(e,this.draw_g.node());r={x:s[0],y:s[1],touch:!1}}this.processFrameTooltipEvent(r)}mouseWheel(t){t.stopPropagation(),t.preventDefault(),this.processFrameTooltipEvent(null);let e=this.getObject();if(!e)return;let r=t.wheelDelta?-t.wheelDelta:t.deltaY||t.detail;if(!r)return;r=r<0?-.2:.2;let s=this.scale_rmin,i=this.scale_rmax,n=i-s;i+=r*n,(s<e.fRwrmin||i>e.fRwrmax)&&(s=i=0),(this.zoom_rmin!==s||this.zoom_rmax!==i)&&(this.zoom_rmin=s,this.zoom_rmax=i,this.redrawPad())}mouseDoubleClick(){(this.zoom_rmin||this.zoom_rmax)&&(this.zoom_rmin=this.zoom_rmax=0,this.redrawPad())}drawPolarLabels(t,e){return c(this,null,function*(){let r=Math.round(t.fPolarTextSize*this.szy*2);return this.startTextDrawingAsync(t.fPolarLabelFont,r).then(()=>{let s=e===8?["0","#frac{#pi}{4}","#frac{#pi}{2}","#frac{3#pi}{4}","#pi","#frac{5#pi}{4}","#frac{3#pi}{2}","#frac{7#pi}{4}"]:["0","#frac{2#pi}{3}","#frac{4#pi}{3}"],i=[12,11,21,31,32,33,23,13];for(let n=0;n<e;++n){let a=-n*2*Math.PI/e;this.draw_g.append("svg:path").attr("d",`M0,0L${Math.round(this.szx*Math.cos(a))},${Math.round(this.szy*Math.sin(a))}`).call(this.lineatt.func);let o=12,h=0;if(this.options.OrthoLabels)h=-n/e*360,h>-271&&h<-91&&(o=32,h+=180);else{let l=Math.round(16-a/Math.PI*4)%8;o=i[l]}this.drawText({align:o,rotate:h,x:Math.round((this.szx+r)*Math.cos(a)),y:Math.round((this.szy+r/this.szx*this.szy)*Math.sin(a)),text:s[n],color:this.getColor(t.fPolarLabelColor),latex:1})}return this.finishTextDrawing()})})}redraw(){return c(this,null,function*(){if(!this.isMainPainter())return;let t=this.getObject(),e=this.getPadPainter().getFrameRect();this.createG(),k(this.draw_g,Math.round(e.x+e.width/2),Math.round(e.y+e.height/2)),this.szx=e.szx,this.szy=e.szy,this.scale_rmin=t.fRwrmin,this.scale_rmax=t.fRwrmax,this.zoom_rmin!==this.zoom_rmax&&(this.scale_rmin=this.zoom_rmin,this.scale_rmax=this.zoom_rmax),this.r=S().domain([this.scale_rmin,this.scale_rmax]).range([0,this.szx]),t.fRadian?(t.fRwtmin=0,t.fRwtmax=2*Math.PI):t.fDegree?(t.fRwtmin=0,t.fRwtmax=360):t.fGrad&&(t.fRwtmin=0,t.fRwtmax=200),this.setAnglesRange(t.fRwtmin,t.fRwtmax);let r=this.r.ticks(5),s=Math.floor(t.fNdivRad%1e4/100),i=t.fNdivPol%100;i!==3&&(i=8),this.createAttLine({attr:t}),this.gridatt||(this.gridatt=this.createAttLine({color:t.fLineColor,style:2,width:1,std:!1}));let n=Math.abs(t.fRwrmax-t.fRwrmin);this.ndig=n<=0?-3:Math.round(Math.log10(r.length/n));let a=[],o=0;for(;o<r.length;){let f=this.format(r[o]);if(a.indexOf(f)>=0){if(++this.ndig>10)break;a=[],o=0;continue}a.push(f),o++}let h=!1,l=this.isBatchMode()?null:"visibleFill";return r[r.length-1]<t.fRwrmax&&this.zoom_rmin===this.zoom_rmax&&(r.push(t.fRwrmax),h=!0),this.startTextDrawingAsync(t.fRadialLabelFont,Math.round(t.fRadialTextSize*this.szy*2)).then(()=>{let f=-(this.options.rangle||t.fAxisAngle)/180*Math.PI,d=Math.cos(f),_=Math.sin(f);for(let p=0;p<r.length;++p){let g=this.r(r[p]),m=g/this.szx*this.szy;if(this.draw_g.append("ellipse").attr("cx",0).attr("cy",0).attr("rx",Math.round(g)).attr("ry",Math.round(m)).style("fill","none").style("pointer-events",l).call(this.lineatt.func),p<r.length-1||!h){let T=d>.7?1:d>0?3:d>-.7?1:3,u=Math.abs(d)<.7?1:3;this.drawText({align:10*T+u,x:Math.round(g*d),y:Math.round(m*_),text:this.format(r[p]),color:this.getColor(t.fRadialLabelColor),latex:0}),this.options.rdot&&this.draw_g.append("ellipse").attr("cx",Math.round(g*d)).attr("cy",Math.round(m*_)).attr("rx",3).attr("ry",3).style("fill","red")}if(s>1&&(p<r.length-1||!h)){let T=(r[1]-r[0])/s;for(let u=1;u<s;++u){let $=r[p]+T*u;if($>this.scale_rmax)break;g=this.r($),m=g/this.szx*this.szy,this.draw_g.append("ellipse").attr("cx",0).attr("cy",0).attr("rx",Math.round(g)).attr("ry",Math.round(m)).style("fill","none").style("pointer-events",l).call(this.gridatt.func)}}}return d<.999&&this.draw_g.append("path").attr("d",`M0,0L${Math.round(this.szx*d)},${Math.round(this.szy*_)}`).style("pointer-events",l).call(this.lineatt.func),this.finishTextDrawing()}).then(()=>this.options.NoLabels?!0:this.drawPolarLabels(t,i)).then(()=>{if(s=Math.floor(t.fNdivPol%1e4/100),s>1)for(let f=0;f<i*s;++f){if(f%s===0)continue;let d=-f*2*Math.PI/i/s;this.draw_g.append("svg:path").attr("d",`M0,0L${Math.round(this.szx*Math.cos(d))},${Math.round(this.szy*Math.sin(d))}`).call(this.gridatt.func)}this.isBatchMode()||(N.assign(this),v(this,O),this.assignZoomHandler(this.draw_g))})})}fillContextMenuItems(t){let e=this.getObject();t.sub("Axis range"),t.addchk(e.fRadian,"Radian",r=>{e.fRadian=r,e.fDegree=e.fGrad=!1,this.interactiveRedraw("pad",r?"exec:SetToRadian()":"exec:SetTwoPi()")},"Handle data angles as radian range 0..2*Pi"),t.addchk(e.fDegree,"Degree",r=>{e.fDegree=r,e.fRadian=e.fGrad=!1,this.interactiveRedraw("pad",r?"exec:SetToDegree()":"exec:SetTwoPi()")},"Handle data angles as degree range 0..360"),t.addchk(e.fGrad,"Grad",r=>{e.fGrad=r,e.fRadian=e.fDegree=!1,this.interactiveRedraw("pad",r?"exec:SetToGrad()":"exec:SetTwoPi()")},"Handle data angles as grad range 0..200"),t.endsub(),t.addSizeMenu("Axis angle",0,315,45,this.options.rangle||e.fAxisAngle,r=>{this.options.rangle=e.fAxisAngle=r,this.interactiveRedraw("pad",`exec:SetAxisAngle(${r})`)})}assignZoomHandler(t){t.on("mouseenter",e=>this.mouseEvent("enter",e)).on("mousemove",e=>this.mouseEvent("move",e)).on("mouseleave",e=>this.mouseEvent("leave",e)),w.Zooming&&t.on("dblclick",e=>this.mouseDoubleClick(e)),w.Zooming&&w.ZoomWheel&&t.on("wheel",e=>this.mouseWheel(e))}static draw(t,e,r){return c(this,null,function*(){let s=C(t);if(s){if(s.getObject()===e)return s;throw Error("Cannot superimpose TGraphPolargram with any other drawings")}let i=new y(t,e,r);return F(i,!1).then(()=>(i.setAsMainPainter(),i.redraw())).then(()=>i)})}},j=class y extends A{decodeOptions(t){let e=new b(t||"L");this.options||(this.options={});let r=e.check("RDOT"),s=e.check("RANGLE",!0)?e.partAsInt():0;Object.assign(this.options,{mark:e.check("P"),err:e.check("E"),fill:e.check("F"),line:e.check("L"),curve:e.check("C"),radian:e.check("R"),degree:e.check("D"),grad:e.check("G"),Axis:e.check("N")?"N":""}),e.check("O")&&(this.options.Axis+="O"),r&&(this.options.Axis+="_rdot"),s&&(this.options.Axis+=`_rangle${s}`),this.storeDrawOpt(t)}updateObject(t,e){return this.matchObjectType(t)?(e&&e!==this.options.original&&this.decodeOptions(e),this._draw_axis&&t.fPolargram&&this.getMainPainter().updateObject(t.fPolargram),delete t.fPolargram,Object.assign(this.getObject(),t),!0):!1}redraw(){return this.drawGraphPolar().then(()=>this.updateTitle())}drawGraphPolar(){return c(this,null,function*(){let t=this.getObject(),e=this.getMainPainter();if(!t||!e?.$polargram)return;if(this.options.mark&&this.createAttMarker({attr:t}),(this.options.err||this.options.line||this.options.curve)&&this.createAttLine({attr:t}),this.options.fill&&this.createAttFill({attr:t}),this.createG(),this._draw_axis&&!e.isNormalAngles()){let a=t.fEX?.length,o=t.fX[0],h=t.fX[0];for(let l=0;l<t.fNpoints;++l)o=Math.min(o,t.fX[l]-(a?t.fEX[l]:0)),h=Math.max(h,t.fX[l]+(a?t.fEX[l]:0));h+=(h-o)/t.fNpoints,e.setAnglesRange(o,h,!0)}this.draw_g.attr("transform",e.draw_g.attr("transform"));let r="",s="",i=[],n=this.isBatchMode()?null:"visibleFill";for(let a=0;a<t.fNpoints;++a){if(t.fY[a]>e.scale_rmax)continue;if(this.options.err){let h=e.translate(t.fX[a],t.fY[a]-t.fEY[a]),l=e.translate(t.fX[a],t.fY[a]+t.fEY[a]),f=e.translate(t.fX[a]+t.fEX[a],t.fY[a]),d=e.translate(t.fX[a]-t.fEX[a],t.fY[a]);s+=`M${h.grx},${h.gry}L${l.grx},${l.gry}M${f.grx},${f.gry}A${d.rx},${d.ry},0,0,1,${d.grx},${d.gry}`}let o=e.translate(t.fX[a],t.fY[a]);this.options.mark&&(r+=this.markeratt.create(o.grx,o.gry)),(this.options.curve||this.options.line||this.options.fill)&&i.push(o)}if((this.options.fill||this.options.line)&&i.length){let a=R(i,{line:!0});this.options.fill&&this.draw_g.append("svg:path").attr("d",a+"Z").style("pointer-events",n).call(this.fillatt.func),this.options.line&&this.draw_g.append("svg:path").attr("d",a).style("fill","none").style("pointer-events",n).call(this.lineatt.func)}this.options.curve&&i.length&&this.draw_g.append("svg:path").attr("d",R(i)).style("fill","none").style("pointer-events",n).call(this.lineatt.func),s&&this.draw_g.append("svg:path").attr("d",s).style("fill","none").style("pointer-events",n).call(this.lineatt.func),r&&this.draw_g.append("svg:path").attr("d",r).style("pointer-events",n).call(this.markeratt.func),this.isBatchMode()||(v(this,O),e.assignZoomHandler(this.draw_g))})}createPolargram(t){t.fPolargram||(t.fPolargram=z("TGraphPolargram"),this.options.radian?t.fPolargram.fRadian=!0:this.options.degree?t.fPolargram.fDegree=!0:this.options.grad&&(t.fPolargram.fGrad=!0));let e=t.fY[0]||0,r=e,s=t.fEY?.length;for(let i=0;i<t.fNpoints;++i)e=Math.min(e,t.fY[i]-(s?t.fEY[i]:0)),r=Math.max(r,t.fY[i]+(s?t.fEY[i]:0));return t.fPolargram.fRwrmin=e-(r-e)*.1,t.fPolargram.fRwrmax=r+(r-e)*.1,t.fPolargram}extractTooltip(t){if(!t)return null;let e=this.getObject(),r=this.getMainPainter(),s=1e10,i=-1,n=null;for(let h=0;h<e.fNpoints;++h){let l=r.translate(e.fX[h],e.fY[h]),f=(l.grx-t.x)**2+(l.gry-t.y)**2;f<s&&(s=f,i=h,n=l)}let a=5;if(this.markeratt?.used&&(a=this.markeratt.getFullSize()),Math.sqrt(s)>a)return null;let o={name:this.getObject().fName,title:this.getObject().fTitle,x:n.grx,y:n.gry,color1:(this.markeratt?.used?this.markeratt.color:void 0)??(this.fillatt?.used?this.fillatt.color:void 0)??this.lineatt?.color,exact:Math.sqrt(s)<4,lines:[this.getObjectHint()],binindx:i,menu_dist:a,radius:a};return o.lines.push(`r = ${r.axisAsText("r",e.fY[i])}`,`phi = ${r.axisAsText("phi",e.fX[i])}`),e.fEY&&e.fEY[i]&&o.lines.push(`error r = ${r.axisAsText("r",e.fEY[i])}`),e.fEX&&e.fEX[i]&&o.lines.push(`error phi = ${r.axisAsText("phi",e.fEX[i])}`),o}updateTitle(){return c(this,null,function*(){if(!this._draw_axis)return this;let t=this.getPadPainter()?.findPainterFor(null,x,M),e=t?.getObject();if(!t||!e)return this;let r=this.getObject(),s=!r.TestBit(G)&&P.fOptTitle>0;return e.Clear(),s&&e.AddText(r.fTitle),t.redraw().then(()=>this)})}drawTitle(){return c(this,null,function*(){if(!this._draw_axis)return this;let t=this.getObject(),e=P,r=!t.TestBit(G)&&e.fOptTitle>0,s=this.getPadPainter(),i=s.findInPrimitives(x,M);return i?(i.Clear(),r&&i.AddText(t.fTitle),this):(i=z(M),Object.assign(i,{fName:x,fFillColor:e.fTitleColor,fFillStyle:e.fTitleStyle,fBorderSize:e.fTitleBorderSize,fTextFont:e.fTitleFont,fTextSize:e.fTitleFontSize,fTextColor:e.fTitleTextColor,fTextAlign:22}),r&&i.AddText(t.fTitle),X.draw(s,i,Y).then(n=>(n?.setSecondaryId(this,x),this)))})}showTooltip(t){let e=this.draw_g?.selectChild(".tooltip_bin");if(!t||!this.draw_g){e?.remove();return}e.empty()&&(e=this.draw_g.append("svg:ellipse").attr("class","tooltip_bin").style("pointer-events","none")),t.changed=e.property("current_bin")!==t.binindx,t.changed&&e.attr("cx",t.x).attr("cy",t.y).attr("rx",Math.round(t.radius)).attr("ry",Math.round(t.radius)).style("fill","none").style("stroke",t.color1).property("current_bin",t.binindx)}processTooltipEvent(t){let e=this.extractTooltip(t);return(!t||!t.disabled)&&this.showTooltip(e),e}static draw(t,e,r){return c(this,null,function*(){let s=new y(t,e,r);s.decodeOptions(r);let i=s.getMainPainter();if(i&&!i.$polargram)return console.error("Cannot superimpose TGraphPolar with plain histograms"),null;let n=Promise.resolve(null);return i||(s._draw_axis=!0,n=E.draw(t,s.createPolargram(e),s.options.Axis)),n.then(a=>(a?.setSecondaryId(s,"polargram"),s.addToPadPrimitives(),s.drawGraphPolar())).then(()=>s.drawTitle())})}};export{j as TGraphPolarPainter,E as TGraphPolargramPainter};
