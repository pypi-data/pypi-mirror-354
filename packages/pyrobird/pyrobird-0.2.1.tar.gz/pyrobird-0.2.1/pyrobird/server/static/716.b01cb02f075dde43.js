"use strict";(self.webpackChunkfirebird=self.webpackChunkfirebird||[]).push([[716],{716:(V,O,d)=>{d.r(O),d.d(O,{drawLeafPlayer:()=>U,drawTree:()=>k,drawTreePlayer:()=>P,drawTreePlayerKey:()=>W});var m=d(467),n=d(6998),L=d(5680),x=d(471),u=d(4779),E=d(9041),_=d(675),B=d(1516),C=d(4149),M=d(1462),A=d(895),K=d(9109),y=d(6714);function b(i,r,e){return T.apply(this,arguments)}function T(){return(T=(0,m.A)(function*(i,r,e){const s=r?._typename;return s&&(0,n.isStr)(s)?0===s.indexOf(n.clTH1)?B.TH1Painter.draw(i,r,e):0===s.indexOf(n.clTH2)?C.TH2Painter.draw(i,r,e):0===s.indexOf(n.clTH3)?M.TH3Painter.draw(i,r,e):0===s.indexOf(n.clTGraph)?A.k.draw(i,r,e):s===n.clTPolyMarker3D&&r.$hist?M.TH3Painter.draw(i,r.$hist,e).then(()=>{const t=new _.JW(i,r,e);return t.addToPadPrimitives(),t.redraw=K.Y,t.redraw()}):Promise.reject(Error(`Object of type ${s} cannot be draw with TTree`)):Promise.reject(Error("Object without type cannot be draw with TTree"))})).apply(this,arguments)}function $(i,r){return g.apply(this,arguments)}function g(){return(g=(0,m.A)(function*(i,r){if(r||this.last_pr){if(this.dump||this.dump_entries||this.testio){if(!r)return;if((0,n.isBatchMode)()){const s=new E.b8(this.drawid);return s.selectDom().property("_json_object_",i),s}if((0,n.isFunc)(n.internals.drawInspector))return n.internals.drawInspector(this.drawid,i);const e=(0,n.create)(n.clTObjString);return e.fString=(0,n.toJSON)(i,2),(0,_.as)(this.drawid,e)}return this.last_pr||(this.last_pr=Promise.resolve(!0)),this.last_pr.then(()=>(this.obj_painter?this.last_pr=this.obj_painter.redrawObject(i).then(()=>this.obj_painter):i?this.last_pr=b(this.drawid,i,this.drawopt).then(e=>(this.obj_painter=e,r||(this.last_pr=null),e)):(r&&console.log("no result after tree drawing"),this.last_pr=!1),r?this.last_pr:null))}})).apply(this,arguments)}function I(i){return i.draw_first=!0,i.configureOnline=function(r,e,s,t,a){this.setItemName(r,"",this),this.url=e,this.root_version=t,this.askey=s,this.draw_expr=a},i.configureTree=function(r){this.local_tree=r},i.showExtraButtons=function(r){const e=this.selectDom(),s=this.local_tree?.fEntries||0;e.select(".treedraw_more").remove(),e.select(".treedraw_buttons").node().innerHTML+=`Cut: <input class="treedraw_cut ui-corner-all ui-widget" style="width:8em;margin-left:5px" title="cut expression"></input>Opt: <input class="treedraw_opt ui-corner-all ui-widget" style="width:5em;margin-left:5px" title="histogram draw options"></input>Num: <input class="treedraw_number" type='number' min="0" max="${s}" step="1000" style="width:7em;margin-left:5px" title="number of entries to process (default all)"></input>First: <input class="treedraw_first" type='number' min="0" max="${s}" step="1000" style="width:7em;margin-left:5px" title="first entry to process (default first)"></input><button class="treedraw_clear" title="Clear drawing">Clear</button>`,e.select(".treedraw_exe").on("click",()=>this.performDraw()),e.select(".treedraw_cut").property("value",r?.parse_cut||"").on("change",()=>this.performDraw()),e.select(".treedraw_opt").property("value",r?.drawopt||"").on("change",()=>this.performDraw()),e.select(".treedraw_number").attr("value",r?.numentries||""),e.select(".treedraw_first").attr("value",r?.firstentry||""),e.select(".treedraw_clear").on("click",()=>(0,_.tP)(this.drawid))},i.showPlayer=function(r){const e=this.selectDom();this.drawid="jsroot_tree_player_"+n.internals.id_counter+++"_draw";const s=r?.parse_cut||r?.numentries||r?.firstentry;e.html(`<div style="display:flex; flex-flow:column; height:100%; width:100%;"><div class="treedraw_buttons" style="flex: 0 1 auto;margin-top:0.2em;"><button class="treedraw_exe" title="Execute draw expression" style="margin-left:0.5em">Draw</button>Expr:<input class="treedraw_varexp treedraw_varexp_info" style="width:12em;margin-left:5px" title="draw expression"></input><label class="treedraw_varexp_info">\u24d8</label><button class="treedraw_more">More</button></div><div style="flex: 0 1 auto"><hr/></div><div id="${this.drawid}" style="flex: 1 1 auto; overflow:hidden;"></div></div>`),this.setTopPainter(),this.local_tree&&e.select(".treedraw_buttons").attr("title","Tree draw player for: "+this.local_tree.fName),e.select(".treedraw_exe").on("click",()=>this.performDraw()),e.select(".treedraw_varexp").attr("value",r?.parse_expr||this.draw_expr||"px:py").on("change",()=>this.performDraw()),e.select(".treedraw_varexp_info").attr("title","Example of valid draw expressions:\n  px - 1-dim draw\n  px:py - 2-dim draw\n  px:py:pz - 3-dim draw\n  px+py:px-py - use any expressions\n  px:py>>Graph - create and draw TGraph\n  px:py>>dump - dump extracted variables\n  px:py>>h(50,-5,5,50,-5,5) - custom histogram\n  px:py;hbins:100 - custom number of bins"),s?this.showExtraButtons(r):e.select(".treedraw_more").on("click",()=>this.showExtraButtons(r)),this.checkResize(),(0,y.d7)(this)},i.getValue=function(r){const e=this.selectDom().select(r);if(e.empty())return;const s=e.property("value");return void 0!==s?s:e.attr("value")},i.performLocalDraw=function(){if(!this.local_tree)return;const r=this.selectDom(),e={expr:this.getValue(".treedraw_varexp")};r.select(".treedraw_more").empty()&&(e.cut=this.getValue(".treedraw_cut"),e.cut||delete e.cut,e.drawopt=this.getValue(".treedraw_opt"),"dump"===e.drawopt&&(e.dump=!0,e.drawopt=""),e.drawopt||delete e.drawopt,e.numentries=parseInt(this.getValue(".treedraw_number")),Number.isInteger(e.numentries)||delete e.numentries,e.firstentry=parseInt(this.getValue(".treedraw_first")),Number.isInteger(e.firstentry)||delete e.firstentry),(0,_.tP)(this.drawid),e.drawid=this.drawid,e.progress=$.bind(e),(0,u.treeDraw)(this.local_tree,e).then(s=>e.progress(s,!0))},i.getDrawOpt=function(){let r="player";const e=this.getValue(".treedraw_varexp");return e&&(r+=":"+e),r},i.performDraw=function(){if(this.local_tree)return this.performLocalDraw();const r=this.selectDom();let e=this.url+"/exe.json.gz?compact=3&method=Draw",s=this.getValue(".treedraw_varexp"),t="h_tree_draw",a="";const o=s.indexOf(">>");if(o<0)s+=`>>${t}`;else{t=s.slice(o+2),"+"===t[0]&&(t=t.slice(1));const f=t.indexOf("(");f>0&&(t=t.slice(0,f))}if(r.select(".treedraw_more").empty()){const f=this.getValue(".treedraw_cut");let p=this.getValue(".treedraw_number"),c=this.getValue(".treedraw_first");a=this.getValue(".treedraw_opt"),e+=`&prototype="const char*,const char*,Option_t*,Long64_t,Long64_t"&varexp="${s}"&selection="${f}"`,p||(p="TTree::kMaxEntries"),c||(c="0"),e+=`&option="${a}"&nentries=${p}&firstentry=${c}`}else e+=`&prototype="Option_t*"&opt="${s}"`;e+=`&_ret_object_=${t}`;const l=()=>{(0,n.httpRequest)(e,"object").then(f=>{(0,_.tP)(this.drawid),b(this.drawid,f,a)})};this.draw_expr=s,this.askey?(this.askey=!1,(0,n.httpRequest)(this.url+"/root.json.gz?compact=3","text").then(l)):l()},i.checkResize=function(){(0,_.XR)(this.drawid)},i}function P(i,r,e,s){let t=i.findItem(r),a="",o=0;const l=i.getTopOnlineItem(t);if(!t||!l)return null;if(s){for(a=t._name;t&&!t._ttree;)t=t._parent;if(!t)return null;r=i.itemFullName(t)}const f=i.getOnlineItemUrl(r);if(!f)return null;const p=l._root_version||400129,c=i.getDisplay();if(!c)return null;const R=c.findFrame(r,!0);if(!R)return null;const S=(0,L.Lt)(R).attr("id"),h=new E.b8(S);if(t._childs&&!s)for(let v=0;v<t._childs.length;++v){const w=t._childs[v];w&&w._kind&&0===w._kind.indexOf(n.prROOT+"TLeaf")&&o<2&&(o++>0&&(a+=":"),a+=w._name)}return I(h),h.configureOnline(r,f,e,p,a),h.showPlayer(),h}function W(i,r){return P(i,r,!0)}function U(i,r){return P(i,r,!1,!0)}function k(i,r,e){return D.apply(this,arguments)}function D(){return(D=(0,m.A)(function*(i,r,e){let a,o,s=r,t=e;if(r._typename===u.clTBranchFunc?(t={expr:`.${r.func}()`,branch:r.branch},e&&0===e.indexOf("dump")?t.expr+=">>"+e:e&&(t.expr+=e),s=r.branch.$tree):r.$branch?(t={expr:`.${r.fName}${e||""}`,branch:r.$branch},(t.branch.fType===u.kClonesNode||t.branch.fType===u.kSTLNode)&&(t.expr=e,t.direct_branch=!0),s=r.$branch.$tree):r.$tree?(!e&&r.fStreamerType&&r.fStreamerType!==x.V$&&r.fStreamerType>=x.Ph&&r.fStreamerType<=x.Ql&&(e="dump"),t={expr:e,branch:r},s=r.$tree):(t||(t="player"),(0,n.isStr)(t)&&(t={expr:t})),!s)throw Error("No TTree object available for TTree::Draw");if((0,n.isStr)(t.expr)){const l=t.expr.indexOf("player");0===l?(t.player=!0,t.expr=t.expr.slice(6),":"===t.expr[0]&&(t.expr=t.expr.slice(1))):l>=0&&l===t.expr.length-6&&(t.player=!0,t.expr=t.expr.slice(0,l),l>0&&";"===t.expr[l-1]&&(t.expr=t.expr.slice(0,l-1)))}if(t.player?(a=new _.JW(i,r,e),I(a),a.configureTree(s),a.showPlayer(t),t.drawid=a.drawid):t.drawid=i,t.progress=$.bind(t),"testio"===t.expr)t.testio=!0,t.showProgress=l=>(0,y.Rh)(l,-1,()=>{t._break=1}),o=(0,u.treeIOTest)(s,t);else{if(!t.expr&&!t.branch)return a;o=(0,u.treeDraw)(s,t)}return o.then(l=>t.progress(l,!0))})).apply(this,arguments)}u.TDrawSelector.prototype.ShowProgress=function(i){let r,e;if(void 0!==i&&Number.isFinite(i))if(this._break)r="Breaking ... ",e="break";else{if(this.last_progress!==i){const t=i-this.last_progress;this.aver_diff||(this.aver_diff=t),this.aver_diff=.3*t+.7*this.aver_diff}this.last_progress=i;let s=0;this.aver_diff<=0?s=0:this.aver_diff<1e-4?s=3:this.aver_diff<.001?s=2:this.aver_diff<.01&&(s=1),r=`TTree draw ${(100*i).toFixed(s)} % `}else r=e="";return(0,y.Rh)(r,0,()=>{this._break=1}),e}}}]);