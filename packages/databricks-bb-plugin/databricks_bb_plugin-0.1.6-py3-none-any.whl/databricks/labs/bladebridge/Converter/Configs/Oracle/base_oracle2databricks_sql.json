{
	"target_file_extension" : "sql",
	//"inherit_from":["general_sql_specs.json"],
	"CUSTOM_CONVERTER_MODULES" : ["databricks_output_hooks_v2.pl", "oracle_source_hooks.pl"],
	
	"COMBINED_CUSTOM_MODULES_LOAD" : 1, //loads all files at the same time to ensure vars can be shared
	"initialize_hooks_call" : "::init_databricks_hooks", //initialize context, pass all relevant info
	"source_prescan_routine" : "::oracle_prescan",
	"preprocess_file" : "1",
	"preprocess_routine" : "::preprocess_for_databricks",
	"code_fragment_breakers": {
		"line_end": ["\;"]
	},
	"catalogs":[
	{"DMI_MSHEDW_QA":["COMN_STG","HI_STG"]},
	{"DMI_MSHEDW_QA_SILVER":["HI_EDW","HI_MD_STG","HI_PRSNTN"]},
	{"DMI_MSHEDW_QA_GOLD":["CI_EDW","GPO_EDW","RWE_EDW","HI_MD_PRSNTN"]}
	],
	
	//"use_prefix":"USE CATALOG DMI_MSHEDW_QA;\n",
	//"target_catalog":"DMI_MSHEDW_QA_SILVER",
	//"prefix_tag" : "<python>",
	"generate_widget_to_variable_assignments" : 1,
	"suppress_lines_containing": ["ALTER\s+SESSION"],
	"line_suppression_behavior": "ELIMINATE", //choices: COMMENT or ELIMINATE
	"strip_execute": true,
	"temp_view_creation_statement" : "CREATE OR REPLACE TEMPORARY VIEW %TABLE_NAME% AS\n\n%INNER_SQL%\n;", //ensure there are %TABLE_NAME% and %INNER_SQL% tokens present in this spec

	"stmt_categorization_patterns": [
		//{"category": "CTE", "patterns" : [".*?\bWITH\b.*?\;"]},
		{"category": "LOAD_DATA", "patterns" : ["\bLOAD\s+DATA\b"]},

	    {"category": "TABLE_DDL", "patterns" : [".*?CREATE\s+TABLE",".*?CREATE\s+SET.*\s+TABLE",".*?CREATE\s+MULTISET.*\s+TABLE",".*?CREATE\s+VOLATILE.*\s+TABLE",".*?CREATE\s+TEMP.*\s+TABLE",".*?CREATE\s+GLOBAL\s+TEMPORARY",".*?CREATE\s+PRIVATE\s+TEMPORARY",".*?CREATE\s+LOCAL\s+TEMPORARY"]},
		{"category": "INSERT_ALL", "patterns" : [".*INSERT\s+ALL"]},	  
		{"category": "INSERT_FIRST", "patterns" : [".*INSERT\s+FIRST"]},
        {"category": "UPDATE_FROM", "patterns" : [".*UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\s+"]},	
		{"category": "DELETE_FROM", "patterns" : [".*?delete\s+from\s+(\w*\.*\w+)\s+(\w+)\s+(\w+)\s+where(.*?)"]}	
		],
		
	"fragment_handling" :
	{
		//"CTE" : "::cte",
		"LOAD_DATA":"::load_data",
		"TABLE_DDL" : "::table_keyword_removal",
		"INSERT_ALL" : "::insert_all",
		"INSERT_FIRST" : "::insert_first",
		//"FETCH_INTO" : "::fetch_into",
		"UPDATE_FROM" : "::update_from",
		"DELETE_FROM" : "::delete_from",
		//"CREATE_PACKAGE" : "::read_file",
		"__DEFAULT_HANDLER__" : "::databricks_default_handler"

	},

	
	"commands" : {
		//"SELECT_INTO_QUERY" : "%COLUMNS%, = spark.sql(f\"\"\"%QUERY%\"\"\").first().asDict().values()\n",
		//"SELECT_INTO_SET" : "spark.conf.set(\"var.%VARIABLE%\", %VARIABLE%)\n",
		"UNPIVOT_TO_STACK" : "SELECT\n*,\nstack(\n%COLUMN_COUNT% ,\n%CONVERTED_UNPIVOT_IN_CLAUSE%\n) AS (%UNPIVOT_FOR_CLAUSE%, %UNPIVOT_CLAUSE%)\nFROM %TABLE_NAME%\n;\n",
		"UNPIVOT_TO_STACK_INCLUDE_NULLS_WHERE" : "SELECT * FROM (\nSELECT\n*,\nstack(\n%COLUMN_COUNT% ,\n%CONVERTED_UNPIVOT_IN_CLAUSE%\n) AS (%UNPIVOT_FOR_CLAUSE%, %UNPIVOT_CLAUSE%)\nFROM %TABLE_NAME%\n)WHERE %UNPIVOT_CLAUSE% IS NOT null;\n"
		//"UNPIVOT_INCLUDE_NULLS_WHERE" : "WHERE %UNPIVOT_CLAUSE% IS NOT null",
		//"SPARK_WITH_HEAD" : "spark.sql(f\"%VALUE%\").head()[0];",
		//"SWAP" : "spark.sql(\"\"\"%QUERY%\"\"\")\n"
	},
	
	"line_subst" : [
	       // sql functions to python
		    {"from" : "\w+\.\w+\%TYPE", "to" : ""},
			{"from" : "else\;", "to" : "else"},
			{"from" : "\{(.*?)\}\s*\|\|", "to" : "$1||"},
			{"from" : "declare\;", "to" : ""},
			{"from" : "\bCONSTANT\b", "to" : ""},
			{"from" : "(\bTYPE\s+\w+\s+is\b.*)", "to" : ""},
			{"from" : "(\w+\s+SYS_REFCURSOR)", "to" : ""},

			{"from" : "(?<!\.)\bROWNUM\b", "to" : "row_number() over (order by 1) as ROWNUM_done_"},
            {"from" : "(?<!\.)\bROWID\b",  "to" : "row_number() over (order by 1) as ROWID_done_"},
			{"from" : "\bPIVOT\s+XML", "to" : "PIVOT XML --FIXME databricks.migrations.unsupported PIVOT XML clause not converted","first_match":1},
			{"from" : "\bCREATE\s+SEQUENCE", "to" : "CREATE SEQUENCE --FIXME databricks.migrations.unsupported CREATE SEQUENCE  not converted","first_match":1},
            {"from" : "(\w+).NEXTVAL", "to" : "$1.NEXTVAL --FIXME databricks.migrations.unsupported $1.NEXTVAL  not converted","first_match":1},
            {"from" : "(\w+).CURVAL", "to" : "$1.NEXTVAL --FIXME databricks.migrations.unsupported $1.CURVAL  not converted","first_match":1},
            {"from" : "\bCOLLATE\b\s+(\w+)", "to" : "/*FIX ME databricks.migration.unsupported.feature commented collation $1*/"},
 			{"from" : "GENERATED\s+BY\s+DEFAULT\s+ON\s+NULL\s+AS", "to" : "--FIXME databricks.migration.unsupported.feature GENERATED BY DEFAULT ON NULL  column attribiute\nGENERATED BY DEFAULT AS "},
			{"from" : "(CONSTRAINT\s+\w+\s+PRIMARY\s+KEY)(?!\(done\))", "to" : "-- FIXME databricks.migration.dependency.review PK/FK constraints needs Unity Catalog table\n$1(done)"},
			{"from" : "(CONSTRAINT\s+\w+\s+NOT\s+NULL)(?!\(done\))", "to" : "--$1(done) FIXME databricks.migration.dependency.review PK/FK constraints needs Unity Catalog table\n(done)"},
			{"from" : "(CONSTRAINT\s+\w+\s+NULL)(?!\(done\))", "to" : "--$1(done) FIXME databricks.migration.dependency.review PK/FK constraints needs Unity Catalog table\n"},
	        {"from" : ".*?ALTER\s+SESSION.*?\;", "to" : ""},
			{"from" : "\bSYSDATE\b", "to" : "CURRENT_DATE"},
			{"from" : "\bCONSTRAINT\b\s+\'*\w+\'*\s+UNIQUE\s*\(.*?\)", "to" : "","statement_categories" : ["TABLE_DDL"]},
			{"from" : "\bCONSTRAINT\b\s+\'*\w+\'*", "to" : "","statement_categories" : ["TABLE_DDL"]},
			//
			{"from" : "NATIONAL\s+\bCHARACTER\s+VARYING\s*\(\d+\)", "to" : "STRING"},	
			{"from" : "NATIONAL\s+CHAR\s+VARYING\s*\(\d+\)", "to" : "STRING"},	
			{"from" : "NATIONAL\s+CHAR\s*\(\d+\)", "to" : "STRING"},	
			{"from" : "NATIONAL\s+CHARACTER\s*\(\d+\)", "to" : "STRING"},	
			{"from" : "\bNCHAR\s+VARYING\s*\(\d+\)", "to" : "STRING"},	
			{"from" : "\bCHAR\b\s*\(\d+\)", "to" : "STRING"},
			{"from" : "\bNCHAR\b\s*\(\d+\)", "to" : "STRING"},
			{"from" : "\bVARCHAR\b\s*\(\d+\)", "to" : "STRING"},
			{"from" : "\bNVARCHAR\b\s*\(\d+\)", "to" : "STRING"},
			{"from" : "\bVARCHAR2\b\s*\(\d+\)", "to" : "STRING"},
			{"from" : "\bNVARCHAR2\b\s*\(\d+\)", "to" : "STRING"},
			{"from" : "\bVARCHAR2\b\s*\(\s*\d+\s+CHAR\s*\)", "to" : "STRING"},
			{"from" : "\bVARCHAR2\b\s*\(\s*\d+\s+BYTE\s*\)", "to" : "STRING"},	 
			{"from" : "\bVARCHAR\b\s*\(\s*\d+\s+CHAR\s*\)", "to" : "STRING"},
			{"from" : "\bVARCHAR\b\s*\(\s*\d+\s+BYTE\s*\)", "to" : "STRING"},
			{"from" : "\bCHARACTER\b\s*\(\d+\)", "to" : "STRING"},	
			{"from" : "\bCHARACTER\s+VARYING\s*\(\d+\)", "to" : "STRING"},	
			{"from" : "\bCHAR\s+VARYING\s*\(\d+\)", "to" : "STRING"},	
			{"from" : "(RAW\s*\(\d+\))(?!\-\-FIXME)", "to" : "$1--FIXME databricks.migration.task "},	
			{"from" : "(LONG\s+RAW\s*\(\d+\))(?!\-\-FIXME)", "to" : "$1--FIXME databricks.migration.task "},
			{"from" : "(LONG\s+RAW)(?!\-\-FIXME)", "to" : "$1--FIXME databricks.migration.task "},
			{"from" : "(\bblob\b)(?!\-\-FIXME)", "to" : "$1--FIXME databricks.migration.task "},
			{"from" : "(\bclob\b)(?!\-\-FIXME)", "to" : "$1--FIXME databricks.migration.task "},
			{"from" : "(\bnclob\b)(?!\-\-FIXME)", "to" : "$1--FIXME databricks.migration.task "},
			{"from" : "(\bbfile\b)(?!\-\-FIXME)", "to" : "$1--FIXME databricks.migration.task "},
			{"from" : "(\bjson\b)(?!\-\-FIXME)", "to" : "$1--FIXME databricks.migration.task ","statement_categories" : ["TABLE_DDL"]},
			{"from" : "(TIMESTAMP\s+WITH\s+TIME\s+ZONE)", "to" : "TIMESTAMP"},
			{"from" : "TIMESTAMP\s+WITH\s+LOCAL\s+TIME\s+ZONE", "to" : "TIMESTAMP"},
			{"from" : "(TIMESTAMP\s*\(\d\)\s+WITH\s+TIME\s+ZONE)", "to" : "TIMESTAMP"},
			{"from" : "TIMESTAMP\s*\(\d\)\s+WITH\s+LOCAL\s+TIME\s+ZONE", "to" : "TIMESTAMP"},
			{"from" : "\bLONG\b(?!\s+RAW)", "to" : "BIGINT"},
			{"from" : "\bNUMBER\s*\(\s*\*\s*\,\s*\d\s*\)", "to" : "NUMERIC"},
			{"from" : "\bNUMBER\b(?!\s*\()", "to" : "BIGINT"},
			{"from" : "AS\s+\bNUMBER\b(?!\s*\()", "to" : "AS BIGINT"},
			{"from" : "\bNUMBER\b\s*\(", "to" : "NUMERIC("},
			{"from" : "AS\s+\bNUMBER\b", "to" : "AS NUMERIC"},
			{"from" : "\:\:NUMBER\b(?!\s*\()", "to" : "::BIGINT"},
			{"from" : "\:\:NUMBER\b", "to" : "::NUMERIC"},
			{"from" : "\bCHAR\b", "to" : "STRING"},
			{"from" : "\bNCHAR\b", "to" : "STRING","statement_categories" : ["TABLE_DDL"]},
			{"from" : "\:\:NCHAR\b", "to" : "::STRING"},
			{"from" : "as\s+ NCHAR\b", "to" : "as STRING"},
			{"from" : "\bVARCHAR\b", "to" : "STRING","statement_categories" : ["TABLE_DDL"]},
			{"from" : "\:\:VARCHAR\b", "to" : "::STRING"},
			{"from" : "as\s+VARCHAR\b", "to" : "as STRING"},
			{"from" : "\bNVARCHAR\b", "to" : "STRING","statement_categories" : ["TABLE_DDL"]},
			{"from" : "\:\:NVARCHAR\b", "to" : "::STRING"},
			{"from" : "as\s+NVARCHAR\b", "to" : "as STRING"},
			{"from" : "\bVARCHAR2\b", "to" : "STRING","statement_categories" : ["TABLE_DDL"]},
			{"from" : "\:\:VARCHAR2\b", "to" : "::STRING"},
			{"from" : "as\s+VARCHAR2\b", "to" : "as STRING"},
			{"from" : "\bNVARCHAR2\b", "to" : "STRING","statement_categories" : ["TABLE_DDL"]},
			{"from" : "\:\:NVARCHAR2\b", "to" : "::STRING"},
			{"from" : "as\s+NVARCHAR2\b", "to" : "as STRING"},
			{"from" : "\TIMESTAMP\s+WITH\s+TIME\s+ZONE\b", "to" : "TIMESTAMP"},
			{"from" : "\TIMESTAMP\s+WITH\s+TIME\s+LOCAL\s+ZONE\b", "to" : "TIMESTAMP"},
			{"from" : "\bNVARCHAR2\b", "to" : "STRING"},
			{"from" : "\bCURRENT\s+DATE", "to" : "current_date"},
			{"from" : "SESSION_USER", "to" : "current_user"},
			{"from" : "SESSIONTIMEZONE", "to" : "current_timezone()"},
			{"from" : "\bdatetime\b", "to" : "timestamp"},
			{"from" : "\btimestamp\s*\(\s*\d+\s*\)", "to" : "timestamp"},
			{"from" : "\bdefault\b\s+\'*\w+\'*", "to" : "","statement_categories" : ["TABLE_DDL"]},
			{"from" : "\bCONSTRAINT\b\s+\'*\w+\'*\s+UNIQUE\s*\(.*?\)", "to" : "","statement_categories" : ["TABLE_DDL"]},
			{"from" : "SELECT\s+(\w+)\.NEXTVAL\s+FROM\s+DUAL", "to" : "SELECT 1 as %FIRST_COLUMN% /* $1 sequence*/"},
			{"from" : "#(\w+)#", "to" : "{$1}"},
			{"from" : "fmMMfm", "to" : "MM"},
			{"from" : "fmMMMfm", "to" : "MMM"},
			{"from" : "fmMONfm", "to" : "MON"},
			{"from" : "fmDDfm", "to" : "DD"},
			{"from" : "fmYYYYfm", "to" : "YYYY"},
			{"from" : "fmYYfm", "to" : "YY"},
			{"from" : "fmHHfm", "to" : "HH"},
			{"from" : "fmHH12fm", "to" : "HH12"},
			{"from" : "fmHH24fm", "to" : "HH24"},
			{"from" : "'YYYY\/MM\/DD hh24\:mi\:ss\'", "to" : "'y/MM/dd HH:mm:ss'"},
			{"from" : "'YYYY\/MM\/DD hh12\:mi\:ss\'", "to" : "'y/MM/dd hh:mm:ss'"},
			{"from" : "'MM\/DD\/YYYY hh12\:mi\:ss\'", "to" : "'MM/dd/y hh:mm:ss'"},
			{"from" : "'MM\/DD\/YYYY hh24\:mi\:ss\'", "to" : "'MM/dd/y HH:mm:ss'"},
			{"from" : "'YYYY\.MM\.DD hh24\:mi\:ss\'", "to" : "'y.MM.dd HH:mm:ss'"},
			{"from" : "'YYYY\.MM\.DD hh12\:mi\:ss\'", "to" : "'y.MM.dd hh:mm:ss'"},
			{"from" : "'MM\.DD\.YYYY hh12\:mi\:ss\'", "to" : "'MM.dd.y hh:mm:ss'"},
			{"from" : "'MM\.DD\.YYYY hh24\:mi\:ss\'", "to" : "'MM.dd.y HH:mm:ss'"},
			{"from" : "'YYYY\-MM\-DD hh24\:mi\:ss\'", "to" : "'y-MM-dd HH:mm:ss'"},
			{"from" : "'YYYY\-MM\-DD hh12\:mi\:ss\'", "to" : "'y-MM-dd hh:mm:ss'"},
			{"from" : "'MM\�DD\�YYYY hh12\:mi\:ss\'", "to" : "'MM�dd�y hh:mm:ss'"},
			{"from" : "'MM\�DD\�YYYY hh24\:mi\:ss\'", "to" : "'MM�dd�y HH:mm:ss'"},
			
			{"from" : "'YYYY\/MM\/DD hh24\:mi\:ss\.FF\'", "to" : "'y/MM/dd HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\/MM\/DD hh12\:mi\:ss\.FF\'", "to" : "'y/MM/dd hh:mm:ss.SSSS'"},
			{"from" : "'MM\/DD\/YYYY hh12\:mi\:ss\.FF\'", "to" : "'MM/dd/y hh:mm:ss.SSSS'"},
			{"from" : "'MM\/DD\/YYYY hh24\:mi\:ss\.FF\'", "to" : "'MM/dd/y HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\.MM\.DD hh24\:mi\:ss\.FF\'", "to" : "'y.MM.dd HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\.MM\.DD hh12\:mi\:ss\.FF\'", "to" : "'y.MM.dd hh:mm:ss.SSSS'"},
			{"from" : "'MM\.DD\.YYYY hh12\:mi\:ss\.FF\'", "to" : "'MM.dd.y hh:mm:ss.SSSS'"},
			{"from" : "'MM\.DD\.YYYY hh24\:mi\:ss\.FF\'", "to" : "'MM.dd.y HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\-MM\-DD hh24\:mi\:ss\.FF\'", "to" : "'y-MM-dd HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\-MM\-DD hh12\:mi\:ss\.FF\'", "to" : "'y-MM-dd hh:mm:ss.SSSS'"},
			{"from" : "'MM\�DD\�YYYY hh12\:mi\:ss\.FF\'", "to" : "'MM�dd�y hh:mm:ss.SSSS'"},
			{"from" : "'MM\�DD\�YYYY hh24\:mi\:ss\.FF\'", "to" : "'MM�dd�y HH:mm:ss.SSSS'"},
			
			{"from" : "'YYYY\/MM\/DD hh24\:mi\:ss\.FF AM\'", "to" : "'y/MM/dd HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\/MM\/DD hh12\:mi\:ss\.FF AM\'", "to" : "'y/MM/dd hh:mm:ss.SSSS a'"},
			{"from" : "'MM\/DD\/YYYY hh12\:mi\:ss\.FF AM\'", "to" : "'MM/dd/y hh:mm:ss.SSSS a'"},
			{"from" : "'MM\/DD\/YYYY hh24\:mi\:ss\.FF AM\'", "to" : "'MM/dd/y HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\.MM\.DD hh24\:mi\:ss\.FF AM\'", "to" : "'y.MM.dd HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\.MM\.DD hh12\:mi\:ss\.FF AM\'", "to" : "'y.MM.dd hh:mm:ss.SSSS a'"},
			{"from" : "'MM\.DD\.YYYY hh12\:mi\:ss\.FF AM\'", "to" : "'MM.dd.y hh:mm:ss.SSSS a'"},
			{"from" : "'MM\.DD\.YYYY hh24\:mi\:ss\.FF AM\'", "to" : "'MM.dd.y HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\-MM\-DD hh24\:mi\:ss\.FF AM\'", "to" : "'y-MM-dd HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\-MM\-DD hh12\:mi\:ss\.FF AM\'", "to" : "'y-MM-dd hh:mm:ss.SSSS a'"},
			{"from" : "'MM\�DD\�YYYY hh12\:mi\:ss\.FF AM\'", "to" : "'MM�dd�y hh:mm:ss.SSSS a'"},
			{"from" : "'MM\�DD\�YYYY hh24\:mi\:ss\.FF AM\'", "to" : "'MM�dd�y HH:mm:ss.SSSS a'"},

			{"from" : "DDMONYYYY", "to" : "ddMMMy"},
			{"from" : "DD-MON-YYYY", "to" : "dd-MMM-y"},
			{"from" : "DD\.MON\.YYYY", "to" : "dd.MMM.y"},
			{"from" : "DD\-MON\-YYYY", "to" : "dd-MMM-y"},
			{"from" : "YYYYMONDD", "to" : "yMMMdd"},
			{"from" : "YYYY-MON-DD", "to" : "y-MMM-dd"},
			{"from" : "YYYY\.MON\.DD", "to" : "y.MMM.dd"},
			{"from" : "YYYY\-MON\-DD", "to" : "y-MMM-dd"},
			{"from" : "yyyymmdd", "to" : "yMMdd"}, 
			{"from" : "YYYYMMDD", "to" : "yMMdd"},
			{"from" : "YYYY\/MM\/DD", "to" : "y/MM/dd"},
			{"from" : "YYYY\.MM\.DD", "to" : "y.MM.dd"},
			{"from" : "YYYY\-MM\-DD", "to" : "y-MM-dd"},
			{"from" : "DDMMYYYY", "to" : "ddMMy"},
			{"from" : "DD\.MM\.YYYY", "to" : "dd.MM.y"},
			{"from" : "DD\-MM\-YYYY", "to" : "dd-MM-y"},
			{"from" : "DD\/MM\/YYYY", "to" : "dd/MM/y"},
			{"from" : "\bYYYYMM\b", "to" : "yMM"},
			{"from" : "\bYYYY\-MM\b", "to" : "y-MM"},
			{"from" : "\bYYYY\.MM\b", "to" : "y.MM"},
			{"from" : "\bYYYY\/MM\b", "to" : "y/MM"},
			{"from" : "MMDDYYYY", "to" : "MMddy"},
			{"from" : "MM\.DD\.YYYY", "to" : "MM.dd.y"},
			{"from" : "MM\-DD\-YYYY", "to" : "MM-dd-y"},
			{"from" : "MM\.DD\.YYYY", "to" : "MM.dd.y"},
			{"from" : "'YY\/MM\/DD hh24\:mi\:ss\'", "to" : "'yy/MM/dd HH:mm:ss'"},
			{"from" : "'YY\/MM\/DD hh12\:mi\:ss\'", "to" : "'yy/MM/dd hh:mm:ss'"},
			{"from" : "'MM\/DD\/YY hh12\:mi\:ss\'", "to" : "'MM/dd/yy hh:mm:ss'"},
			{"from" : "'MM\/DD\/YY hh24\:mi\:ss\'", "to" : "'MM/dd/yy HH:mm:ss'"},
			{"from" : "'YY\.MM\.DD hh24\:mi\:ss\'", "to" : "'yy.MM.dd HH:mm:ss'"},
			{"from" : "'YY\.MM\.DD hh12\:mi\:ss\'", "to" : "'yy.MM.dd hh:mm:ss'"},
			{"from" : "'MM\.DD\.YY hh12\:mi\:ss\'", "to" : "'MM.dd.yy hh:mm:ss'"},
			{"from" : "'MM\.DD\.YY hh24\:mi\:ss\'", "to" : "'MM.dd.yy HH:mm:ss'"},
			{"from" : "'YY\-MM\-DD hh24\:mi\:ss\'", "to" : "'yy-MM-dd HH:mm:ss'"},
			{"from" : "'YY\-MM\-DD hh12\:mi\:ss\'", "to" : "'yy-MM-dd hh:mm:ss'"},
			{"from" : "'MM\�DD\�YY hh12\:mi\:ss\'", "to" : "'MM�dd�yy hh:mm:ss'"},
			{"from" : "'MM\�DD\�YY hh24\:mi\:ss\'", "to" : "'MM�dd�yy HH:mm:ss'"},
			{"from" : "'MON\�DD\�YY hh24\:mi\:ss\'", "to" : "'MMM�dd�yy HH:mm:ss'"},
			{"from" : "'MON\�DD\-YY hh12\:mi\:ss\'", "to" : "'MMM�dd�yy hh:mm:ss'"},
			{"from" : "'MON\.DD\.YY hh24\:mi\:ss\'", "to" : "'MMM.dd.yy HH:mm:ss'"},
			{"from" : "'MON\.DD\.YY hh12\:mi\:ss\'", "to" : "'MMM.dd.yy hh:mm:ss'"},
			{"from" : "'MON\/DD\/YY hh24\:mi\:ss\'", "to" : "'MMM/dd/yy HH:mm:ss'"},
			{"from" : "'MON\/DD\/YY hh12\:mi\:ss\'", "to" : "'MMM/dd/yy hh:mm:ss'"},
			{"from" : "'DD\-MON\�YY hh24\:mi\:ss\'", "to" : "'dd-MMM�yy HH:mm:ss'"},
			{"from" : "'DD\-MON\�YY hh12\:mi\:ss\'", "to" : "'dd-MMM�yy hh:mm:ss'"},
			{"from" : "'DD\.MON\.YY hh24\:mi\:ss\'", "to" : "'dd.MMM.yy HH:mm:ss'"},
			{"from" : "'DD\.MON\.YY hh12\:mi\:ss\'", "to" : "'dd.MMM.yy hh:mm:ss'"},
			{"from" : "'DD\/MON\/YY hh24\:mi\:ss\'", "to" : "'dd/MMM/yy HH:mm:ss'"},
			{"from" : "'DD\/MON\/YY hh12\:mi\:ss\'", "to" : "'dd/MMM/yy hh:mm:ss'"},
			{"from" : "'MON\�DD\�YYYY hh24\:mi\:ss\'", "to" : "'MMM�dd�y HH:mm:ss'"},
			{"from" : "'MON\�DD\-YYYY hh12\:mi\:ss\'", "to" : "'MMM�dd�y hh:mm:ss'"},
			{"from" : "'MON\.DD\.YYYY hh24\:mi\:ss\'", "to" : "'MMM.dd.y HH:mm:ss'"},
			{"from" : "'MON\.DD\.YYYY hh12\:mi\:ss\'", "to" : "'MMM.dd.y hh:mm:ss'"},
			{"from" : "'MON\/DD\/YYYY hh24\:mi\:ss\'", "to" : "'MMM/dd/y HH:mm:ss'"},
			{"from" : "'MON\/DD\/YYYY hh12\:mi\:ss\'", "to" : "'MMM/dd/y hh:mm:ss'"},
			{"from" : "'DD\-MON\�YYYY hh24\:mi\:ss\'", "to" : "'dd-MMM�y HH:mm:ss'"},
			{"from" : "'DD\-MON\�YYYY hh12\:mi\:ss\'", "to" : "'dd-MMM�y hh:mm:ss'"},
			{"from" : "'DD\.MON\.YYYY hh24\:mi\:ss\'", "to" : "'dd.MMM.y HH:mm:ss'"},
			{"from" : "'DD\.MON\.YYYY hh12\:mi\:ss\'", "to" : "'dd.MMM.y hh:mm:ss'"},
			{"from" : "'DD\/MON\/YYYY hh24\:mi\:ss\'", "to" : "'dd/MMM/y HH:mm:ss'"},
			{"from" : "'DD\/MON\/YYYY hh12\:mi\:ss\'", "to" : "'dd/MMM/y hh:mm:ss'"},
			
			{"from" : "'YYYY\-MON\�DD hh24\:mi\:ss\'", "to" : "'y-MMM�dd HH:mm:ss'"},
			{"from" : "'YYYY\-MON\�DD hh12\:mi\:ss\'", "to" : "'y-MMM�dd hh:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh24\:mi\:ss\'", "to" : "'y.MMM.dd HH:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh12\:mi\:ss\'", "to" : "'y.MMM.dd hh:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh24\:mi\:ss\'", "to" : "'y/MMM/dd HH:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh12\:mi\:ss\'", "to" : "'y/MMM/dd hh:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh24\:mi\:ss\'", "to" : "'y-dd-MMM HH:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh12\:mi\:ss\'", "to" : "'y-dd-MMM hh:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh24\:mi\:ss\'", "to" : "'y.dd.MMM HH:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh12\:mi\:ss\'", "to" : "'y.dd.MMM hh:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh24\:mi\:ss\'", "to" : "'y/dd/MMM HH:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh12\:mi\:ss\'", "to" : "'y/dd/MMM hh:mm:ss'"},
			{"from" : "'YYYY\-MON\�DD hh24\:mi\:ss\'", "to" : "'y-MMM�dd HH:mm:ss'"},
			{"from" : "'YYYY\-MON\�DD hh12\:mi\:ss\'", "to" : "'y-MMM�dd hh:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh24\:mi\:ss\'", "to" : "'y.MMM.dd HH:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh12\:mi\:ss\'", "to" : "'y.MMM.dd hh:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh24\:mi\:ss\'", "to" : "'y/MMM/dd HH:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh12\:mi\:ss\'", "to" : "'y/MMM/dd hh:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh24\:mi\:ss\'", "to" : "'y-dd-MMM HH:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh12\:mi\:ss\'", "to" : "'y-dd-MMM hh:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh24\:mi\:ss\'", "to" : "'y.dd.MMM HH:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh12\:mi\:ss\'", "to" : "'y.dd.MMM hh:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh24\:mi\:ss\'", "to" : "'y/dd/MMM HH:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh12\:mi\:ss\'", "to" : "'y/dd/MMM hh:mm:ss'"},
			//
			{"from" : "'YYYY\-MON\�DD hh24\:mi\:ss\'", "to" : "'y-MMM�dd HH:mm:ss'"},
			{"from" : "'YYYY\-MON\�DD hh\:mi\:ss\'", "to" : "'y-MMM�dd hh:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh\:mi\:ss\'", "to" : "'y.MMM.dd hh:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh\:mi\:ss\'", "to" : "'y/MMM/dd hh:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh\:mi\:ss\'", "to" : "'y-dd-MMM hh:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh\:mi\:ss\'", "to" : "'y.dd.MMM hh:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh\:mi\:ss\'", "to" : "'y/dd/MMM hh:mm:ss'"},
			{"from" : "'YYYY\-MON\�DD hh\:mi\:ss\'", "to" : "'y-MMM�dd hh:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh\:mi\:ss\'", "to" : "'y.MMM.dd hh:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh\:mi\:ss\'", "to" : "'y/MMM/dd hh:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh\:mi\:ss\'", "to" : "'y-dd-MMM hh:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh\:mi\:ss\'", "to" : "'y.dd.MMM hh:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh\:mi\:ss\'", "to" : "'y/dd/MMM hh:mm:ss'"},
			
			{"from" : "DDMONYY", "to" : "ddMMMyy"},
			{"from" : "DD-MON-YY", "to" : "dd-MMM-yy"},
			{"from" : "DD\.MON\.YY", "to" : "dd.MMM.yy"},
			{"from" : "DD\-MON\-YY", "to" : "dd-MMM-yy"},
			{"from" : "YYMONDD", "to" : "yyMMMdd"},
			{"from" : "YY-MON-DD", "to" : "yy-MMM-dd"},
			{"from" : "YY\.MON\.DD", "to" : "yy.MMM.dd"},
			{"from" : "YY\-MON\-DD", "to" : "yy-MMM-dd"},
			{"from" : "YYMMDD", "to" : "yyMMdd"},
			{"from" : "YY\/MM\/DD", "to" : "yy/MM/dd"},
			{"from" : "YY\.MM\.DD", "to" : "yy.MM.dd"},
			{"from" : "YY\-MM\-DD", "to" : "yy-MM-dd"},
			{"from" : "DDMMYY", "to" : "ddMMyy"},
			{"from" : "DD\.MM\.YY", "to" : "dd.MM.yy"},
			{"from" : "DD\-MM\-YY", "to" : "dd-MM-yy"},
			{"from" : "DD\/MM\/YY", "to" : "dd/MM/yy"},
			{"from" : "MMDDYY", "to" : "MMddyy"},
			{"from" : "MM\.DD\.YY", "to" : "MM.dd.yy"},
			{"from" : "MM\-DD\-YY", "to" : "MM-dd-yy"},
			{"from" : "MM\.DD\.YY", "to" : "MM.dd.yy"},
			{"from" : "YYYY", "to" : "y"},
			{"from" : "\'hh24\:mi\:ss\'", "to" : "'HH:mm:ss'"},
			{"from" : "\'hh12\:mi\:ss\'", "to" : "'hh:mm:ss'"},
			{"from" : "\'hh24\.mi\.ss\'", "to" : "'HH.mm.ss'"},
			{"from" : "\'hh12\.mi\.ss\'", "to" : "'hh.mm.ss'"},
			{"from" : "hh24\:mi\:ss", "to" : "HH:mm:ss"},
			{"from" : "hh12\:mi\:ss", "to" : "hh:mm:ss"},
			{"from" : "hh24\.mi\.ss", "to" : "HH.mm.ss"},
			{"from" : "hh12\.mi\.ss", "to" : "hh.mm.ss"},
			{"from" : "HH\.MI\.SS", "to" : "hh.mm.ss"},
			{"from" : "HH\:MI\:SS", "to" : "hh:mm:ss"},
			{"from" : "YYYYMMDDHH24MISS", "to" : "yyyyMMddHHmmss"},
			{"from" : "TO_CHAR\s*\(\s*(\w+)\s*\,\s*\'Mon\'\s*\)", "to" : "DATE_FORMAT($1,'MMM')"},
			{"from" : "TO_CHAR\s*\(\s*\((\w+\s*\(*\s*\)*)\s*\:\:timestamp\s+AT\s+time\s+zone\s+(\'.*?\')\s*\)\:*\:*\w+\s*\,\s*\'IWIYYY\'\s*\)", "to" : "EXTRACT(WEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))||EXTRACT(YEAROFWEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))"},
			{"from" : "TO_CHAR\s*\(\s*\((\w+\s*\(*\s*\)*)\s*\:\:timestamp\s+AT\s+time\s+zone\s+(\'.*?\')\s*\)\:*\:*\w+\s*\,\s*\'IW\-IYYY\'\s*\)", "to" : "EXTRACT(WEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))||'-'||EXTRACT(YEAROFWEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))"},
			{"from" : "TO_CHAR\s*\(\s*\((\w+\s*\(*\s*\)*)\s*\:\:timestamp\s+AT\s+time\s+zone\s+(\'.*?\')\s*\)\:*\:*\w+\s*\,\s*\'IYYYIW\'\s*\)", "to" : "EXTRACT(YEAROFWEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))||EXTRACT(WEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))"},
			{"from" : "TO_CHAR\s*\(\s*\((\w+\s*\(*\s*\)*)\s+AT\s+time\s+zone\s+(\'.*?\')\s*\)\:*\:*\w+\s*\,\s*\'IWIYYY\'\s*\)", "to" : "EXTRACT(WEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))||EXTRACT(YEAROFWEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))"},
			{"from" : "TO_CHAR\s*\(\s*\((\w+\s*\(*\s*\)*)\s+AT\s+time\s+zone\s+(\'.*?\')\s*\)\:*\:*\w+\s*\,\s*\'IYYYIW\'\s*\)", "to" : "EXTRACT(YEAROFWEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))||EXTRACT(WEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))"},
			{"from" : "TO_CHAR\s*\(\s*\((\w+\s*\(*\s*\)*)\s+AT\s+time\s+zone\s+(\'.*?\')\s*\)\:*\:*\w+\s*\,\s*\'IW\-IYYY\'\s*\)", "to" : "EXTRACT(WEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))||'-'||EXTRACT(YEAROFWEEK from from_utc_timestamp(to_utc_timestamp($1, current_timezone()), $2))"},
			{"from" : "TO_CHAR\((\w*\.*\w*\.*\w+)\s*\,\'YYYYMMWW\'\)", "to" : "DATE_FORMAT($1,'yyyyMM')||EXTRACT(YEAROFWEEK from $1)"},
			{"from" : "TO_CHAR\((\w*\.*\w*\.*\w+)\s*\,\'IW\'\)", "to" : "EXTRACT(YEAROFWEEK from $1)"},
			{"from" : "TO_CHAR\((.*?)\,\s*\'IW\'\)", "to" : "WEEKOFYEAR($1)"},
			{"from" : "HH24\:MI\:SSxFF", "to" : "HH:mm:ss.SSSSSS"},
			{"from" : "TZH\:TZM", "to" : "Z"},
			{"from" : "TO_CHAR\s*\(\s*(\w+)\s*\,\s*\'Mon\'\s*\)", "to" : "DATE_FORMAT($1,'MMM')"},
			{"from" : "NOT\s+NULL", "to" : "NOT_NULL", "statement_categories" : ["TABLE_DDL"]}, //change NOT NULL to NOT_NULL
			{"from" : "\bNULL\b", "to" : "", "statement_categories" : ["TABLE_DDL"]}, // get rid of NULL words
			{"from" : "NOT_NULL", "to" : "NOT NULL", "statement_categories" : ["TABLE_DDL"]}, //change back from NOT_NULL to NOT NULL
			{"from" : "partition by (\w+\s*)\)", "to" : "PARTITION BY $1 ORDER BY 1 )"},
			{"from" : "partition by (\w+\s*\,\s*\w+\s*)\)", "to" : "PARTITION BY $1 ORDER BY 1 )"},
			{"from" : "partition by (\w+\s*\,\s*\w+\s*\,\s*\w+\s*)\)", "to" : "PARTITION BY $1 ORDER BY 1 )"},
			{"from" : "partition by (\w+\s*\,\s*\w+\s*\,\s*\w+\s*\,\s*\w+\s*)\)", "to" : "PARTITION BY $1 ORDER BY 1 )"},
			{"from" : "^\s*BEGIN\b", "to" : ""},
			{"from" : "^\s*END\;", "to" : ""},
			{"from" : "^\s*END_EMPTY\;", "to" : ""},
			{"from" : "^\/(?!\*)", "to" : ""},
			{"from" : "varchar\( dbutils", "to" : "str( dbutils"},
			{"from" : "number\( dbutils", "to" : "int( dbutils"},
			{"from" : "(\w+\s*)\=\s*(\w+)\.(\w+)\s*\;","to" : "$1=$2['$3']","statement_categories" : ["FOR_LOOP"]},
			{"from" : "SQL\%ROWCOUNT","to" : "dyn_df.head()[0]"},
			{"from" : "(\bif\b.*?)(?<!\=)\=(?!\=)", "to" : "$1 =="},
			{"from" : "COMN_INTG\.HASH_UTIL\.MD5", "to" : "MD5"},
			{"from" : "\=\s*\"\"\"(\w+)\"\"\"", "to" : "='$1'"},
			{"from" : "\bGRANT\s+\w+\s+ON.*\;", "to": ""}
			// {"from" : "(?<!tab_count)\:\d+", "to" : "{}"}
			
	],

	"substitution_iter_limit" : 500,
	"pattern_match_while_iter_limit" : 1000,
	
	"block_subst" : [
		{"from" : "\(\+\)", "extension_call" : "$self->convert_oracle_style_join_full_statement"},
		{"from": "\bMINUS\b", "to" : " EXCEPT "},
		{"from": "current_date([\s\n]+)" , "to" : "current_date()$1"},
	    {"from" : "CREATE\s+or\s+REPLACE\s+(?!\bTEMP\b|TEMPORARY)\w+\s+VIEW", "to" : "CREATE or REPLACE VIEW"},
	    {"from" : "CREATE\s+(?!\bTEMP\b|TEMPORARY)\w+\s+VIEW", "to" : "CREATE or REPLACE VIEW"},
		{"from" : "CREATE\s+or\s+REPLACE\s+\w+\s+\w+\s+VIEW", "to" : "CREATE or REPLACE VIEW"},
	    {"from" : "CREATE\s+(?!OR)\w+\s+\w+\s+VIEW", "to" : "CREATE or REPLACE VIEW"},
		{"from" : "CREATE\s+VIEW", "to" : "CREATE or REPLACE VIEW"},
		
		{"from" : "CREATE\s+or\s+REPLACE\s+VIEW\s+(\w*\.*\w*\.*\w+\b)\s*\w+\s+\bAS\b", "to" : "CREATE or REPLACE VIEW $1 AS"},
	    {"from" : "CREATE\s+or\s+REPLACE\s+VIEW\s+(\w*\.*\w*\.*\w+\b)\s*\w+\s+\w+\s+\bAS\b", "to" : "CREATE or REPLACE VIEW $1 AS"},
	    {"from" : "CREATE\s+or\s+REPLACE\s+VIEW\s+(\w*\.*\w*\.*\w+\b)\s*(?!\bAS\b)\w+\s+\w+\s+\w+\s+\bAS\b", "to" : "CREATE or REPLACE VIEW $1 AS"},

		{"from" : "CREATE\s+or\s+REPLACE\s+VIEW\s+(\w*\.*\w*\.*\w+\b)\s*\(\s*\b\w+\b\s*\)\s*\bAS\b", "to" : "CREATE or REPLACE VIEW $1 AS"},
		{"from" : "CREATE\s+or\s+REPLACE\s+VIEW\s+(\w*\.*\w*\.*\w+\b)\s*\(\s*\b\w+\b\s*\)\s+\w+\s+\bAS\b", "to" : "CREATE or REPLACE VIEW $1 AS"},
		{"from" : "CREATE\s+or\s+REPLACE\s+VIEW\s+(\w*\.*\w*\.*\w+\b)\s*\(\s*\b\w+\b\s*\)\s+\w+\s+\w+\s+\bAS\b", "to" : "CREATE or REPLACE VIEW $1 AS"},
		//{"from" : "\|\|", "to" : "CREATE or REPLACE VIEW $1 AS"},
		{"from" : "CREATE\s+INDEX\s*\((.*?)\).*;", "to": ""},
	    {"from" : "DROP\s+INDEX\s*\((.*?)\).*;", "to": ""},
	
		{"from" : "REFRESH\s+COMPLETE\s+ON\s+DEMAND", "to" : ""},
		{"from" : "DROP\s+MATERIALIZED", "to" : "DROP "},
		{"from" : "DROP\s+VIEW\s+(?!IF)", "to" : "DROP VIEW IF EXISTS "},
		{"from" : "DROP\s+TABLE\s+(?!IF)", "to" : "DROP TABLE IF EXISTS "},
	    {"from" : "\bNOLOGGING\b", "to" : ""},
		{"from" : "\bBUILD\s+DEFERRED", "to" : ""},
	    {"from" : "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*)\s*\bSET(\b.*?)\s*\bFROM\s+(\w*\.*\w*\.*\w+\s+\w*)\s*where(.*?);", "to" : "merge into $1 using $3 on $4 WHEN MATCHED THEN UPDATE SET $2;"},
		{"from" : "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\s+(\(.*\)\s*\w+)\s+?WHERE(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
        {"from" : "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*)\bFROM\b\s+(\w*\.*\w*\.*\w+\s+\w+)\s+where(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
		{"from" : "UPDATE\s+(\w*\.*\w+\.+\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\b\s+(\w*\.*\w*\.*\w+\s+\w+)\s+where(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
		//{"from" : "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\s+(\(.*\)\s*\w+)\s+?WHERE(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
        //{"from" : "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*)\bFROM\b\s+(\w*\.*\w*\.*\w+\s+\w+)\s+where(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
		{"from" : "delete\s+from\s+(\w*\.*\w+)\s+(\w+)\s+where\s+(\w*\(\s*(\w+)\.(\w+)\s*\))\s*in\s*\(select\s+(\w*\(\s*(\w+)\.(\w+)\s*\))\s+from\s+(.*\))\;", "to" : "merge into $1 $2\nusing\n\t(select $3 as $5\n\tfrom\n\t$9 b\n\ton $3=b.$8\n\twhen matched then delete;"},
		{"from" : "delete\s+from\s+(\w*\.*\w+)\s+where\s+(.*?)\s+in\s+(\(.*?\)\s+)and\s+(\w+)\s+\=\s+\(select\s+distinct\s+(\w+)\s+from\s+(.*)\)\;", "to" : "merge into $1 a\nusing (\n\tselect distinct $5\n\tfrom $6\n\t) b\n\ton a.$4 = b.$5\n\twhen matched and\n\tand a.source in $3\n\tthen delete;"},
		{"from" : "delete\s+from\s+(\w*\.*\w*\.*\w+\s+\w*)\s+using\s*(.*)where(.*?)\;", "to" : "merge into $1\nusing $2\n on $3\nWHEN MATCHED THEN DELETE\;"},
		{"from" : "delete\s+from\s+(\w*\.*\w+)\s+where\s+\((\w+)(.*?\s*\));", "to" : "merge into $1 tgt using ( select $2 from $1 \nwhere ($2$3 sc\n\t\t\t on tgt.$2 = sc.$2 \n\t\t\tWHEN MATCHED THEN DELETE;"},
 	    {"from" : "delete\s+from\s+(\w*\.*\w+)\s+where\s+(\w+)\s+in\s*(\(.*?\)\s*)\;", "to" : "merge into $1 tgt \nusing $3 src\n\t\t\t on tgt.$2 = src.$2\n\t\t\t WHEN MATCHED THEN DELETE;"},
		{"from" : "\s*(\w+)\s+STRING\s+DEFAULT","to":"\n$1  ="	},
	    {"from" : "(\w+)\s*\:\=\s*((\w+)\.\w+)\s*\((.*?\=\>.*?)\)", "to" : "$1 = dbutils.notebook.run(\"$2.$3\",10800,$4)"}, 
        {"from" : "(\w+)\s*\=\>\s*(\'*\w+\'*)", "to" : "'$1':$2"}, 
		{"from" : "(\w+)\s*\=\>\s*(\"\"\"\w+\"\"\")", "to" : "'$1':$2"}, 
		{"from" : "CREATE\s+TEMP\s+TABLE\s+(\w+)\s*\(\s*like\s+(\w+)\)" ,"to" : "CREATE OR REPLACE TEMP VIEW $1 LIKE $2/* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE INSERT ON TEMP VIEW NOT SUPPORTED PLEASE REVIEW CODE */","statement_categories" : ["TABLE_DDL"],"first_match":1},
 	    {"from" : "CREATE\s+GLOBAL\s+TEMPORARY\s+TABLE\s+(\w+)\s+AS" ,"to" : "CREATE OR REPLACE TEMP VIEW $1 AS /* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE INSERT ON TEMP VIEW NOT SUPPORTED PLEASE REVIEW CODE */","statement_categories" : ["TABLE_DDL"],"first_match":1},
        {"from" : "CREATE\s+TEMPORARY\s+TABLE\s+(\w+)\s+AS" ,"to" :			 "CREATE OR REPLACE TEMP VIEW $1 AS /* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE INSERT ON TEMP VIEW NOT SUPPORTED PLEASE REVIEW CODE */","statement_categories" : ["TABLE_DDL"],"first_match":1},
        {"from" : "CREATE\s+TEMP\s+TABLE\s+(\w+)\s+AS" ,"to" :               "CREATE OR REPLACE TEMP VIEW $1 AS /* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE INSERT ON TEMP VIEW NOT SUPPORTED PLEASE REVIEW CODE */","statement_categories" : ["TABLE_DDL"],"first_match":1},
        {"from" : "CREATE\s+PRIVATE\s+TEMPORARY\s+TABLE\s+(\w+)\s+AS" ,"to" :"CREATE OR REPLACE TEMP VIEW $1 AS /* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE INSERT ON TEMP VIEW NOT SUPPORTED PLEASE REVIEW CODE */","statement_categories" : ["TABLE_DDL"],"first_match":1},
	    {"from" : "CREATE\s+LOCAL\s+TEMPORARY\s+TABLE\s+(\w+)\s+AS" ,"to" :  "CREATE OR REPLACE TEMP VIEW $1 AS /* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE INSERT ON TEMP VIEW NOT SUPPORTED PLEASE REVIEW CODE */","statement_categories" : ["TABLE_DDL"],"first_match":1},
		{"from" : "CREATE\s+GLOBAL\s+TEMPORARY\s+TABLE" ,"to" : "CREATE OR REPLACE TABLE/* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE ADD DROP TABLE AT APPROPRIATE PLACE MAUALLY */","statement_categories" : ["TABLE_DDL"],"first_match":1},
        {"from" : "CREATE\s+TEMPORARY\s+TABLE" ,"to" :			"CREATE OR REPLACE TABLE/* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE ADD DROP TABLE AT APPROPRIATE PLACE MAUALLY */","statement_categories" : ["TABLE_DDL"],"first_match":1},
        {"from" : "CREATE\s+TEMP\s+TABLE" ,"to" :               "CREATE OR REPLACE TABLE/* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE ADD DROP TABLE AT APPROPRIATE PLACE MAUALLY */","statement_categories" : ["TABLE_DDL"],"first_match":1},
        {"from" : "CREATE\s+PRIVATE\s+TEMPORARY\s+TABLE" ,"to" :"CREATE OR REPLACE TABLE/* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE ADD DROP TABLE AT APPROPRIATE PLACE MAUALLY */","statement_categories" : ["TABLE_DDL"],"first_match":1},
  	    {"from" : "CREATE\s+LOCAL\s+TEMPORARY\s+TABLE" ,"to" :"CREATE OR REPLACE TABLE/* FIX ME databricks.migration.unsupported.feature TEMPORARY TABLE ADD DROP TABLE AT APPROPRIATE PLACE MAUALLY */","statement_categories" : ["TABLE_DDL"],"first_match":1},
		{"from" : "(CREATE\s+TABLE\s+)(.*?)(\(.*?)(CONSTRAINT\s+\w+\s+CHECK\s*\(.*?\))\,*(.*\;)" ,"to" : "$1 $2 $3 $5\nALTER TABLE $2 ADD $4;\n","statement_categories" : ["TABLE_DDL"],"first_match":1},
  		{"from" : "SELECT(.*?)CURSOR\s*\(\s*SELECT(.*?)FROM(.*)\)\s*FROM\s+(\w+\s+\w+)(.*)\;", "to" : "SELECT $1$2 from $4\n join lateral (select $2 from $3)"},
	   // {"from" : ".*?UTL_FILE.*", "to" : ""},
		{"from" : "\s*ROLLBACK\;\s*", "to" : "ROLLBACK-- FIXME databricks.migration.unsupported.feature Transactions"},
		{"from" : "NESTED\s+TABLE.*?\;", "to" : ";","statement_categories" : ["TABLE_DDL"]},
		{"from" : "ORGANIZATION\s+EXTERNAL.*\)", "to" : "","statement_categories" : ["TABLE_DDL"]},
		{"from" : "REJECT\s+LIMIT\s+UNLIMITED", "to" : "","statement_categories" : ["TABLE_DDL"]},
		{"from" : "XMLTYPE\s+warehouse_spec.*?\;", "to" : ";","statement_categories" : ["TABLE_DDL"]},
		{"from" : "TABLESPACE.*\;", "to" : "","statement_categories" : ["TABLE_DDL"]},
		{"from" : "XMLTYPE\s+warehouse_spec\s+.*?\;", "to" : ";","statement_categories" : ["TABLE_DDL"]},
		{"from" : "(\bXMLTYPE\b)(?!\-\-FIXME)", "to" : "$1--FIXME databricks.migration.task ","statement_categories" : ["TABLE_DDL"]},
		{"from" : "\,\s+\)\s*\;", "to" : ");","statement_categories" : ["TABLE_DDL"]},
		{"from" : "\bENABLE\b", "to" : "","statement_categories" : ["TABLE_DDL"]},
        {"from" : "elseif", "to" : "elif"},
		{"from" : "else\:if", "to" : "else:\n\tif"},
		{"from" : "elsif", "to" : "elif"},
		{"from" : "\_STOP\_EXPTN\_\;*", "to" : ""},
        {"from" : "delete\s+from\s+(\w*\.*\w*\.*\w+\s+\w*)\s+using\s*(.*)where(.*?)\;", "to" : "merge into $1\nusing $2\n on $3\nWHEN MATCHED THEN DELETE\;"},
		{"from" : "delete\s+from\s+(\w*\.*\w+)\s+where\s+\((\w+)(.*?\s*\));", "to" : "merge into $1 tgt using ( select $2 from $1 \nwhere ($2$3 sc\n\t\t\t on tgt.$2 = sc.$2 \n\t\t\tWHEN MATCHED THEN DELETE;"},
 	    {"from" : "delete\s+from\s+(\w*\.*\w+)\s+where\s+(\w+)\s+in\s*(\(.*?\)\s*)\;", "to" : "merge into $1 tgt \nusing $3 src\n\t\t\t on tgt.$2 = src.$2\n\t\t\t WHEN MATCHED THEN DELETE;"},
		{"from" : "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\s+(\(.*\)\s*AS\s+\w+)\s+?WHERE(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
		{"from" : "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\s+(\(.*\)\s*\w+)\s+?WHERE(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
        {"from" : "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*)\bFROM\b\s+(\w*\.*\w*\.*\w+\s+\w+)\s+where(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
		{"from" : "UPDATE\s+(\w*\.*\w+\.+\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\b\s+(\w*\.*\w*\.*\w+\s+\w+)\s+where(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
   		{"from" : "CURSOR\s+(\w+)\s+IS(.*?)\;", "to" : "$1 = spark.sql(f\"\"\"$2\"\"\")\n-- COMMAND ----------\n"},
		{"from" : "CURSOR\s+(\w+)\s*(\(.*?\))\s*IS(.*)\;*", "to" : "$1 = spark.sql(f\"\"\"$3\"\"\")# FIX ME parametrized cursor variables commented are: $2\n-- COMMAND ----------\n"},
		{"from" : "OPEN\s+(\w+)\s+for(.*)\;*", "to" : "$1 = spark.sql(f\"\"\"$2\"\"\")"},
		{"from" : "compress[\s\S]*?\bAS\b", "to" : ""},
		{"from" : "create\s+unique\s+index.*?\;", "to" : ""},
		{"from" : "create\s+index.*?\;", "to" : ""},
		{"from" : "alter\s+index.*?\;", "to" : ""},
		{"from" : "(WHEN\s+MATCHED)\s+THEN(.*?)where(.*?)(WHEN|\;)", "to" : "$1 AND $3 THEN $2 $4"},
		{"from" : "for\s+(\w+)\s+in\s*\((.*?)\)\s*LOOP\;*", "to" : "for $1 in spark.sql(f\"\"\"$2\"\"\")__CURSOR_SUFIX__"},
		{"from" : "^\s+SET\b", "to" : "SET"},
		{"from" : "^\s+SELECT\b", "to" : "SELECT"},
		{"from" : "^\s+INSERT\b", "to" : "INSERT"},
		{"from" : "^\s+UPDATE\b", "to" : "UPDATE"},
		{"from" : "^\s+MERGE\b", "to" : "UPDATE"},
		{"from" : "^\s*(\w+)\s*\:\=\s*", "to" : "$1 = "},
		{"from" : "(\w+)\s*\:\=\s*", "to" : "$1 = "},
		{"from" : "\s*SUBSTR\s*\(\s*SQLERRM\s*\,\s*(\d+)\s*\,\s*(\d+)\s*\)\s*\;", "to" : "SQLERRM[$1:$2]"},
		{"from" : "\s*ROLLBACK\;\s*", "to" : "ROLLBACK-- FIXME databricks.migration.unsupported.feature Transactions"},
		{"from" : "END\s+\$*\{*\w*\.*\w+\}*\;", "to" : ""},
		{"from" : "\bOPEN\b\s+\w+\s*\;", "to" : ""},
		{"from" : "\bCLOSE\b\s+\w+\s*\;", "to" : ""},
		{"from" : "end\_\d+;", "to" : ""},
		{"from" : "EXIT\s+WHEN\s+\w+\%NOTFOUND\s*\;", "to" : ""},
		{"from" : "(spark.sql.*\(f.*?)(\w+\[\"\w+\"\])(?!\})", "to" : "$1{$2}"},
		{"from" : "raise\s+\bexception\b", "to" : "raise Exception_DONE_"},
		{"from" : "\(DONE\)", "to" : ""},
		{"from" : "\_DONE\_", "to" : ""},
		{"from" : "PRAGMA.*", "to" : ""},
		{"from" : "RAISE_APPLICATION_ERROR\s*\(\s*\(*\-*\d+\)*\s*\,\s*(\w+)\s*\)", "to" : "raise Exception($1)"},
		{"from" : "\s*(\w+)\s+EXCEPTION\s*\;", "to" : "\nclass $1(Exception):\n\t\tpass"},
		{"from" : "\+\s*SUBSTR", "to" : "PYTHON_SUBSTR"},
		{"from" : "(CONSTRAINT\s+\w+CHECK.*?\,)", "to" : "-- FIXME databricks.migration.unsupported.feature $1 "},
		{"from" : "(CONSTRAINT\s+\w+UNIQUE.*?\,)", "to" : "-- FIXME databricks.migration.unsupported.feature $1 "},
		{"from" : "DECLARE\s*\;", "to" : ""},
		{"from" : "_EQUALS_", "to" : "=="},	
		{"from" : "\+\s+\"\"\"", "to" : "+\"\"\""},
		{"from" : "f\s+\"\"\"", "to" : "f\"\"\""},
		{"from" : "\<\>", "to" : "!="},
		{"from" : "exception\s*\(\"\"\"", "to" : "Exception(f\"\"\""},
		{"from" : "(\w+\s*\=)\s*\"\"\"", "to" : "$1f\"\"\""},
		{"from" : "\;", "to" : "~^#%`\n-- COMMAND ----------\n"},
		{"from" : "\~\^\#\%\`", "to" : ";"},
		{"from" : "\s*\/\*\+\s*APPEND\s*\*\/\s*", "to" : " "}
	],

	"function_subst" : [
		{"from": "date_part", "arg_pattern": {"1" : "'month'"}, "output_template": "month(date_add($2))"},
		{"from": "date_part", "arg_pattern": {"1" : "'dow'"}, "output_template": "dayofweek(date_add($2))"},

		{"from": "PYTHON_SUBSTR", "output_template" : "+$1[$2:$3]"},
		{"from": "RAISE_APPLICATION_ERROR", "output_template" : "raise Exception($2)"},
		{"from": "NUMTODSINTERVAL", "arg_pattern" : {"2" : "'DAY'"}, "output_template" : "make_interval(0,0,0,$1)"},
		{"from": "NUMTODSINTERVAL", "arg_pattern" : {"2" : "'HOUR'"}, "output_template" : "make_interval(0,0,0,0,$1)"},
		{"from": "NUMTODSINTERVAL", "arg_pattern" : {"2" : "'MINUTE'"}, "output_template" : "make_interval(0,0,0,0,0,$1)"},
		{"from": "NUMTODSINTERVAL", "arg_pattern" : {"2" : "'SECOND'"}, "output_template" : "make_interval(0,0,0,0,0,0,$1)"},
		{"from": "NUMTOYMINTERVAL", "arg_pattern" : {"2" : "'YEAR'"}, "output_template" : "make_interval($1)"},
		{"from": "NUMTOYMINTERVAL", "arg_pattern" : {"2" : "'MONTH'"}, "output_template" : "make_interval(0,$1)"},
		{"from": "json_exists", "output_template" : "get_json_object($1,$2) is not null"},
		{"from": "json_query", "to" : "get_json_object"},
        {"from": "json_value", "to" : "get_json_object"},
		{"from": "INTEGER", "to" : "INT"},
		{"from": "TIME", "output_template" : "DATE_FORMAT($1,'HH:mm:ss')"},
		{"from": "VARCHAR", "to" : "STRING"},
		{"from": "NCHAR", "to" : "CHAR"},
		{"from": "RAWTOHEX", "to" : "HEX"},
		{"from": "TRUNC", "to": "date_trunc", "arg_placement": { "1":"2||'DD'", "2":"1" } },
		{"from": "SYSDATE" , "to" : "current_date()"},
		{"from": "TO_NUMBER" , "to" : "INT"},
		{"from": "ISNULL" , "to" : "NVL"},
		{"from": "PYTHON_TRIM" , "output_template" : "($1).strip()"},
		{"from" : "TO_DATE","arg_pattern" : {"3" : "'NLS_DATE_LANGUAGE\s*=\s*\S+'"},"output_template" :"TO_DATE($1,$2)"},
		{"from" : "TO_CHAR","num_args" : "1" ,"output_template" :"CAST($1 as STRING)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\/MM\/dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\/MM\/dd hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/y hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/y HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MM\.dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MM\.dd hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.y hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.y HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MM\-dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MM\-dd hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�y hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�y HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\/MM\/dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\/MM\/dd hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/y hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/y HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MM\.dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MM\.dd hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.y hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.y HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MM\-dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MM\-dd hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�y hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�y HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-y HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-y HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-y HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-y"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MMM\-dd HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MMM\-dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MMM\-dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MMM\-dd"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\.MMM\.y HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\.MMM\.y HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\.MMM\.y HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\.MMM\.y"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MMM\.dd HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MMM\.dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MMM\.dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MMM\.dd"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-y HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-y HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-y HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-y"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MMM\-dd HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MMM\-dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MMM\-dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MMM\-dd"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\/MM\/dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\/MM\/dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM/dd\/y'"},"output_template" :"DATE_FORMAT($1,$2)"},
	
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MM\.dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MM\.dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.y'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.y'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MM\-dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MM\-dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�y'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�y'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\/MM\/dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\/MM\/dd hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/yy hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/yy HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MM\.dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MM\.dd hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.yy hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.yy HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MM\-dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MM\-dd hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�yy hh\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�yy HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\/MM\/dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\/MM\/dd hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/yy hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/yy HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MM\.dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MM\.dd hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.yy hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.yy HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MM\-dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MM\-dd hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�yy hh\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�yy HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-yy HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-yy HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-yy HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-yy"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MMM\-dd HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MMM\-dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MMM\-dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MMM\-dd"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\.MMM\.yy HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\.MMM\.yy HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\.MMM\.yy HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\.MMM\.yy"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MMM\.dd HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MMM\.dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MMM\.dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MMM\.dd"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-yy HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-yy HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-yy HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'dd\-MMM\-yy"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MMM\-dd HH\:mm\:ss\.SSSSSS Z'"},"output_template" :"DATE_FORMAT($1,$2)"},                                            
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MMM\-dd HH\:mm\:ss\.SSSSSS'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MMM\-dd HH\:mm\:ss'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MMM\-dd"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\/MM\/dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\/MM\/dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/yy'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/yy'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MM\.dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\.MM\.dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.yy'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.yy'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MM\-dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yy\-MM\-dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�yy'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�yy'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yMMMdd"},"output_template" :"DATE_FORMAT($1,$2)"},
        {"from" : "TO_CHAR","arg_pattern" : {"2" : "'yMMdd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MMddy'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yyddMM'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yyMMMdd"},"output_template" :"DATE_FORMAT($1,$2)"},
        {"from" : "TO_CHAR","arg_pattern" : {"2" : "'yyMMdd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MMddyy'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'yyddMM'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MMM\-dd"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\/MM\/dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\/MM\/dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MM\.dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\.MM\.dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.y'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\.dd\.y'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MM\-dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'y\-MM\-dd'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�y'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\�dd\�y'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from" : "TO_CHAR","arg_pattern" : {"2" : "'MM\/dd\/y hh\:mm\:ss\.SSSS a'"},"output_template" :"DATE_FORMAT($1,$2)"},
		{"from": "SUBSTR", "output_template" : "CONV_START_SUBSTR_DONE($1,$2,$3)_CONV_END"},
		{"from": "LTRIM", "output_template" : "CONV_START_LTRIM_DONE($1,$2)_CONV_END"},
		{"from": "JSON_PARSE", "output_template" : "get_json_object($1,'$')"},
		{"from": "DATE_FORMAT", "output_template" : "CONV_START_DATE_FORMAT_DONE($1,$2)_CONV_END"},
		{"from": "Trunc", "output_template" : "cast($1 AS date)"},
		{"from" : "INSTR","arg_pattern" : {"3" : "[0-9]+"}, "output_template" : "LOCATE($2, $1, $3)"},
		{"from" : "INSTR", "output_template" : "LOCATE($2, $1)"}
	], 
	
	"pre_finalization_handler" : "::finalize_content",
	"src_type":"ORACLE"
}