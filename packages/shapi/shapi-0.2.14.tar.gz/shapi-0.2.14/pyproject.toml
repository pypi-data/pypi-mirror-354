[tool.poetry]
name = "shapi"
version = "0.2.14"
description = "Transform shell scripts into production-ready APIs with REST, WebRTC, and gRPC support"
authors = ["Tom Sapletta <info@softreck.dev>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/wronai/shapi"
repository = "https://github.com/wronai/shapi"
documentation = "https://wronai.github.io/shapi"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
packages = [{include = "shapi", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"

# Core dependencies
click = "^8.1.7"
pydantic = "^2.5.0"
pyyaml = "^6.0.1"
rich = {extras = ["all"], version = "^13.0.0"}
requests = "^2.31.0"

# Optional dependencies
fastapi = {version = "^0.104.0", optional = true}
lxml = {version = "^5.1.0", optional = true}
openai = {version = "^1.3.0", optional = true}
pypdf = {version = "^3.17.0", optional = true}
python-docx = {version = "^1.1.0", optional = true}
python-multipart = {version = "^0.0.6", optional = true}
rich-click = {version = "^1.7.0", optional = true}
uvicorn = {version = "^0.24.0", optional = true}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
shapi = "shapi.cli:main"

[tool.poetry.urls]
"Homepage" = "https://github.com/wronai/shapi"
"Documentation" = "https://wronai.github.io/shapi"
"Changelog" = "https://github.com/wronai/shapi/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/wronai/shapi/issues"
"Source Code" = "https://github.com/wronai/shapi"

[tool.poetry.group.dev.dependencies]
black = "^23.11.0"
flake8 = "^6.1.0"
isort = "^5.12.0"
mypy = "^1.7.1"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
tox = "^4.11.0"
pytest-asyncio = "<1.0.0"
requests = "^2.32.3"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.0"
mkdocs-material = "^9.0.0"
mkdocstrings = {extras = ["python"], version = "^0.20.0"}
mkdocs-minify-plugin = "^0.6.0"

[tool.poetry.extras]
cli = ["rich-click"]
server = ["fastapi", "uvicorn", "python-multipart"]
all = [
    "fastapi",
    "lxml",
    "openai",
    "pypdf",
    "python-docx",
    "python-multipart",
    "rich-click",
    "uvicorn"
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=shapi --cov-report=term-missing"

[tool.coverage.run]
source = ["shapi"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 80

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = ["pydantic.*"]
ignore_missing_imports = true
