[project]
name = "pytest-xdocker"
version = "0.2.5"
description = "Pytest fixture to run docker across test runs."
authors = [
    {name = "Marc Tardif", email = "marc@interunion.ca"},
]
readme = "README.rst"
repository = "https://github.com/cr3/pytest-xdocker"
requires-python = ">=3.9,<4.0"
dependencies = [
    "attrs (>=25.3.0,<26.0.0)",
    "netifaces (>=0.11.0,<1.0.0)",
    "psutil (>=6.1.1,<7.0.0)",
    "pyhamcrest (>=2.1.0,<3.0.0)",
    "pytest (>=8.0.0,<9.0.0)",
    "pytest-cache (>=1.0,<2.0)",
    "pytest-xprocess (>=1.0.2,<2.0.0)",
]

[tool.poetry.group.test.dependencies]
coverage = "^7.2.3"
pytest-unique = "^0.1.5"
yarl = "^1.18.3"

[tool.poetry.group.check]
optional = true

[tool.poetry.group.check.dependencies]
ruff = "^0.0.265"
black = "^23.3.0"
pre-commit = "^3.3.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.3"
sphinxcontrib-log-cabinet = "^1.0.1"
sphinx-rtd-theme = "^1.2.0"

[project.scripts]
xdocker = "pytest_xdocker.xdocker:main"

[project.entry-points."pytest11"]
xdocker = "pytest_xdocker.fixtures"

[project.entry-points."pytest_unique.unique"]
ip = "pytest_xdocker.network:unique_ip"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py39"]
preview = true

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Create your own exception
    "TRY002",
    # Avoid specifying long messages outside the exception class
    "TRY003",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

# Pytest options:
#   https://docs.pytest.org/en/6.2.x/reference.html#ini-options-ref
[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "--doctest-glob=*.rst",
]
testpaths = [
    "pytest_xdocker",
    "docs",
    "tests",
]

# Coverage options:
#   https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.paths]
source = [
    "pytest_xdocker",
    "*/*/site-packages",
]

[tool.coverage.report]
fail_under = 90
show_missing = true

[tool.coverage.run]
branch = true
parallel = true
source = [
    "pytest_xdocker",
]
