// SPDX-License-Identifier: Apache-2.0

use pyo3::pyclass;

/// Information about a label
#[pyclass]
pub struct Label {
    /// Label ID
    pub id: u64,

    /// Label value
    pub name: String,

    /// Label parent
    pub parent: Option<String>,
}

/// Information about the Malware DB server
#[pyclass]
pub struct ServerInfo {
    /// Operating System used
    #[pyo3(get)]
    pub os_name: String,

    /// Memory footprint
    #[pyo3(get)]
    pub memory_used: String,

    /// MDB version
    #[pyo3(get)]
    pub mdb_version: String,

    /// Type and version of the database
    #[pyo3(get)]
    pub db_version: String,

    /// Size of the database on disk
    #[pyo3(get)]
    pub db_size: String,

    /// Total number of samples
    #[pyo3(get)]
    pub num_samples: u64,

    /// Total number of users
    #[pyo3(get)]
    pub num_users: u32,

    /// Uptime of Malware DB in a human-readable format
    #[pyo3(get)]
    pub uptime: String,
}

/// Information about a sample source
#[pyclass]
pub struct Source {
    /// Identifier of the source
    #[pyo3(get)]
    pub id: u32,

    /// Name of the source
    #[pyo3(get)]
    pub name: String,

    /// Description of the source
    #[pyo3(get)]
    pub description: Option<String>,

    /// URL of the source, or where the files were found
    #[pyo3(get)]
    pub url: Option<String>,

    /// Creation date or first acquisition date of or from the source
    #[pyo3(get)]
    pub first_acquisition: String,

    /// Whether the source holds malware
    #[pyo3(get)]
    pub malicious: Option<bool>,
}

/// Information about a file type supported by Malware DB
#[pyclass]
pub struct SupportedFileType {
    /// Common name of the file type
    #[pyo3(get)]
    pub name: String,

    /// Magic number bytes in hex of the file type
    #[pyo3(get)]
    pub magic: Vec<String>,

    /// Whether the file type is executable
    #[pyo3(get)]
    pub is_executable: bool,

    /// Description of the file type
    #[pyo3(get)]
    pub description: Option<String>,
}

/// Information about the user's account
#[pyclass]
pub struct UserInfo {
    /// User's numeric ID
    pub id: u32,

    /// User's name
    pub username: String,

    /// User's group memberships, if any
    pub groups: Vec<String>,

    /// User's available sample sources, if any
    pub sources: Vec<String>,

    /// If the user is an admin
    pub is_admin: bool,

    /// When the account was created
    pub created: String,

    /// User has read-only access, perhaps a guest or demo account
    pub is_readonly: bool,
}
