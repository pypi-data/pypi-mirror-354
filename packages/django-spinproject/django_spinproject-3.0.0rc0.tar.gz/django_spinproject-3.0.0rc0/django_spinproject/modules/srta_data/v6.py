_CONTENT = {
	'bootstrap': '''\
#!/bin/sh
set -e
set -x

which python3
#which virtualenv
which uv

uv sync --frozen
''',

	'console': '''\
#!/bin/sh
set -e
set -x

uv run python3 manage.py shell
''',

	'server': '''\
#!/bin/sh

show_help() {
	echo "usage: $0 [--production]"
	echo "Options and arguments:"
	echo "-h, --help     Show this message and exit"
	echo "--production   Start in production mode"
}


PRODUCTION=false


while [ $# -gt 0 ]; do
	case $1 in
		-h|--help)
			show_help
			exit 0
		;;
		--production)
			PRODUCTION=true
			shift
		;;
		-*|--*)
			echo "Unknown option: '$1'"
			exit 1
		;;
		*)
			echo "$0 does not support positional arguments"
			exit 1
		;;
	esac
done


set -e
set -x


if $PRODUCTION; then
	./manage.py migrate \\
	&& ./manage.py createcachetable \\
	&& ./manage.py collectstatic --noinput \\
	&& ./manage.py check --deploy --fail-level=CRITICAL \\
	&& gunicorn -b 0.0.0.0:8000 -t 600 --workers 1 --threads 20 {{ name }}.wsgi
else
	uv run python3 manage.py runserver 0.0.0.0:8000
fi
''',

	'setup': '''\
#!/bin/sh
set -e
set -x

script/bootstrap

# Create .env if not present
MAIN_FOLDER={{ name }}
if [ ! -e $MAIN_FOLDER/.env ]; then
	# Copy template
	cp $MAIN_FOLDER/.env.example $MAIN_FOLDER/.env
	SECRET="$(uv run python3 -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())")"
	# The $ symbol is replaced because django-environ is trying to read the value of an environment variable
	SAFE_SECRET=`printf "%s" "$SECRET" | sed 's/\\\\\\$/~/g' | sed 's/\\\\\\\\/\\\\\\\\\\\\\\\\/g' | sed 's/\\\\&/\\\\\\\\&/g'`
	sed -i 's|DJANGO_SECRET_KEY=""|DJANGO_SECRET_KEY="'$SAFE_SECRET'"|g' $MAIN_FOLDER/.env
	# Show
	cat $MAIN_FOLDER/.env
	echo ".env has been autogenerated, to edit: $ nano $MAIN_FOLDER/.env"
fi
# Clear SQLite database if present
if [ -e db.sqlite3 ]; then
	mv db.sqlite3 db.sqlite3~
fi
# Run migrations
uv run python3 manage.py migrate
''',

	'test': '''\
#!/bin/sh
set -e
set -x


lint() {
	uv run flake8 --select=C,F,E101,E112,E502,E72,E73,E74,E9,W291,W6 --exclude=.cache,migrations,.venv
	uv run flake8 --select=EZL --exclude=.cache,.venv
}


case $# in
	0)
		lint
		uv run pytest
		uv run python3 ./manage.py makemigrations --check --dry-run
		;;
	1)
		case $1 in
			'--lint')
				lint
				;;
			*)
				printf 'Incorrect arg: %s\\n' $1 >&2
				exit 2
				;;
		esac
		;;
	*)
		echo 'Incorrect count of args' >&2
		exit 2
		;;
esac
''',

	'update': '''\
#!/bin/sh
set -e
set -x

script/bootstrap
uv run python3 manage.py migrate
''',

	'cibuild': '''\
#!/bin/sh
set -e
set -x

export CI=true

uv run pip-audit-extra --local --severity HIGH --fail-level CRITICAL

script/test
''',

	'x-clean': '''\
#!/bin/sh
set -e
set -x

find -depth -name '__pycache__' -exec rm -rfv '{}' ';'
'''
}
_SYMLINKS = {
	'shell': 'console',
	'run': 'server',
}
