"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from alph_sdk.types import BaseModel
from alph_sdk.utils import FieldMetadata, QueryParamMetadata
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetTunnelRequestTypedDict(TypedDict):
    tunnel_id: NotRequired[str]


class GetTunnelRequest(BaseModel):
    tunnel_id: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


class GetTunnelDataTypedDict(TypedDict):
    app_port: NotRequired[float]
    app_url: NotRequired[str]
    created_at: NotRequired[str]
    hostname: NotRequired[str]
    jupyter_hostname: NotRequired[str]
    jupyter_port: NotRequired[float]
    jupyter_url: NotRequired[str]
    project_name: NotRequired[str]
    token: NotRequired[str]
    tunnel_id: NotRequired[str]


class GetTunnelData(BaseModel):
    app_port: Optional[float] = None

    app_url: Optional[str] = None

    created_at: Optional[str] = None

    hostname: Optional[str] = None

    jupyter_hostname: Optional[str] = None

    jupyter_port: Optional[float] = None

    jupyter_url: Optional[str] = None

    project_name: Optional[str] = None

    token: Optional[str] = None

    tunnel_id: Optional[str] = None


class GetTunnelResponseBodyTypedDict(TypedDict):
    r"""Get Tunnel"""

    data: NotRequired[GetTunnelDataTypedDict]
    status: NotRequired[str]


class GetTunnelResponseBody(BaseModel):
    r"""Get Tunnel"""

    data: Optional[GetTunnelData] = None

    status: Optional[str] = None


class GetTunnelResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetTunnelResponseBodyTypedDict


class GetTunnelResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetTunnelResponseBody
