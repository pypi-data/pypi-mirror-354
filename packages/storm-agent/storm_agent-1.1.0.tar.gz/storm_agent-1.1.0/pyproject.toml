[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "storm-agent"
version = "1.1.0"
description = "A powerful framework for building AI agents with Claude"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Storm Agent Team", email = "contact@storm-agent.dev"}
]
maintainers = [
    {name = "Storm Agent Team", email = "contact@storm-agent.dev"}
]
keywords = [
    "ai", "agents", "claude", "anthropic", "mcp", "research", 
    "web-search", "automation", "artificial-intelligence"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Text Processing :: General",
]
requires-python = ">=3.9"
dependencies = [
    "anthropic>=0.35.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "firecrawl-py>=0.0.16",
    "google-auth>=2.23.0",
    "google-auth-oauthlib>=1.1.0",
    "google-auth-httplib2>=0.1.1",
    "google-api-python-client>=2.100.0",
    "tiktoken>=0.5.0",
]

[project.optional-dependencies]
mcp = [
    "mcp>=1.0.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "twine>=4.0.0",
    "build>=0.10.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
]
full = [
    "mcp>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/storm-agent/storm-agent"
Documentation = "https://storm-agent.readthedocs.io"
Repository = "https://github.com/storm-agent/storm-agent"
Issues = "https://github.com/storm-agent/storm-agent/issues"
Changelog = "https://github.com/storm-agent/storm-agent/blob/main/CHANGELOG.md"

[project.scripts]
storm-agent = "storm_agent.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
storm_agent = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".eggs"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "asyncio: marks tests as async",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/storm_agent"]
omit = ["tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
