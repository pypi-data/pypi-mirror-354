[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rapid-web-api"
version = "0.1.0"
description = "The fastest Python web framework for building APIs"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Wesley Ellis", email = "your.email@example.com"}
]
keywords = ["web", "framework", "api", "fast", "performance", "async"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "typing-extensions>=4.0.0",
    "uvloop>=0.17.0; sys_platform != 'win32'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "coverage>=6.0.0",
    "httpx>=0.23.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "httpx>=0.23.0",
    "coverage>=6.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.0.0",
    "mkdocstrings[python]>=0.19.0",
]

[project.urls]
Homepage = "https://github.com/wesellis/rapid"
Documentation = "https://rapid-api.readthedocs.io/"
Repository = "https://github.com/wesellis/rapid"
Issues = "https://github.com/wesellis/rapid/issues"

[project.scripts]
rapid = "rapid.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["rapid*"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["rapid"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["rapid"]
omit = ["tests/*", "rapid/__main__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
