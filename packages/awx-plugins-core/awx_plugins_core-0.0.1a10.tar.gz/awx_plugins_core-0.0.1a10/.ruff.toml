line-length = 79  # Accessibility-friendly

namespace-packages = [
  "bin/",
  "docs/",
  "src/awx_plugins/",
  "tests/",
]

[format]
quote-style = "single"

[lint]
ignore = [
  "CPY001",  # Skip copyright notice requirement at top of files

  # Legitimate cases, no need to "fix" these violations:
  # E501: "line too long", its function is replaced by `flake8-length`
  "E501",
  # W505: "doc line too long", its function is replaced by `flake8-length`
  "W505",

  "A001",  # builtin-variable-shadowing  # FIXME / noqa

  "ARG001",  # unused-function-argument  # FIXME / noqa
  "ARG002",  # unused-method-argument  # FIXME / noqa

  "B904",  # raise-without-from-inside-except  # FIXME

  "BLE001",  # blind-except  # FIXME

  "FURB101",  # read-whole-file  # FIXME

  # Refs:
  # * https://github.com/astral-sh/ruff/issues/6606
  # * https://github.com/astral-sh/ruff/pull/13286
  "DOC201",  # Ruff doesn't understand sphinx-native param lists
  "DOC501",  # docstring-missing-exception  # Ruff doesn't understand sphinx-native param lists

  "FIX002",  # line-contains-todo  # FIXME / noqa

  "FLY002",  # static-join-to-f-string  # FIXME

  "EM101",  # raw-string-in-exception  # FIXME
  "EM102",  # f-string-in-exception  # FIXME

  # Ref: https://github.com/astral-sh/ruff/issues/4845#issuecomment-2816845547
  "ERA001",  # False-positives in commented-out code

  "FIX001",  # line-contains-fixme  # FIXME

  "PLC0414",  # useless-import-alias  # needed for MyPy explicit re-exports
  "PLC0415",  # import-outside-top-level  # FIXME
  "PLC1901",  # compare-to-empty-string  # FIXME

  "PLR0912",  # too-many-branches  # FIXME
  "PLR0913",  # too-many-arguments  # FIXME / noqa
  "PLR0914",  # too-many-locals  # FIXME / noqa
  "PLR0917",  # too-many-positional-arguments  # FIXME / noqa
  "PLR2004",  # magic-value-comparison  # FIXME
  "PLR6301",  # no-self-use  # FIXME / noqa

  "PLW1514",  # unspecified-encoding  # FIXME

  "PTH101",  # os-chmod  # FIXME
  "PTH107",  # os-remove  # FIXME
  "PTH110",  # os-path-exists  # FIXME
  "PTH118",  # os-path-join  # FIXME
  "PTH123",  # builtin-open  # FIXME

  "RET504",  # unnecessary-assign  # FIXME

  "S105",  # hardcoded-password-string  # FIXME
  "S113",  # request-without-timeout  # FIXME

  "SIM117",  # multiple-with-statements  # FIXME

  "T201",  # print  # FIXME

  "TD001",   # invalid-todo-tag  # FIXME
  "TD002",   # missing-todo-author  # FIXME
  "TD003",   # missing-todo-link  # FIXME
  "TD004",   # missing-todo-colon  # FIXME
  "TD005",   # missing-todo-description  # FIXME


  "TRY002",  # raise-vanilla-class  # FIXME
  "TRY003",  # raise-vanilla-args  # controversial
  "TRY201",  # verbose-raise  # FIXME
  "TRY203",  # useless-try-except  # FIXME

  "RUF005",  # collection-literal-concatenation  # FIXME
  "RUF100",  # Ruff doesn't know about WPS
  "RUF102",  # Ruff doesn't know about WPS
]
preview = true  # Live dangerously
select = [
  "ALL",
]
task-tags = [
  "FIXME",
  "NOTE",
  "Ref",
  "Refs",
  "TODO",
]

[lint.flake8-pytest-style]
parametrize-values-type = "tuple"

[lint.flake8-quotes]
inline-quotes = "single"

[lint.isort]
combine-as-imports = true
force-wrap-aliases = true
lines-after-imports = 2
section-order = [
  "future",
  "standard-library",
  "testing",
  "frameworks",
  "platforms",
  "third-party",
  "first-party",
  "local-folder",
]

[lint.isort.sections]
frameworks = [
  "awx",
  "django",
]
platforms = [
  "awx_plugins.interfaces",
]
testing = [
  "hypothesis",
  "pytest",
  "pytest_mock",
  "pytest_subtests",
]

[lint.per-file-ignores]
"tests/**.py" = [
  # The following ignores have been researched and should be considered permanent
  # each should be preceded with an explanation of each of the error codes
  # If other ignores are added for a specific file in the section following this,
  # these will need to be added to that line as well.

  "ARG002",  # Allow unused arguments in instance methods (required for test stubs)
  "PLC2701", # Allow importing internal files needed for testing
  "PLR6301", # Allow 'self' parameter in method definitions (required for test stubs)
  "S101",    # Allow use of `assert` in test files
  "S105",    # hardcoded-password-string
  "S106",    # hardcoded-password-func-arg
  "S108",    # tmp dirs
  "S404",    # Allow importing 'subprocess' module to testing call external tools needed by these hooks
  "S603",    # subprocess calls
  "SLF001",  # Private member accessed
]

"src/awx_plugins/credentials/aim.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN003",
  "ANN201",
  "D100",
  "D103",
  "Q003",
]

"src/awx_plugins/credentials/aws_secretsmanager.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN003",
  "ANN201",
  "D100",
  "D103",
]

"src/awx_plugins/credentials/azure_kv.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN003",
  "ANN201",
  "D100",
  "D103",
]

"src/awx_plugins/credentials/centrify_vault.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN003",
  "ANN201",
  "D100",
  "D103",
  "N802",
]

"src/awx_plugins/credentials/conjur.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN003",
  "ANN201",
  "D100",
  "D103",
]

"src/awx_plugins/credentials/dsv.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN003",
  "ANN201",
  "D100",
  "D103",
]

"src/awx_plugins/credentials/github_app.py" = [
  "S101",  # `assert` used for type narrowing
]

"src/awx_plugins/credentials/hashivault.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN003",
  "ANN201",
  "C901",
  "D100",
  "D103",
]


"src/awx_plugins/credentials/injectors.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN201",
  "ANN202",
  "C408",
  "D100",
  "D103",
]

"src/awx_plugins/credentials/plugin.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN001",
  "ANN002",
  "ANN201",
  "ANN204",
  "B010",
  "D100",
  "D101",
  "D103",
  "D105",
  "D107",
  "D205",
  "D400",
  "E731",
]

"src/awx_plugins/credentials/plugins.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "D100",
  "D101",
  "D103",
  "D105",
  "D107",
  "D205",
  "D400",
]

"src/awx_plugins/credentials/tss.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN003",
  "ANN201",
  "ANN202",
  "D100",
  "D103",
  "E712",
]

"src/awx_plugins/inventory/plugins.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "ANN001",
  "ANN002",
  "ANN003",
  "ANN201",
  "ANN202",
  "ANN206",
  "D100",
  "D101",
  "D102",
  "D205",
  "D209",
  "D400",
  "D401",
  "N801",
]

"tests/credential_plugins_test.py" = [
  # The following ignores must be fixed and the entries removed from this config:
  "B017",
  "C419",
  "D100",
  "D102",
  "D103",
  "D205",
  "D209",
  "D400",
  "PT011",
]

[lint.pydocstyle]
convention = "pep257"
