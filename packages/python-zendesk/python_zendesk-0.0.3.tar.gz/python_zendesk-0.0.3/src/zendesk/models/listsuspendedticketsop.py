"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from zendesk.types import BaseModel
from zendesk.utils import FieldMetadata, QueryParamMetadata


class ListSuspendedTicketsRequestTypedDict(TypedDict):
    sort_by: NotRequired[str]
    r"""The field to sort the suspended tickets by. One of \"author_email\", \"cause\", \"created_at\", or \"subject\" """
    sort_order: NotRequired[str]
    r"""The order in which to sort the suspended tickets.  This can take value `asc` or `desc`."""


class ListSuspendedTicketsRequest(BaseModel):
    sort_by: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The field to sort the suspended tickets by. One of \"author_email\", \"cause\", \"created_at\", or \"subject\" """

    sort_order: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The order in which to sort the suspended tickets.  This can take value `asc` or `desc`."""
