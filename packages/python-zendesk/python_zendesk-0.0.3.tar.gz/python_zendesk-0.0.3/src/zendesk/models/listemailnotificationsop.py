"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .emailnotificationsfilter import EmailNotificationsFilter
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from zendesk.types import BaseModel
from zendesk.utils import FieldMetadata, QueryParamMetadata


class ListEmailNotificationsRequestTypedDict(TypedDict):
    filter_: NotRequired[EmailNotificationsFilter]
    r"""Filters the email notifications by ticket, comment, or notification id.

    """
    per_page: NotRequired[int]
    r"""The number of records to return per page"""
    sort: NotRequired[str]
    r"""The field to sort the list.  Possible values are \"created_at\", \"updated_at\" (ascending order) or \"-created_at\", \"-updated_at\" (descending order)"""


class ListEmailNotificationsRequest(BaseModel):
    filter_: Annotated[
        Optional[EmailNotificationsFilter],
        pydantic.Field(alias="filter"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Filters the email notifications by ticket, comment, or notification id.

    """

    per_page: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The number of records to return per page"""

    sort: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The field to sort the list.  Possible values are \"created_at\", \"updated_at\" (ascending order) or \"-created_at\", \"-updated_at\" (descending order)"""
