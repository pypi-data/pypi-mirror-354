name: Build and Push Dev Container

on:
  push:
    branches: [ main ]
    paths:
      - 'docker/containers/dev/**'
      - 'setup.py'
      - 'requirements.txt'
      - 'environment-dev.yml'
      - 'scripts/ci/**'
      - '.github/workflows/build_dev_container.yml'
  workflow_dispatch:
    inputs:
      cuda_version:
        required: true
        default: '12.4.1'
      pytorch_version:
        required: true
        default: '2.4'

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: [self-hosted, cpu]

    strategy:
      fail-fast: false
      matrix:
        cuda: ["12.4.1"]
        torch: ["2.4"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # New step: Calculate the first day (Monday) of the current week.
      - name: Calculate Week Start Date
        id: weekdate
        run: echo "WEEK_DATE=$(date -d 'last monday' +%Y-%m-%d)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/vajra-dev
          tags: |
            type=raw,value=cuda${{ matrix.cuda }}-torch${{ matrix.torch }}-${{ env.WEEK_DATE }}
            type=raw,value=latest,enable=${{ matrix.cuda == '12.4.1' && matrix.torch == '2.4' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/containers/dev/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CUDA_VERSION=${{ matrix.cuda }}
            PYTORCH_VERSION=${{ matrix.torch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
