Metadata-Version: 2.4
Name: PyUSBTMC
Version: 0.2.dev7
Summary: Python module to control USBTMC/USB488 from python/cython
Home-page: http://www-acc.kek.jp/EPICS_Gr/products/
Author: Noboru Yamamoto, KEK, JAPAN
Author-email: "Noboru Yamamoto, KEK, JAPAN" <Noboru.YAMAMOTO@kek.jp>
License-Expression: MIT
Project-URL: Homepage, http://www-acc.kek.jp/EPICS_Gr/products/
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Operating System :: Unix
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: pyusb
Dynamic: author
Dynamic: home-page
Dynamic: license-file

PyUSBTMC
================

PyUSBTMC:python module to handle USB-TMC(Test and Measurement class)　devices.
It requires pyusb module and libusb or openusb libraries.

(C) 2012-2015, Noboru Yamamot, Accl. Lab, KEK, JAPAN
contact: noboru.yamamoto_at_kek.jp

rev.0.1d17:
  .read/.ask functions now use 0 as default values for requestSize arguments.
  And requestSize=0 means, read data until eom is returned.

rev.0.1d14:
  remove reset in __init__ of USBTMC_device. It breaks everything for the device from Tektronix.
  bring back mkDevDepMSGOUTHeader  to older version.

 
Note on root priviledge
-----------------------

PyUSBTMCでPyUSBTMC_deviceあるいはUSB488_deviceオブジェクトの作成時に、
"usb.core.USBError: [Errno 13] Access denied (insufficient permissions)"のエラーが出る場合があります。

この場合には、

#. sudo コマンド経由でpython3を起動する。

#. Linux では、この配布に含まれる `55-usb-tmc488.rules` ファイルを `/etc/udeb/rules.d` ディレクトリにコピーします(root権限が必要です）。
   使用するデバイスのidVendorが `55-usb-tmc488.rules` に含まれない場合は、そのidVendorをファイルに追加します。idVendorはlsusbコマンド（このパッケージ中のlsusb.pyモジュールも利用可能）を使って入手できます。 以後は sudo コマンドなしでもデバイスオブジェクトが作成出来ます。






