Metadata-Version: 2.4
Name: shader-workshop
Version: 0.2.0
Summary: A local shader development environment
Author-email: bÂµg <u@pkh.me>
Project-URL: Repository, https://github.com/ubitux/ShaderWorkshop
Project-URL: Issues, https://github.com/ubitux/ShaderWorkshop/issues
Project-URL: Changelog, https://github.com/ubitux/ShaderWorkshop/blob/main/CHANGELOG.md
Keywords: shaders,glsl,webgl
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: watchdog
Requires-Dist: aiohttp
Requires-Dist: asyncio
Dynamic: license-file

# Shader Workshop

This tool is a local HTTP/WebSocket server monitoring the specified shader
fragment directory. It allows live coding fragment shaders with your preferred
code editor, and having them rendered in your browser through WebGL2.

## Install

```sh
pipx install shader-workshop
```

`pip` can also be used.

## Usage

```
shader-workshop /path/to/fragment/shaders
```

If unspecified, `shader-workshop` will use the examples directory.

## Fragment inputs and outputs

Every fragment gets the following uniforms as input:

- `float time`: the time in seconds
- `vec2 resolution`: the canvas resolution in pixels

They must write on the `vec4 out_color` output to produce a color.

The compatibility is currently set to `300 es`.
