[project]
name = "immoscout-scraper"
version = "1.1.0"
description = "Scrapes rental properties listed on www.immoscout24.de"
authors = [{ name = "Patrick Klein", email = "patrick@libklein.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.10,<4.0"
classifiers = [
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "aiolimiter>=1.2.1",
  "furl>=2.1.4",
  "pydantic>=2.11.5",
  "rnet>=2.2.11",
  "sqlmodel>=0.0.24",
  "tenacity>=9.1.2",
  "typer>=0.16.0",
]

[project.scripts]
immoscout-scraper = "immoscout_scraper.cli:app"

[project.urls]
Homepage = "https://libklein.github.io/immoscout-scraper/"
Repository = "https://github.com/libklein/immoscout-scraper"
Documentation = "https://libklein.github.io/immoscout-scraper/"

[dependency-groups]
dev = [
  "pytest>=7.2.0",
  "pre-commit>=2.20.0",
  "tox-uv>=1.11.3",
  "deptry>=0.23.0",
  "mypy>=0.991",

  "ruff>=0.11.5",

]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["immoscout_scraper"]

[tool.mypy]
files = ["immoscout_scraper"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
  # Long error message
  "TRY003",
  # Ternary
  "SIM108",
  # Complex function names
  "C901",
  # Raise from
  "B904",
  # Specifc errors
  "PGH003",
  # dict literals
  "C408",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true
