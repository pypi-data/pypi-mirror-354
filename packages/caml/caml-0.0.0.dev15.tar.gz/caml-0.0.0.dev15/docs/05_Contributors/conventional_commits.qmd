---
title: "Conventional Commits"
---

This project uses [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/) for Pull Request titles, as they are ultimately used as the commit names on the
main branch. What are conventional commits? In the words of the official documentation:

> The Conventional Commits specification is a lightweight convention on top of commit messages.
> It provides an easy set of rules for creating an explicit commit history; which makes it easier to write automated tools on top of.

The PR titles should thus take the general form:

`<type>[optional scope]: <description>`

An example would be:

`fix(types): make all floats double`

Valid types for Caml are as follows:

- `build`: Changes that affect the build system or external dependencies
- `ci`: Changes to our CI/CD configuration files and scripts
- `docs`: Documentation only changes
- `feat`: A new feature
- `fix`: A bug fix
- `perf`: A code change that improves performance
- `refactor`: A code change that neither fixes a bug nor adds a feature
- `style`: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
- `test`: Adding missing tests or correcting existing tests
- `revert`: Reverting code changes to a previous state
- `chore`: Routine tasks that don't fit in any of the above

We use the following regex to validate PR titles ([test it!](https://regex101.com/r/yC6ZMD/1)):

```
^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|release)(.+)?(!)?:\ .+
```
