[project]
name = "rex-lib"
version = "0.0.11"
description = "Robotic Environments with jaX (REX)"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Bas van der Heijden", email = "b.heijden@hotmail.com" }
]
homepage = "https://bheijden.github.io/rex/"
repository = "https://github.com/bheijden/rex"
keywords = ["robotics", "jax", "simulation", "sim2real", "reinforcement-learning"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent"
]
requires-python = ">=3.9"
dependencies = [
    "supergraph>=0.0.8",
    "tqdm>=4.66.4",
    "matplotlib>=3.7.0",
    "networkx>=3.2.1",
    "jax>=0.4.30",  # Without CUDA by default
    "equinox>=0.11.4",
    "evosax>=0.1.6,<0.2.0",  # Required for evo.py
    "optax>=0.2.3",  # Required for ppo.py
    "flax>=0.8.5",
    "distrax>=0.1.5",
    "numpy<2.0.0"
]

[project.optional-dependencies]
examples = [
    "brax>=0.12.0", # Required for pendulum.py
    "seaborn>=0.13.2",
    "dill>=0.3.8",
    "jupyterlab>=4.3.2",
    "ipykernel>=6.29.5",
]

[dependency-groups]
dev = [
    "pre-commit>=4.0.1",
    "ruff>=0.8.1",
    "setuptools>=75.6.0",
]
tests = [
    "pytest-cov>=6.0.0",  # Not used in the release workflow.
    # Make sure that all test dependencies are also included in the testscript in .github/workflows/release.yml
    "pytest>=8.3.3",
]
gpu = [
    "jax[cuda12]>=0.4.30",
]

[tool.uv]
package = true
default-groups = ["dev"]  # Only "dev" is the default setting

#[project.scripts]
#rex-cli = "rex.cli:main"  # Optional: if you want to provide a command-line tool

[tool.coverage.run]
branch = false
source = ["rex"]
omit = ["rex/pendulum/*"]

[tool.coverage.report]
exclude_lines = [
    "raise NotImplementedError",
    "pass",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    'if __name__ == "__main__":',
    "raise ",
    "except ImportError",
]

[tool.ruff]
#extend-include = ["*.ipynb"]
include = ["rex/**/*.py", "tests/**/*.py", "examples/**/*.ipynb"]
line-length = 127
indent-width = 4

[tool.ruff.lint]
#fixable = ["I001", "F401"]

ignore = [
    "E402",  # module level import not at top of file  --> Makes code less readable in some cases (notebooks)
    "E501",  # line too long --> handled by ruff formatting
    "E731",  # do not assign a lambda expression, use a def --> Very common in JAX
]
select = ["E", "F", "I001"]

[tool.ruff.lint.isort]
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
lines-after-imports = 2
order-by-type = false

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["rex/**/*"]

[tool.hatch.build.targets.wheel]
packages = ["rex"]




