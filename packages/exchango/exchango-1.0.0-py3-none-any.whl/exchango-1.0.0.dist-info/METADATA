Metadata-Version: 2.4
Name: exchango
Version: 1.0.0
Summary: Exchango - modern Python library for obtaining current exchange rates and converting currencies with support for both synchronous and asynchronous interfaces. Easy integration, flexible settings, and regular data updates.
Home-page: 
Author: zvenios
Author-email: kont.05.vladdd@gmail.com
Keywords: currency,exchange,converter,forex,rates,synchronous,asynchronous,async,sync,aiohttp,requests,conversion,money,finance,financial,api,exchangerate,currency-converter,toolkit
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Topic :: Office/Business :: Financial
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: requests>=2.25.1
Requires-Dist: aiohttp>=3.8.1
Requires-Dist: async_lru>=2.0.4
Requires-Dist: pytz>=2021.3
Provides-Extra: dev
Requires-Dist: pytest>=6.2.5; extra == "dev"
Requires-Dist: pytest-asyncio>=0.15.1; extra == "dev"
Requires-Dist: coverage>=5.5; extra == "dev"
Requires-Dist: sphinx>=4.0.2; extra == "dev"
Provides-Extra: speed
Requires-Dist: uvloop>=0.16.0; platform_system != "Windows" and extra == "speed"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Supported currencies:
| CODE | FULL NAME | SYMBOL |
|------|-----------|--------|
| AUD | Australian Dollar | $ |
| AZN | Azerbaijani Manat | в‚ј |
| GBP | British Pound Sterling | ВЈ |
| AMD | Armenian Dram | ЦЏ |
| BYN | Belarusian Ruble | Br |
| BGN | Bulgarian Lev | Р»РІ |
| BRL | Brazilian Real | R$ |
| HUF | Hungarian Forint | Ft |
| VND | Vietnamese Dong | в‚« |
| HKD | Hong Kong Dollar | HK$ |
| GEL | Georgian Lari | в‚ѕ |
| DKK | Danish Krone | kr |
| AED | United Arab Emirates Dirham | ШЇ.ШҐ |
| USD | United States Dollar | $ |
| EUR | Euro | в‚¬ |
| EGP | Egyptian Pound | ВЈ |
| INR | Indian Rupee | в‚№ |
| IDR | Indonesian Rupiah | Rp |
| KZT | Kazakhstani Tenge | в‚ё |
| CAD | Canadian Dollar | C$ |
| QAR | Qatari Riyal | Ш±.Щ‚ |
| KGS | Kyrgystani Som | СЃ |
| CNY | Chinese Yuan | ВҐ |
| MDL | Moldovan Leu | L |
| NZD | New Zealand Dollar | NZ$ |
| NOK | Norwegian Krone | kr |
| PLN | Polish Zloty | zЕ‚ |
| RON | Romanian Leu | lei |
| XDR | Special Drawing Rights | XDR |
| SGD | Singapore Dollar | S$ |
| TJS | Tajikistani Somoni | Р…Рњ |
| THB | Thai Baht | аёї |
| TRY | Turkish Lira | в‚є |
| TMT | Turkmenistani Manat | T |
| UZS | Uzbekistani Som | so'm |
| UAH | Ukrainian Hryvnia | в‚ґ |
| CZK | Czech Koruna | KДЌ |
| SEK | Swedish Krona | kr |
| CHF | Swiss Franc | Fr |
| RSD | Serbian Dinar | РґРёРЅ |
| ZAR | South African Rand | R |
| KRW | South Korean Won | в‚© |
| JPY | Japanese Yen | ВҐ |

рџљЂ Quick start
---
#### First, install exchango. Enter this command in the console or in the terminal:
```sh
pip install exchango
```
---
#### Next, select the synchronous or asynchronous version of the library.
```python
# Synchronous version
import exchango.sync_api as exchango
# Asynchronous version
import exchango.async_api as exchango
```
The difference in usage is almost imperceptible, but the asynchronous version must be applied in ```async def``` and ```await``` before calling the function or in ```asyncio.run()```.
---
### The difference between synchronous and asynchronous versions.
```python
# Synchronous version
import exchango.sync_api as exchango
from time import time

codes = ["AUD", "AZN", "GBP", "AMD", "BYN", "BGN", "BRL", "HUF", "VND", "HKD", "GEL", "DKK", "AED", "USD", "EUR", "EGP", "INR", "IDR", "KZT", "CAD", "QAR", "KGS", "CNY", "MDL", "NZD", "NOK", "PLN", "RON", "XDR", "SGD", "TJS", "THB", "TRY", "TMT", "UZS", "UAH", "CZK", "SEK", "CHF", "RSD", "ZAR", "KRW", "JPY"]

def main():
    start = time()
    for currency in codes:
        for to in codes:
            for amount in range(0, 11):
                result = exchango.convert(currency, amount, to)
                print(f"{amount} {currency} = {result} {to}")
    end = time()
    print(end - start)

if __name__ == "__main__":
    main()
```
```python
# Asynchronous version
import exchango.async_api as exchango
from time import time
import asyncio

codes = ["AUD", "AZN", "GBP", "AMD", "BYN", "BGN", "BRL", "HUF", "VND", "HKD", "GEL", "DKK", "AED", "USD", "EUR", "EGP", "INR", "IDR", "KZT", "CAD", "QAR", "KGS", "CNY", "MDL", "NZD", "NOK", "PLN", "RON", "XDR", "SGD", "TJS", "THB", "TRY", "TMT", "UZS", "UAH", "CZK", "SEK", "CHF", "RSD", "ZAR", "KRW", "JPY"]

async def main():
    start = time()
    for currency in codes:
        for to in codes:
            for amount in range(0, 11):
                result = await exchango.convert(currency, amount, to)
                print(f"{amount} {currency} = {result} {to}")
    end = time()
    print(end - start)

if __name__ == "__main__":
    asyncio.run(main())
```
This code calls the ```exchango.convert``` function 20339 times and at the end outputs how much time was spent.
---
### Currency converting.
```python
# Synchronous version
exchango.convert(currency, amount, to)
```
```python
# Рђsynchronous version
await exchango.convert(currency, amount, to)
```
| ARGUMENT | DESCRIPTION | TYPE | EXAMPLE в„–1 | EXAMPLE в„–2 | EXAMPLE в„–3 |
|:--------:|:-----------:|:----:|:----------:|:----------:|:----------:|
| ```currency``` | 3-letter code of the currency to convert | ```string``` | USD | EUR | RUB |
| ```amount``` | Amount of ```currency``` to convert into another currency | ```number``` | 5 | 91.84 | -647 |
| ```to``` | 3-letter code of the target currency to convert ```currency``` into | ```string``` | RUB | USD | EUR | 

| RETURNS | SUCCESS | DESCRIPTION | EXAMPLE в„–1 | EXAMPLE в„–2 | EXAMPLE в„–3 |
|:-------:|:-------:|:-----------:|:----------:|:----------:|:----------:|
| ```number``` | YES | Converting result | 500.0 | 145.1541451 | -23.535 |
| ```string``` | NO | Error during converting | Incorrect type | Unspecified argument | And other |
