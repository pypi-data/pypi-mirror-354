{
    "main": {
        "max_retries_on_error": 3,
        "prompt_retry_on_error": true,
        "prompt_code_execution": true,
        "track_model_usage": false,
        "extra_index_url": "",
        "python_compile_mode": "single",
        "sequence_on_loading": []
    },
    "model": {
        "model_id": "Qwen/Qwen2.5-Coder-7B-Instruct-GGUF",
        "apply_chat_history": false,
        "system_prompt": "",
        "model_kwargs": {},
        "transformers__device": null,
        "transformers__quantization_bits": null,
        "transformers__stream": true,
        "gguf__filename": "qwen2.5-coder-7b-instruct-q6_k.gguf",
        "gguf__verbose": true,
        "gguf__n_ctx": 16384,
        "gguf__n_gpu_layers": 0,
        "gguf__n_batch": 8,
        "gguf__n_cpu_threads": 8,
        "onnx__model_dir": "",
        "onnx__verbose": false,
        "onnx__n_cpu_threads": 8
    },
    "generate": {
        "stopwords": [],
        "max_new_tokens": 2048,
        "temperature": 0.0,
        "generation_kwargs": {
            "tools": [
                {
                    "type": "function",
                    "function": {
                        "name": "owl_import",
                        "description": "Import a Python file and load its contents into the current namespace.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "file_path": {
                                    "type": "string",
                                    "description": "The path to the Python file to import."
                                }
                            },
                            "required": [
                                "file_path"
                            ]
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "owl_load_namespace",
                        "description": "Load namespace using dill.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "file_path": {
                                    "type": "string",
                                    "description": "The path to the file to load the namespace from."
                                }
                            },
                            "required": [
                                "file_path"
                            ]
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "owl_models",
                        "description": "Returns a string with information about all Hugging Face models currently loaded in the cache directory. Print the output from this function to the console to get a nice overview.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "cache_dir": {
                                    "type": "string",
                                    "description": ""
                                },
                                "show_task": {
                                    "type": "boolean",
                                    "description": ""
                                }
                            }
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "owl_press",
                        "description": "Simulate typing a sequence of keys and automaticly control the menu inside the Owlsight application.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "sequence": {
                                    "type": "array",
                                    "description": "The sequence of keys to type. Case-sensitive when typing available keys. Available keys: 'L' (left), 'R' (right), 'U' (up), 'D' (down), 'ENTER' (ENTER), 'SLEEP:[float]' (sleep for time seconds). Any other character will be typed as is."
                                },
                                "exit_python_before_sequence": {
                                    "type": "boolean",
                                    "description": "If True, type 'exit()' and press ENTER before typing the sequence, default is True. Assuming owl_press is called from the interpreter, this will return to the mainmenu before typing the sequence."
                                },
                                "time_before_sequence": {
                                    "type": "number",
                                    "description": "The time to wait before executing the keysequence, default is 0.5 seconds."
                                },
                                "time_between_keys": {
                                    "type": "number",
                                    "description": "The time to wait between typing each key, default is 0.12 seconds."
                                }
                            },
                            "required": [
                                "sequence"
                            ]
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "owl_read",
                        "description": "Read content from files using DocumentReader with fallback to basic file reading.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "path": {
                                    "type": "string",
                                    "description": "Can be: - A single file path - A directory path - An iterable of file paths"
                                },
                                "recursive": {
                                    "type": "boolean",
                                    "description": "Whether to recursively read content from subdirectories, given path is a directory"
                                },
                                "ignore_patterns": {
                                    "type": "string",
                                    "description": "List of gitignore-style patterns to exclude eg. [\"*.txt\", \"*.log\"]"
                                },
                                "ocr_enabled": {
                                    "type": "boolean",
                                    "description": "Whether to enable OCR for image files in tika."
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "Timeout in seconds for Tika processing"
                                }
                            },
                            "required": [
                                "path"
                            ]
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "owl_save_namespace",
                        "description": "Save the current python namespace using dill. NOTE: This will only save the variables that do not start with '_' or 'owl_'. Also, some complex objects (like from external libraries) may not be serializable.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "file_path": {
                                    "type": "string",
                                    "description": "The path to the file to save the namespace to. the .dill extension will be automaticly added if not present."
                                }
                            },
                            "required": [
                                "file_path"
                            ]
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "owl_scrape",
                        "description": "Scrape the text content of a webpage and return specific content based on the filter.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "url_or_terms": {
                                    "type": "string",
                                    "description": "The URL of the webpage to scrape OR the search term to search Bing for."
                                },
                                "trim_newlines": {
                                    "type": "string",
                                    "description": "The maximum number of consecutive newlines to allow in the output, default is 2."
                                },
                                "filter_by": {
                                    "type": "string",
                                    "description": "Dictionary specifying HTML tag and/or attributes to filter specific content. For example: {'tag': 'div', 'class': 'content'} **request_kwargs Additional keyword arguments to pass to the requests.get function."
                                }
                            },
                            "required": [
                                "url_or_terms",
                                "request_kwargs"
                            ]
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "owl_show",
                        "description": "Show all currently active imported objects in the namespace except builtins.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "docs": {
                                    "type": "boolean",
                                    "description": ""
                                },
                                "return_str": {
                                    "type": "boolean",
                                    "description": ""
                                }
                            }
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "owl_write",
                        "description": "Write content to a (text) file.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "file_path": {
                                    "type": "string",
                                    "description": "The path to the file to write."
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The content to write to the file."
                                }
                            },
                            "required": [
                                "file_path",
                                "content"
                            ]
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "owl_history",
                        "description": "Get the chathistory of the current model.",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "to_string": {
                                    "type": "boolean",
                                    "description": "If True, returns the history as a formatted string, by default False"
                                },
                                "get_last_response_only": {
                                    "type": "boolean",
                                    "description": "If True, returns only the last response from the history, by default False"
                                }
                            }
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "dataclass",
                        "description": "Add dunder methods based on the fields defined in the class.",
                        "parameters": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "field",
                        "description": "Return an object to identify dataclass fields.",
                        "parameters": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                {
                    "type": "function",
                    "function": {
                        "name": "get_user_choice",
                        "description": "Main function to get user choice",
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "options": {
                                    "type": "object",
                                    "description": ""
                                }
                            },
                            "required": [
                                "options"
                            ]
                        }
                    }
                }
            ]
        }
    },
    "rag": {
        "active": false,
        "target_library": "",
        "top_k": 10,
        "sentence_transformer_weight": 0.5,
        "sentence_transformer_name_or_path": "",
        "search": ""
    },
    "huggingface": {
        "search": "",
        "top_k": 10,
        "select_model": "",
        "task": "text-generation"
    }
}