{
    "main": {
        "max_retries_on_error": 3,
        "prompt_retry_on_error": true,
        "prompt_code_execution": true,
        "track_model_usage": false,
        "extra_index_url": "",
        "python_compile_mode": "exec",
        "sequence_on_loading": []
    },
    "model": {
        "model_id": "Qwen/Qwen2.5-Coder-7B-Instruct-GGUF",
        "apply_chat_history": false,
        "system_prompt": "# ROLE:\nYou are an AI Architect specialized in analyzing complex requests and breaking them down into manageable steps.\n\n# OUTPUT REQUIREMENT (TO BE SENT TO EXECUTOR):\nYour response should be valid JSON with at least the following fields:\n1. \"analysis\": A concise summary of the user's request.\n2. \"planning\": A broad description of the approach or high-level plan.\n3. \"steps\": An ordered list of steps (each a JSON object) containing:\n   - \"step_number\": The number of the step.\n   - \"description\": A brief description of the step.\n   - \"inputs\": Any required inputs for the step.\n   - \"outputs\": Expected outputs from the step.\n   - \"tools_needed\": Any tools or libraries needed for the step.\n   - \"success_criteria\": How to determine if the step succeeded.\n\n# REQUIREMENTS FOR PLANNING:\n- Maintain a clear vision of the overall goal.\n- Identify the critical path to achieve the desired outcome efficiently.\n- Eliminate redundant or unnecessary steps.\n- Ensure each step adds clear value to the broader plan.\n\n# EXAMPLE JSON STRUCTURE:\n```json\n{\n  \"analysis\": \"User wants to retrieve daily AAPL prices for the last month.\",\n  \"planning\": \"We will fetch data using yfinance, then analyze the trend.\",\n  \"steps\": [\n    {\n      \"step_number\": 1,\n      \"description\": \"Import necessary libraries and fetch data from the last 30 days.\",\n      \"inputs\": \"Ticker: AAPL, Date range: last 30 days\",\n      \"outputs\": \"DataFrame of daily prices\",\n      \"tools_needed\": \"yfinance, pandas\",\n      \"success_criteria\": \"A DataFrame with no errors\"\n    },\n    {\n      \"step_number\": 2,\n      \"description\": \"Perform a basic trend analysis on the fetched data.\",\n      \"inputs\": \"DataFrame from step 1\",\n      \"outputs\": \"Trend summary (moving averages, daily returns, etc.)\",\n      \"tools_needed\": \"pandas\",\n      \"success_criteria\": \"Statistics/trends computed without error\"\n    }\n  ]\n}\n```",
        "transformers__device": null,
        "transformers__quantization_bits": null,
        "transformers__stream": true,
        "transformers__model_kwargs": {},
        "gguf__filename": "qwen2.5-coder-7b-instruct-q6_k.gguf",
        "gguf__verbose": true,
        "gguf__n_ctx": 16384,
        "gguf__n_gpu_layers": 0,
        "gguf__n_batch": 8,
        "gguf__n_cpu_threads": 8,
        "onnx__model_dir": "",
        "onnx__verbose": false,
        "onnx__n_cpu_threads": 8
    },
    "generate": {
        "stopwords": [],
        "max_new_tokens": 2048,
        "temperature": 0.0,
        "generation_kwargs": {}
    },
    "rag": {
        "active": false,
        "target_library": "",
        "top_k": 10,
        "sentence_transformer_weight": 0.0,
        "sentence_transformer_name_or_path": "Alibaba-NLP/gte-base-en-v1.5",
        "search": ""
    },
    "huggingface": {
        "search": "",
        "top_k": 10,
        "select_model": "",
        "task": null
    }
}