Metadata-Version: 2.1
Name: vtds-cluster-kvm
Version: 0.0.19
Summary: KVM Cluster Layer Plugin for the Virtual Test Development System (vTDS) suite
Author-email: Eric Lund <eric.lund@hpe.com>
Maintainer-email: Eric Lund <eric.lund@hpe.com>
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pyyaml (~=6.0)
Requires-Dist: vtds-base (~=0.0)
Provides-Extra: build
Requires-Dist: build (~=1.2.2) ; extra == 'build'
Provides-Extra: ci
Requires-Dist: nox (~=2023.4.22) ; extra == 'ci'
Provides-Extra: docs
Provides-Extra: lint
Requires-Dist: pylint (~=2.15) ; extra == 'lint'
Provides-Extra: style
Requires-Dist: pycodestyle (~=2.11) ; extra == 'style'
Provides-Extra: test
Requires-Dist: pytest (~=7.3.1) ; extra == 'test'
Requires-Dist: pytest-cov (~=4.1) ; extra == 'test'
Requires-Dist: coverage (~=7.4) ; extra == 'test'

# vtds-cluster-kvm

The kvm vTDS Cluster layer plugin implementation

## Description

This repository contains the implementation of a vTDS Cluster layer
plugin that should be usable by any vTDS configuration to create a
vTDS cluster. The plugin includes an implementation of the vTDS
Cluster layer API and a base configuration. The API implementation can
be used on top of any combination of vTDS Provider and vTDS Platform
implementations to manage a vTDS system at the cluster level. The base
configuration supplied here. The base configuration defines a single
node class (`ubuntu_24_04_node`) with zero node instances. To get a
maningful result, therefore, it is necessary to overlay the
the value in `cluster.node_classes.ubuntu_24_04_node.node_count` with
a non-zero value. With that overlay, the base configuration will
deploy the requested number of KVM Linux VM Virtual Nodes running
on a Virtual Node Interconnect using a VxLAN overlay
over the top of the configured set of provider and
platform supplied Blade Interconnect network underlays.

The core driver mechanism and a brief introduction to the vTDS
architecture and concepts can be found in the [vTDS Core Project
Repository](https://github.com/Cray-HPE/vtds-core/tree/main).
