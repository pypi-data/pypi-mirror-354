[project]
name = "orm-maker"
version = "0.1.31"
description = "Objection Relation Model Maker for SQLAlchemy"
authors = [
    {name = "dbruce-ae05",email = "dbruce.ae05@gmail.com"}
]
readme = "README.md"
license = "GPL-3.0-or-later"
keywords = ['ORM', 'orm', 'object', 'relational', 'model', 'sql', 'sqlalchemy']
requires-python = ">=3.9"
dependencies = [
    "pydantic (>=2.11.3,<3.0.0)",
    "click (>=8.1.8,<9.0.0)",
    "sqlalchemy (>=2.0.40,<3.0.0)",
    "sqlmodel (>=0.0.24,<0.0.25)",
    "polars (>=1.27.1,<2.0.0)",
    "pendulum (>=3.0.0,<4.0.0)",
    "pyaml (>=25.1.0,<26.0.0)",
]

[project.urls]
homepage = 'https://github.com/dbruce-ae05/orm_maker'
repository = 'https://github.com/dbruce-ae05/orm_maker'
"Bug Tracker" = 'https://github.com/dbruce-ae05/orm_maker/issues'

[project.scripts]
ormm = 'orm_maker.ormm:cli'

[tool.poetry]
packages = [{include = "orm_maker", from = "src"}]


[tool.poetry.group.dev.dependencies]
poethepoet = "^0.34.0"
pytest = "^8.3.5"
ruff = "^0.11.8"
black = "^25.1.0"

[tool.orm_maker]
logging_level = 'DEBUG'

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]

[tool.poe.tasks.bti]
sequence = ['sync', 'ruffcheck', 'ruffformat', 'test', 'build', 'install', 'pipx', 'example']

[tool.poe.tasks.btp]
sequence = ['sync', 'ruffcheck', 'ruffformat', 'test', 'patch', 'build', 'install', 'pipx', 'example']

[tool.poe.tasks.btm]
sequence = ['sync', 'ruffcheck', 'ruffformat', 'test', 'minor', 'build', 'install', 'pipx', 'example']

[tool.poe.tasks.sync]
script = 'other.publish_actions:sync_with_pyproject'

[tool.poe.tasks.patch]
cmd = 'poetry version patch'

[tool.poe.tasks.minor]
cmd = 'poetry version minor'

[tool.poe.tasks.clear_logs]
script = 'orm_maker.app_logging:clear_logs'

[tool.poe.tasks.build]
cmd = 'poetry build'

[tool.poe.tasks.make_example]
script = 'other.publish_actions:make_example'

[tool.poe.tasks.make_example_db]
script = 'example.example:make_db("sqlite:///example.sqlite")'

[tool.poe.tasks.example]
sequence = ['make_example', 'make_example_db']

[tool.poe.tasks.ruff]
sequence = ['ruffcheck', 'ruffformat']

[tool.poe.tasks.ruffcheck]
cmd = 'ruff check'

[tool.poe.tasks.ruffformat]
cmd = 'ruff format'

[tool.poe.tasks.git_add]
cmd = 'git add .'

[tool.poe.tasks.git_status]
cmd = 'git status'

[tool.poe.tasks.pipx]
cmd = 'pipx install . --force'

[tool.poe.tasks.install]
cmd = 'poetry install'

[tool.poe.tasks.test]
cmd = 'pytest'


[tool.ruff]
line-length = 120
fix = true
show-fixes = true

[tool.ruff.lint]
select = ['E4', 'E7', 'E9', 'F', 'I']
fixable = ['ALL']
ignore = ['E701', 'E702']

[tool.ruff.format]
docstring-code-line-length = 'dynamic'
