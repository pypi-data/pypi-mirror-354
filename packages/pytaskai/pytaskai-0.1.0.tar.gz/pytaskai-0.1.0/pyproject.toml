[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pytaskai"
version = "0.1.0"
description = "AI-powered task management system with MCP (Model Context Protocol) integration for seamless workflow automation"
readme = "README.md"
license = {text = "MIT with Commons Clause"}
authors = [
    {name = "PyTaskAI Contributors", email = "noreply@pytaskai.dev"}
]
keywords = [
    "task-management", "ai", "mcp", "project-management", 
    "llm", "automation", "productivity", "litellm", 
    "claude", "anthropic", "openai", "streamlit"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    # Core MCP and AI framework
    "fastmcp>=0.3.0",
    "pydantic>=2.0.0",
    "litellm>=1.0.0",
    "python-dotenv>=1.0.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    
    # CLI and UI
    "streamlit>=1.28.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    
    # File and async operations
    "aiofiles>=23.0.0",
    "pathspec>=0.11.0",
    
    # Optional HTTP for research features
    "requests>=2.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
research = [
    "beautifulsoup4>=4.12.0",
]
ui = [
    "plotly>=5.15.0",
    "networkx>=3.1",
    "graphviz>=0.20.0",
]
all = [
    "pytaskai[dev,research,ui]",
]

[project.urls]
Homepage = "https://github.com/mak1jk/pytaskai-public"
Documentation = "https://github.com/mak1jk/pytaskai-public/blob/main/README.md"
Repository = "https://github.com/mak1jk/pytaskai-public"
"Bug Tracker" = "https://github.com/mak1jk/pytaskai-public/issues"
Changelog = "https://github.com/mak1jk/pytaskai-public/blob/main/CHANGELOG.md"

[project.scripts]
pytaskai = "pytaskai_cli:main"
pytaskai-minimal = "pytaskai_minimal:main"
pytaskai-setup = "setup_cli:main"

[tool.setuptools]
packages = ["mcp_server", "mcp_server.prompts", "shared", "frontend"]

[tool.setuptools.package-data]
"mcp_server" = ["prompts/*.py", "*.py"]
"shared" = ["*.py"]
"frontend" = ["*.py"]

[tool.setuptools.exclude-package-data]
"*" = ["tests*", "test_*", "*.pyc", "__pycache__"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=mcp_server",
    "--cov=shared",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "ai: marks tests that require AI services",
]

[tool.coverage.run]
source = ["mcp_server", "shared"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]