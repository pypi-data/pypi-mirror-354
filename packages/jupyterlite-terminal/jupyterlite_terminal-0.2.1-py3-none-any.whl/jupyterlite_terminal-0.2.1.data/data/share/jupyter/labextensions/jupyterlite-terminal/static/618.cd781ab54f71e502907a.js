"use strict";(self.webpackChunk_jupyterlite_terminal=self.webpackChunk_jupyterlite_terminal||[]).push([[618],{1618:(e,t,s)=>{s.r(t),s.d(t,{Aliases:()=>i.D,BaseShell:()=>w,BaseShellWorker:()=>I.g,BufferedOutput:()=>m.j,ConsoleOutput:()=>C,ControlCharacter:()=>D.hE,DummyInput:()=>v.X,DummyOutput:()=>O.y,ExitCode:()=>p.y,ExternalOutput:()=>g,FileInput:()=>y.z,FileOutput:()=>k.M,InputAll:()=>S.S,InputFlag:()=>D.tc,JavaScriptInput:()=>b._,LocalFlag:()=>D.Uq,OutputFlag:()=>D.OJ,Pipe:()=>E.n,PipeInput:()=>A.J,RedirectOutput:()=>M,Shell:()=>B,ShellManager:()=>x,TerminalInput:()=>T.d,TerminalOutput:()=>N.m,Termios:()=>D.Gc,delay:()=>_.cb,parse:()=>W.qg,tokenize:()=>V.q});var i=s(7450),r=s(7262),a=s(4602),n=s(9017),o=s(9399);class l{constructor(){}async disable(){this._enabled=!1,this._clear()}dispose(){this._isDisposed||(this._isDisposed=!0)}async enable(){this._enabled=!0}get enabled(){return this._enabled}get isDisposed(){return this._isDisposed}registerSendStdinNow(e){this._sendStdinNow=e}_enabled=!1;_isDisposed=!1;_sendStdinNow}var h=s(763);class d extends l{constructor(){super();const e=Int32Array.BYTES_PER_ELEMENT,t=h.X.maxChars+3;this._sharedArrayBuffer=new SharedArrayBuffer(t*e),this._intArray=new Int32Array(this._sharedArrayBuffer,0,t),this._intArray[h.X.MAIN]=0,this._intArray[h.X.WORKER]=0}async disable(){if(this._disabling=!0,this._readSentCount!==this._readCount){const e=this._loadFromSharedArrayBuffer();let t="";for(const s of e)t+=String.fromCharCode(s);this._sendStdinNow(t)}for(;this._readBuffer.length>0;)this._sendStdinNow(this._readBuffer.shift());await super.disable(),this._disabling=!1}get sharedArrayBuffer(){return this._sharedArrayBuffer}async push(e){if(!this._enabled)throw new Error("SharedArrayBufferMainIO.push when disabled");e.length>h.X.maxChars&&console.log(`String '${e}' is too long to buffer`),this._readBuffer.push(e),this._readBufferCount++,this._disabling||this._readCount!==this._readSentCount||this._storeInSharedArrayBuffer()}_afterRead(){this._readCount=Atomics.load(this._intArray,1),this._readCount===this._readSentCount&&this._readBufferCount>this._readSentCount&&this._storeInSharedArrayBuffer()}_clear(){this._intArray[h.X.MAIN]=0,this._intArray[h.X.WORKER]=0,this._readCount=0,this._readBuffer=[],this._readBufferCount=0,this._readSentCount=0}_loadFromSharedArrayBuffer(){const e=Atomics.load(this._intArray,h.X.LENGTH),t=[];for(let s=0;s<e;s++)t.push(Atomics.load(this._intArray,h.X.START+s));return t}_storeInSharedArrayBuffer(){const e=this._readBuffer.shift();this._readSentCount++;const t=e.length;Atomics.store(this._intArray,h.X.LENGTH,t);for(let s=0;s<t;s++)Atomics.store(this._intArray,h.X.START+s,e.charCodeAt(s));Atomics.store(this._intArray,h.X.MAIN,this._readSentCount),Atomics.notify(this._intArray,h.X.MAIN,1);const{async:s,value:i}=Atomics.waitAsync(this._intArray,h.X.WORKER,this._readCount);s?i.then((()=>this._afterRead())):this._afterRead()}_disabling=!1;_intArray;_readBuffer=[];_readBufferCount=0;_readCount=0;_readSentCount=0;_sharedArrayBuffer}var c=s(8301),_=s(3291);class u extends l{constructor(e,t,s){super(),this._utils=new c.F(e,t,s)}async disable(){for(const e of this._readBuffer)this._sendStdinNow(e);this._readBuffer="",await super.disable()}async push(e){if(!this._enabled)throw new Error("ServiceWorkerMainIO.push when disabled");void 0!==this._stdinPromise?(this._stdinPromise.resolve(e),this._stdinPromise=void 0):this._readBuffer+=e}_clear(){void 0!==this._stdinPromise&&(this._stdinPromise.reject("stdin no longer required"),this._stdinPromise=void 0),this._readBuffer=""}async handleStdin(e){if(!this._enabled)throw new Error("ServiceWorkerMainIO.handleStdin when disabled");const{test:t,timeoutMs:s}=e;if(t)return{text:"ok:"+e.shellId};if(this._readBuffer.length>0){const e=this._readBuffer;return this._readBuffer="",{text:e}}const i=new r.PromiseDelegate;return s>0&&(0,_.cb)(s).then((()=>i.resolve(""))),this._stdinPromise=i,{text:await i.promise}}async testWithTimeout(e){if(!this._enabled)throw new Error("ServiceWorkerMainIO.testWithTimeout when disabled");const t=this._utils.getStdinAsync(0,!0),s=new Promise((t=>setTimeout((()=>t(null)),e))),i=await Promise.race([t,s]);return null===i?(console.warn("Timeout accessing service worker"),!1):i==="ok:"+this._utils.shellId||(console.warn("Error accessing service worker"),!1)}_readBuffer="";_stdinPromise;_utils}class f{packageName;moduleName;outputCallback;constructor(e,t,s){this.packageName=e,this.moduleName=t,this.outputCallback=s}dispose(){this._isDisposed||(this.stop(),this._isDisposed=!0)}get isDisposed(){return this._isDisposed}start(){void 0!==this._intervalId&&this.stop(),this._intervalId=setInterval(this._callback.bind(this),this._delayMs)}stop(){void 0!==this._intervalId&&(clearTimeout(this._intervalId),this._intervalId=void 0,this._callbackCount=0,this._displayed&&this.outputCallback(o.Q.eraseEndLine+o.Q.showCursor),this._displayed=!1)}_callback(){if(this._callbackCount<this._initialIgnore);else if(this._displayed){const e=this._dots[(this._callbackCount-this._initialIgnore)%this._dots.length];this.outputCallback(e+o.Q.cursorLeft(1))}else{const e=` downloading wasm module '${this.moduleName}'`,t=e.length;this.outputCallback(o.Q.hideCursor+this._dots[0]+e+o.Q.cursorLeft(t+1)),this._displayed=!0}this._callbackCount++}_callbackCount=0;_delayMs=100;_dots="⠇⠋⠙⠸⠴⠦";_initialIgnore=3;_intervalId;_isDisposed=!1;_displayed=!1}var p=s(3482);class g{callback;constructor(e,t){this.callback=e,this._supportsAnsiEscapes=t}supportsAnsiEscapes(){return this._supportsAnsiEscapes}write(e){this.callback(e)}_supportsAnsiEscapes}class w{options;constructor(e){this.options=e,this._shellId=e.shellId??r.UUID.uuid4(),void 0!==this.options.shellManager&&this.options.shellManager.registerShell(this._shellId,this,this._serviceWorkerHandleStdin.bind(this)),this._initialize()}async callExternalCommand(e,t,s,i,r){const a=this._externalCommands.get(e);if(void 0===a)return{exitCode:p.y.CANNOT_FIND_COMMAND};const n={name:e,args:t,environment:s,stdout:new g((e=>this._remote.externalOutput(e,!1)),i),stderr:new g((e=>this._remote.externalOutput(e,!0)),r)};return{exitCode:await a(n),newEnvironment:s}}dispose(){this._isDisposed||(console.log("Cockle Shell disposed"),this._isDisposed=!0,this._remote=void 0,this._worker.terminate(),void 0!==this._downloadTracker&&(this._downloadTracker.dispose(),this._downloadTracker=void 0),void 0!==this._sharedArrayBufferMainIO&&(this._sharedArrayBufferMainIO.dispose(),this._sharedArrayBufferMainIO=void 0),void 0!==this._serviceWorkerMainIO&&(this._serviceWorkerMainIO.dispose(),this._serviceWorkerMainIO=void 0),this._mainIO=void 0,this._disposed.emit())}get disposed(){return this._disposed}downloadWasmModuleCallback(e,t,s){s?(void 0!==this._downloadTracker&&this._downloadTracker.dispose(),this._downloadTracker=new f(e,t,this.options.outputCallback),this._downloadTracker.start()):void 0!==this._downloadTracker&&e===this._downloadTracker.packageName&&t===this._downloadTracker.moduleName&&this._downloadTracker.stop()}get isDisposed(){return this._isDisposed}async enableBufferedStdinCallback(e){this.isDisposed||(e?await(this._mainIO?.enable()):await(this._mainIO?.disable()))}async input(e){this.isDisposed||(this._mainIO?.enabled?await this._mainIO.push(e):await this._remote.input(e))}get ready(){return this._ready.promise}async registerExternalCommand(e){if(this.isDisposed)return!1;await this.ready;const{name:t,command:s}=e,i=await this._remote.registerExternalCommand(t);return i&&this._externalCommands.set(t,s),i}async setSize(e,t){this.isDisposed||await this._remote.setSize(e,t)}get shellId(){return this._shellId}async start(){this.isDisposed||(await this.ready,await this._remote.start())}async _initialize(){const e=window.crossOriginIsolated;e&&(this._sharedArrayBufferMainIO=new d);let t=!1;if(void 0!==this.options.browsingContextId){this._serviceWorkerMainIO=new u(this.options.baseUrl,this.options.browsingContextId,this.shellId),await this._serviceWorkerMainIO.enable();const e=await this._serviceWorkerMainIO.testWithTimeout(1e3);await this._serviceWorkerMainIO.disable(),e?(console.log("Service worker supports terminal stdin"),t=!0):(console.log("Service worker does not support terminal stdin"),this._serviceWorkerMainIO.dispose(),this._serviceWorkerMainIO=void 0)}if(!e&&!t){let e="ERROR: Terminal needs either SharedArrayBuffer or ServiceWorker available.";return console.error(e),(this.options.color??1)&&(e=o.Q.styleBoldRed+e+o.Q.styleReset),this.options.outputCallback(e),void this.dispose()}this._mainIO=this._sharedArrayBufferMainIO??this._serviceWorkerMainIO,this._worker=this.initWorker(this.options),this._initRemote(this.options).then(this._ready.resolve.bind(this._ready))}async _initRemote(e){this._remote=(0,n.LV)(this._worker);const t=this._sharedArrayBufferMainIO?.sharedArrayBuffer??void 0,s=void 0!==this._serviceWorkerMainIO;await this._remote.initialize({shellId:this.shellId,color:e.color??!0,mountpoint:e.mountpoint,wasmBaseUrl:e.wasmBaseUrl,baseUrl:e.baseUrl,browsingContextId:e.browsingContextId,sharedArrayBuffer:t,supportsServiceWorker:s,initialDirectories:e.initialDirectories,initialFiles:e.initialFiles},(0,n.BX)(this.callExternalCommand.bind(this)),(0,n.BX)(this.downloadWasmModuleCallback.bind(this)),(0,n.BX)(this.enableBufferedStdinCallback.bind(this)),(0,n.BX)(e.outputCallback),(0,n.BX)(this._setMainIO.bind(this)),(0,n.BX)(this.dispose.bind(this))),void 0!==this._sharedArrayBufferMainIO&&this._sharedArrayBufferMainIO.registerSendStdinNow(this._remote.input),void 0!==this._serviceWorkerMainIO&&this._serviceWorkerMainIO.registerSendStdinNow(this._remote.input)}async _serviceWorkerHandleStdin(e){if(void 0!==this._serviceWorkerMainIO)return await this._serviceWorkerMainIO.handleStdin(e);throw new Error("No serviceWorker handleStdin exists")}_setMainIO(e){if("sab"===e&&void 0!==this._sharedArrayBufferMainIO)this._mainIO=this._sharedArrayBufferMainIO;else{if("sw"!==e||void 0===this._serviceWorkerMainIO)throw new Error(`Cannot set MainIO to '${e}'`);this._mainIO=this._serviceWorkerMainIO}}_disposed=new a.Signal(this);_isDisposed=!1;_ready=new r.PromiseDelegate;_shellId;_worker;_remote;_externalCommands=new Map;_serviceWorkerMainIO;_sharedArrayBufferMainIO;_mainIO;_downloadTracker}var I=s(3226),m=s(5670);class C{flush(){}supportsAnsiEscapes(){return!1}write(e){console.log(e)}}var v=s(312),O=s(2251),y=s(2958),k=s(5981),S=s(1315),b=s(1203),E=s(4207),A=s(952);class M extends m.j{constructor(e){super(),this.target=e}flush(){this.data.forEach((e=>this.target.write(e))),this.clear(),this.target.flush()}target}var T=s(8316),N=s(7703),W=s(7497);class B extends w{options;constructor(e){super(e),this.options=e}initWorker(e){return console.log("Cockle Shell.initWorker"),new Worker(new URL(s.p+s.u(246),s.b),{type:void 0})}}var R=s(3694);class L{baseUrl;shellManager;constructor(e,t){this.baseUrl=e,this.shellManager=t,this._browsingContextId=r.UUID.uuid4(),this._broadcastChannel=new BroadcastChannel("/cockle/service-worker"),this._broadcastChannel.addEventListener("message",this._onBroadcastMessage),this._initialize().catch(console.warn)}get enabled(){return null!==this._registration}get browsingContextId(){return this._browsingContextId}get ready(){return this._ready.promise}async _initialize(){const{serviceWorker:e}=navigator;let t=null;if(e){if(e.controller){const s=e.controller.scriptURL;await this._unregisterOldServiceWorkers(s),t=await e.getRegistration(s)||null,console.info("JupyterLite ServiceWorker was already registered")}if(!t&&e)try{console.info("Registering new ServiceWorker"),t=await e.register(new URL(s(5466),s.b),{type:"module"}),console.info("ServiceWorker successfully registered")}catch(e){console.warn(e),console.warn(`JupyterLite ServiceWorker registration unexpectedly failed: ${e}`)}this._setRegistration(t),t?(this._ready.resolve(void 0),setTimeout(this._pingServiceWorker,2e4)):this._ready.reject(void 0)}else console.warn("ServiceWorkers not supported in this browser")}_onBroadcastMessage=async e=>{const{browsingContextId:t,data:s,pathname:i}=e.data;if(t!==this._browsingContextId)return;if(!i.includes("/api/stdin/terminal"))return;const r=await this.shellManager.handleStdin(s);this._broadcastChannel.postMessage({response:r,browsingContextId:this._browsingContextId})};async _pingServiceWorker(){const e=await fetch("/api/service-worker-heartbeat");"ok"===await e.text()&&setTimeout(this._pingServiceWorker,2e4)}_setRegistration(e){this._registration=e}async _unregisterOldServiceWorkers(e){const t=`${e}-version`,s=localStorage.getItem(t);if(s&&s!==R.Z||!s){console.info("New version, unregistering existing service workers.");const e=await navigator.serviceWorker.getRegistrations();await Promise.all(e.map((e=>e.unregister()))),console.info("All existing service workers have been unregistered.")}localStorage.setItem(t,R.Z)}_registration=null;_ready=new r.PromiseDelegate;_broadcastChannel;_browsingContextId}class x{async handleStdin(e){const{shellId:t}=e,s=this._shells.get(t);return void 0===s?{error:`Unrecognised shellId ${t}`}:await s(e)}async installServiceWorker(e){return void 0===this._serviceWorkerManager?(this._serviceWorkerManager=new L(e,this),await this._serviceWorkerManager.ready,await(0,_.cb)(100),this._serviceWorkerManager.browsingContextId):(console.warn("Service Worker already installed"),this._serviceWorkerManager.browsingContextId)}registerShell(e,t,s){if(""===e)throw new Error("shellId not set");if(this._shells.has(e))throw new Error(`Duplicate shellId: ${e}`);this._shells.set(e,s),t.disposed.connect((()=>this._shells.delete(e)))}shellIds(){return[...this._shells.keys()]}_shells=new Map;_serviceWorkerManager}var D=s(4133),V=s(9685)},3291:(e,t,s)=>{s.d(t,{Il:()=>n,MR:()=>l,cb:()=>r,oq:()=>a,tp:()=>o});var i=s(9399);async function r(e=10){await new Promise((t=>setTimeout(t,e)))}function a(e,t){return`${e=e.replace(/\/+$/,"")}/${t=t.replace(/^\/+/,"")}`}function n(e,t=0){if(e.length<1)return"";const s=Math.min(...e.map((e=>e.length))),i=e[0];let r=t;for(;r<s&&e.every((e=>e[r]===i[r]));)r++;return i.slice(0,r)}function o(e,t){if(e.length<1)return[];if(t<1)return[e.join("  ")];const s=e.length,i=Math.max(...e.map((e=>e.length))),r=Math.min(Math.floor(t/(i+2)),s),a=Math.ceil(s/r),n=[];for(let t=0;t<a;++t){let o="";for(let n=0;n<r;++n){const r=n*a+t;if(r>=s)continue;const l=e[r];o+=l,r+a<s&&(o+=" ".repeat(i+2-l.length))}n.push(o)}return n}function*l(e,t,s=!1,r=null){const a=e.length,n=e[0].length,o=e.map((e=>e.map((e=>e.length)))),l=Array(n).fill(0);for(let e=0;e<a;e++)for(let t=0;t<n;t++)l[t]=Math.max(l[t],o[e][t]);function h(e){let t="╭├╰"[e];for(let s=0;s<n;s++)t+="─".repeat(l[s]+2),t+=s<n-1?"┬┼┴"[e]:"╮┤╯"[e];return t}s||(yield h(0));for(let o=0;o<a;o++){const d=e[o];let c=s?"":"│ ";for(let e=0;e<n;e++){const t=r?.get(e)||null;c+=t?t+d[e]+i.Q.styleReset:d[e],c+=" ".repeat(l[e]-d[e].length),c+=s?"  ":e===n-1?" │":" │ "}if(yield c,o===t-1)if(s){let e="";for(let t=0;t<n;t++)e+="─".repeat(l[t])+"  ";yield e}else o!==a-1&&(yield h(1))}s||(yield h(2))}},4133:(e,t,s)=>{var i,r,a,n;s.d(t,{Gc:()=>o,OJ:()=>r,Uq:()=>a,hE:()=>n,tc:()=>i}),function(e){e[e.ISTRIP=32]="ISTRIP",e[e.INLCR=64]="INLCR",e[e.IGNCR=128]="IGNCR",e[e.ICRNL=256]="ICRNL",e[e.IUCLC=512]="IUCLC",e[e.IXON=1024]="IXON",e[e.IXANY=2048]="IXANY",e[e.IMAXBEL=8192]="IMAXBEL",e[e.IUTF8=16384]="IUTF8"}(i||(i={})),function(e){e[e.OPOST=1]="OPOST",e[e.OLCUC=2]="OLCUC",e[e.ONLCR=4]="ONLCR",e[e.OCRNL=8]="OCRNL",e[e.ONOCR=16]="ONOCR",e[e.ONLRET=32]="ONLRET",e[e.TABDLY=6144]="TABDLY"}(r||(r={})),function(e){e[e.ISIG=1]="ISIG",e[e.ICANON=2]="ICANON",e[e.ECHO=8]="ECHO",e[e.ECHOE=16]="ECHOE",e[e.ECHOK=32]="ECHOK",e[e.ECHONL=64]="ECHONL",e[e.NOFLSH=128]="NOFLSH",e[e.ECHOCTL=512]="ECHOCTL",e[e.ECHOPRT=1024]="ECHOPRT",e[e.ECHOKE=2048]="ECHOKE",e[e.IEXTEN=32768]="IEXTEN"}(a||(a={})),function(e){e[e.VINTR=0]="VINTR",e[e.VQUIT=1]="VQUIT",e[e.VERASE=2]="VERASE",e[e.VKILL=3]="VKILL",e[e.VEOF=4]="VEOF",e[e.VTIME=5]="VTIME",e[e.VMIN=6]="VMIN",e[e.VSWTCH=7]="VSWTCH",e[e.VSTART=8]="VSTART",e[e.VSTOP=9]="VSTOP",e[e.VSUSP=10]="VSUSP",e[e.VEOL=11]="VEOL",e[e.VREPRINT=12]="VREPRINT",e[e.VDISCARD=13]="VDISCARD",e[e.VWERASE=14]="VWERASE",e[e.VLNEXT=15]="VLNEXT",e[e.VEOL2=16]="VEOL2"}(n||(n={}));class o{clone(){return{c_iflag:this.c_iflag,c_oflag:this.c_oflag,c_cflag:this.c_cflag,c_lflag:this.c_lflag,c_cc:[...this.c_cc]}}log(e){const t=(e,t,s)=>{const i=[];for(const[t,r]of Object.entries(e).filter((([e,t])=>e[0].match(/\D/))))(s&r)>0&&i.push(t);return`  ${t} = ${s} 0x${s.toString(16)} = ${i.join(" ")}`},s=["Cockle "+e+":"];s.push(t(i,"c_iflag",this.c_iflag)),s.push(t(r,"c_oflag",this.c_oflag)),s.push(`  c_cflag = ${this.c_cflag} 0x${this.c_cflag.toString(16)}`),s.push(t(a,"c_lflag",this.c_lflag)),s.push(`  c_cc = ${this.c_cc}`),console.log(s.join("\n"))}static newDefaultWasm(){const e=new o;return e.setDefaultWasm(),e}set(e){this.c_iflag=e.c_iflag,this.c_oflag=e.c_oflag,this.c_cflag=e.c_cflag,this.c_lflag=e.c_lflag,this.c_cc=[...e.c_cc],this.log("Termios set")}setDefaultWasm(){this.c_iflag=i.IUTF8|i.IMAXBEL|i.IXON|i.ICRNL,this.c_oflag=r.OPOST|r.ONLCR,this.c_cflag=191,this.c_lflag=a.IEXTEN|a.ECHOKE|a.ECHOCTL|a.ECHOK|a.ECHOE|a.ECHO|a.ICANON|a.ISIG,this.c_cc=[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.log("Termios setDefaultWasm")}c_iflag=0;c_oflag=0;c_cflag=0;c_lflag=0;c_cc=[]}},5466:()=>{const e=new BroadcastChannel("/cockle/service-worker");self.addEventListener("install",(function(e){self.skipWaiting()})),self.addEventListener("activate",(function(e){e.waitUntil(self.clients.claim())})),self.addEventListener("fetch",(async function(t){const{request:s}=t,i=new URL(s.url),r=i.pathname;if("/api/service-worker-heartbeat"!==r){if(r.endsWith("/api/stdin/terminal")){const r=async function(t,s){const i=await t.json(),r=new Promise((t=>{const s=r=>{const a=r.data;if(a.browsingContextId!==i.browsingContextId)return;const n=a.response;t(new Response(JSON.stringify(n))),e.removeEventListener("message",s)};e.addEventListener("message",s)}));return i.pathname=s.pathname,e.postMessage(i),await r}(s,i);t.respondWith(r)}}else t.respondWith(new Response("ok"))}))}}]);