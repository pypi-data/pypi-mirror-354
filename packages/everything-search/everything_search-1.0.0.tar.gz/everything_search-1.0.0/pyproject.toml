[project]
name = "everything-search"
version = "1.0.0"
description = "高性能文件搜索工具 - 类似于Windows Everything的macOS解决方案"
authors = [
    {name = "duolabmeng6", email = "1715109585@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["file-search", "indexing", "macos", "everything", "search-engine", "gui", "desktop"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",

    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
    "Topic :: Desktop Environment :: File Managers",
]

dependencies = [
    "watchdog>=6.0.0",
    "pyside6>=6.5.0",
]

[project.optional-dependencies]
dev = [
]

[project.scripts]
everything-index = "everything_search.cli.index_cli:main"
everything-search = "everything_search.cli.search_cli:main"
everything-gui = "everything_search.gui_main:main"

[project.urls]
Homepage = "https://github.com/duolabmeng6/everything-for-mac"
Repository = "https://github.com/duolabmeng6/everything-for-mac"
Documentation = "https://github.com/duolabmeng6/everything-for-mac#readme"
"Bug Tracker" = "https://github.com/duolabmeng6/everything-for-mac/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["everything_search"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=core",
    "--cov=cli",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["core", "cli"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
