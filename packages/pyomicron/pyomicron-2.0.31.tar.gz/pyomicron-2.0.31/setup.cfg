[metadata]
name = pyomicron
author = Duncan Macleod
author_email = duncan.macleod@ligo.org
maintainer = Joseph Areeda
maintainer_email = joseph.areeda@ligo.org
license = "GPL-3.0-or-later"
license_files = LICENSE
description = Python utilities and wrappers for GW Omicron
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/gwpy/pyomicron
download_url = https://pypi.org/project/pyomicron/
project_urls = 
	Bug Tracker = https://github.com/gwpy/pyomicron/issues
	Documentation = https://pyomicron.readthedocs.io
	Source Code = https://github.com/gwpy/pyomicron.git
classifiers = 
	Development Status :: 5 - Production/Stable
	Intended Audience :: Science/Research
	Intended Audience :: End Users/Desktop
	Intended Audience :: Developers
	License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
	Natural Language :: English
	Operating System :: POSIX
	Operating System :: Unix
	Operating System :: MacOS
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Topic :: Scientific/Engineering
	Topic :: Scientific/Engineering :: Astronomy
	Topic :: Scientific/Engineering :: Physics

[pycodestyle]
statistics = true
ignore = E402
max-line-length = 128

[flake8]
ignore = E402, C901
max-line-length = 128
max-complexity = 15
exclude = 
	__pycache__,
	.eggs/,
	.git/,
	build/,
	docs/,
	omicron/_version.py,
	venv/,
	versioneer.py,
per-file-ignores = 
	__init__.py:F401

[options]
packages = find:
python_requires = >=3.10, <3.12
install_requires = 
	dqsegdb2 >= 1.2.0
	gpstime
	gwdatafind
	gwpy >= 2.0.0
	h5py
	htcondor
	igwn-auth-utils[requests] >=0.2.0
	ligo-segments
	lscsoft-glue >= 1.60.0
	MarkupPy
	numpy
	packaging
	pycondor
	python-ligo-lw >= 1.4.0
	omicron_utils

[options.extras_require]
test = 
	pytest >=3.9.1
	pytest-cov
	requests-mock
docs = 
	numpydoc
	sphinx
	sphinx_rtd_theme
	sphinxcontrib-programoutput
conda = 
	omicron >= 2.3.12

[options.entry_points]
console_scripts = 
	omicron-archive = omicron.cli.archive:main
	omicron-hdf5-merge = omicron.cli.hdf5_merge:main
	omicron-merge-with-gaps = omicron.cli.merge_with_gaps:main
	omicron-post-script = omicron.cli.omicron_post_script:main
	omicron-process = omicron.cli.process:main
	omicron-root-merge = omicron.cli.root_merge:main
	omicron-show = omicron.cli.show:main
	omicron-status = omicron.cli.status:main

[coverage:run]
source = omicron
omit = 
	omicron/_version.py

[egg_info]
tag_build = 
tag_date = 0

