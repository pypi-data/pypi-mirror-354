# python build stubs for package bbta
# File is generated by gopy. Do not edit.
# gopy build -no-make -dynamic-link=True -output build/lib.linux-aarch64-cpython-39/bbta -name bbta -vm /opt/python/cp39-cp39/bin/python github.com/banbox/banta/python/ta github.com/banbox/banta/python/tav

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_bbta')
mod.add_include('"bbta_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_from_bytes', retval('int64_t'), [param('PyObject*', 'o', transfer_ownership=False)])
mod.add_function('Slice_byte_to_bytes', retval('PyObject*', caller_owns_return=True), [param('int64_t', 'handle')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Array_2_banta_Series_CTor', retval('int64_t'), [])
mod.add_function('Array_2_banta_Series_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_2_banta_Series_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_2_banta_Series_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Array_3_banta_Series_CTor', retval('int64_t'), [])
mod.add_function('Array_3_banta_Series_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_3_banta_Series_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_3_banta_Series_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Array_4_banta_Series_CTor', retval('int64_t'), [])
mod.add_function('Array_4_banta_Series_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_4_banta_Series_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_4_banta_Series_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_banta_Series_CTor', retval('int64_t'), [])
mod.add_function('Slice_Ptr_banta_Series_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Ptr_banta_Series_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Ptr_banta_Series_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Ptr_banta_Series_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_banta_Series_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_banta_XState_CTor', retval('int64_t'), [])
mod.add_function('Slice_Ptr_banta_XState_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Ptr_banta_XState_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Ptr_banta_XState_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Ptr_banta_XState_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_banta_XState_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Map_int_Ptr_banta_CrossLog_CTor', retval('int64_t'), [])
mod.add_function('Map_int_Ptr_banta_CrossLog_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_int_Ptr_banta_CrossLog_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_int_Ptr_banta_CrossLog_contains', retval('bool'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_int_Ptr_banta_CrossLog_set', None, [param('int64_t', 'handle'), param('int64_t', 'key'), param('int64_t', 'value')])
mod.add_function('Map_int_Ptr_banta_CrossLog_delete', None, [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_int_Ptr_banta_CrossLog_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_int_Ptr_banta_Series_CTor', retval('int64_t'), [])
mod.add_function('Map_int_Ptr_banta_Series_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_int_Ptr_banta_Series_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_int_Ptr_banta_Series_contains', retval('bool'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_int_Ptr_banta_Series_set', None, [param('int64_t', 'handle'), param('int64_t', 'key'), param('int64_t', 'value')])
mod.add_function('Map_int_Ptr_banta_Series_delete', None, [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_int_Ptr_banta_Series_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_interface__CTor', retval('int64_t'), [])
mod.add_function('Map_string_interface__len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_interface__elem', retval('char*'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_interface__contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_interface__set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('char*', 'value')])
mod.add_function('Map_string_interface__delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_interface__keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_Map_int_Ptr_banta_Series_CTor', retval('int64_t'), [])
mod.add_function('Map_string_Map_int_Ptr_banta_Series_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_Map_int_Ptr_banta_Series_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Map_int_Ptr_banta_Series_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Map_int_Ptr_banta_Series_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_Map_int_Ptr_banta_Series_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Map_int_Ptr_banta_Series_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_CTor', retval('int64_t'), [])
mod.add_function('banta_BarEnv_TimeStart_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_TimeStart_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_TimeStop_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_TimeStop_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_Exchange_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_Exchange_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('banta_BarEnv_MarketType_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_MarketType_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('banta_BarEnv_Symbol_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_Symbol_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('banta_BarEnv_TimeFrame_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_TimeFrame_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('banta_BarEnv_TFMSecs_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_TFMSecs_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_BarNum_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_BarNum_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_MaxCache_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_MaxCache_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_VNum_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_VNum_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_Open_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_Open_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_High_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_High_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_Low_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_Low_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_Close_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_Close_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_Volume_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_Volume_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_Info_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_Info_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_BarEnv_Data_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_BarEnv_Data_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'banta_BarEnv_OnBar', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'barMs'), param('double', 'open'), param('double', 'high'), param('double', 'low'), param('double', 'close'), param('double', 'volume'), param('double', 'info')])
add_checked_function(mod, 'banta_BarEnv_Reset', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'banta_BarEnv_TrimOverflow', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'banta_BarEnv_NewSeries', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'data')])
add_checked_function(mod, 'banta_BarEnv_BarCount', retval('double'), [param('int64_t', '_handle'), param('int64_t', 'start')])
mod.add_function('banta_CrossLog_CTor', retval('int64_t'), [])
mod.add_function('banta_CrossLog_Time_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_CrossLog_Time_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_CrossLog_PrevVal_Get', retval('double'), [param('int64_t', 'handle')])
mod.add_function('banta_CrossLog_PrevVal_Set', None, [param('int64_t', 'handle'), param('double', 'val')])
mod.add_function('banta_CrossLog_Hist_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_CrossLog_Hist_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_Series_CTor', retval('int64_t'), [])
mod.add_function('banta_Series_ID_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_Series_ID_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_Series_Env_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_Series_Env_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_Series_Data_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_Series_Data_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_Series_Cols_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_Series_Cols_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_Series_Time_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_Series_Time_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_Series_Subs_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_Series_Subs_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('banta_Series_XLogs_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('banta_Series_XLogs_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'banta_Series_Set', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj')])
add_checked_function(mod, 'banta_Series_Append', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj')])
add_checked_function(mod, 'banta_Series_Cached', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'banta_Series_Get', retval('double'), [param('int64_t', '_handle'), param('int64_t', 'i')])
add_checked_function(mod, 'banta_Series_Range', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'start'), param('int64_t', 'stop')])
add_checked_function(mod, 'banta_Series_Add', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj')])
add_checked_function(mod, 'banta_Series_Sub', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj')])
add_checked_function(mod, 'banta_Series_Mul', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj')])
add_checked_function(mod, 'banta_Series_Div', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj')])
add_checked_function(mod, 'banta_Series_Min', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj')])
add_checked_function(mod, 'banta_Series_Max', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj')])
add_checked_function(mod, 'banta_Series_Abs', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'banta_Series_Len', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'banta_Series_Cut', None, [param('int64_t', '_handle'), param('int64_t', 'keepNum'), param('bool', 'goRun')])
add_checked_function(mod, 'banta_Series_Back', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'num')])
add_checked_function(mod, 'banta_Series_To', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'k'), param('int64_t', 'v')])
add_checked_function(mod, 'banta_Series_Cross', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj2')])
add_checked_function(mod, 'ta_EMABy', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('int64_t', 'initType')])
add_checked_function(mod, 'ta_RMA', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_RSI50', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_TR', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close')])
add_checked_function(mod, 'ta_CMO', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_ChaikinOsc', retval('int64_t'), [param('int64_t', 'env'), param('int64_t', 'sml'), param('int64_t', 'big')])
add_checked_function(mod, 'ta_STC', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('int64_t', 'fast'), param('int64_t', 'slow'), param('double', 'alpha')])
add_checked_function(mod, 'ta_CRSIBy', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('int64_t', 'upDn'), param('int64_t', 'roc'), param('int64_t', 'vtype')])
add_checked_function(mod, 'ta_CTI', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_HL2', retval('int64_t'), [param('int64_t', 'h'), param('int64_t', 'l')])
add_checked_function(mod, 'ta_LowestBar', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_DV2', retval('int64_t'), [param('int64_t', 'h'), param('int64_t', 'l'), param('int64_t', 'c'), param('int64_t', 'period'), param('int64_t', 'maLen')])
add_checked_function(mod, 'ta_WMA', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_WillR', retval('int64_t'), [param('int64_t', 'e'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_ADXBy', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period'), param('int64_t', 'smoothing'), param('int64_t', 'method')])
add_checked_function(mod, 'ta_CMF', retval('int64_t'), [param('int64_t', 'env'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_PercentRank', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_HLC3', retval('int64_t'), [param('int64_t', 'h'), param('int64_t', 'l'), param('int64_t', 'c')])
add_checked_function(mod, 'ta_HMA', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_Lowest', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_TD', retval('int64_t'), [param('int64_t', 'obj')])
add_checked_function(mod, 'ta_ALMA', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('double', 'sigma'), param('double', 'distOff')])
add_checked_function(mod, 'ta_CCI', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_EMA', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_LinRegAdv', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('bool', 'angle'), param('bool', 'intercept'), param('bool', 'degrees'), param('bool', 'r'), param('bool', 'slope'), param('bool', 'tsf')])
add_checked_function(mod, 'ta_LinReg', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_MFI', retval('int64_t'), [param('int64_t', 'e'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_KAMA', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_RMABy', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('int64_t', 'initType'), param('double', 'initVal')])
add_checked_function(mod, 'ta_Sum', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_Stoch', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_ATR', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_AvgDev', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_CMOBy', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('int64_t', 'maType')])
add_checked_function(mod, 'ta_Highest', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_RSI', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_ADL', retval('int64_t'), [param('int64_t', 'env')])
add_checked_function(mod, 'ta_Stiffness', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'maLen'), param('int64_t', 'stiffLen'), param('int64_t', 'stiffMa')])
add_checked_function(mod, 'ta_KAMABy', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('int64_t', 'fast'), param('int64_t', 'slow')])
add_checked_function(mod, 'ta_RMI', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('int64_t', 'montLen')])
add_checked_function(mod, 'ta_UTBot', retval('int64_t'), [param('int64_t', 'c'), param('int64_t', 'atr'), param('double', 'rate')])
add_checked_function(mod, 'ta_StdDev', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_VWMA', retval('int64_t'), [param('int64_t', 'price'), param('int64_t', 'vol'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_ADX', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_AvgPrice', retval('int64_t'), [param('int64_t', 'e')])
add_checked_function(mod, 'ta_CHOP', retval('int64_t'), [param('int64_t', 'e'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_CRSI', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('int64_t', 'upDn'), param('int64_t', 'roc')])
add_checked_function(mod, 'ta_ROC', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_ER', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_HighestBar', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_SMA', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_UpDown', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'vtype')])
add_checked_function(mod, 'ta_MACD', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'fast'), param('int64_t', 'slow'), param('int64_t', 'smooth')])
add_checked_function(mod, 'ta_HeikinAshi', retval('int64_t'), [param('int64_t', 'e')])
add_checked_function(mod, 'ta_PluMinDM', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_StochRSI', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'rsiLen'), param('int64_t', 'stochLen'), param('int64_t', 'maK'), param('int64_t', 'maD')])
add_checked_function(mod, 'ta_KDJ', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period'), param('int64_t', 'sm1'), param('int64_t', 'sm2')])
add_checked_function(mod, 'ta_MACDBy', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'fast'), param('int64_t', 'slow'), param('int64_t', 'smooth'), param('int64_t', 'initType')])
add_checked_function(mod, 'ta_PluMinDI', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_WrapFloatArr', retval('int64_t'), [param('int64_t', 'res'), param('int64_t', 'period'), param('double', 'inVal')])
add_checked_function(mod, 'ta_Aroon', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'period')])
add_checked_function(mod, 'ta_BBANDS', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('double', 'stdUp'), param('double', 'stdDn')])
add_checked_function(mod, 'ta_StdDevBy', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'period'), param('int64_t', 'ddof')])
add_checked_function(mod, 'ta_KDJBy', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period'), param('int64_t', 'sm1'), param('int64_t', 'sm2'), param('char*', 'maBy')])
mod.add_function('Array_2_Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Array_2_Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_2_Slice_float64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_2_Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Array_3_Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Array_3_Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_3_Slice_float64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_3_Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Array_4_Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Array_4_Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_4_Slice_float64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_4_Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
add_checked_function(mod, 'tav_SMA', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_Aroon', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_BBANDS', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('double', 'stdUp'), param('double', 'stdDn')])
add_checked_function(mod, 'tav_CCI', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_CMOBy', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('int64_t', 'maType')])
add_checked_function(mod, 'tav_CTI', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_HeikinAshi', retval('int64_t'), [param('int64_t', 'open'), param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close')])
add_checked_function(mod, 'tav_ADXBy', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period'), param('int64_t', 'smoothing'), param('int64_t', 'method')])
add_checked_function(mod, 'tav_EMABy', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('int64_t', 'initType')])
add_checked_function(mod, 'tav_VWMA', retval('int64_t'), [param('int64_t', 'price'), param('int64_t', 'volume'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_CRSI', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('int64_t', 'upDn'), param('int64_t', 'rocVal')])
add_checked_function(mod, 'tav_Highest', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_LinRegAdv', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('bool', 'angle'), param('bool', 'intercept'), param('bool', 'degrees'), param('bool', 'r'), param('bool', 'slope'), param('bool', 'tsf')])
add_checked_function(mod, 'tav_PluMinDI', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_PluMinDM', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'cls'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_TD', retval('int64_t'), [param('int64_t', 'data')])
add_checked_function(mod, 'tav_AvgDev', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_CMF', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'volume'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_KDJBy', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period'), param('int64_t', 'sm1'), param('int64_t', 'sm2'), param('char*', 'maBy')])
add_checked_function(mod, 'tav_UpDown', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'vtype')])
add_checked_function(mod, 'tav_KAMA', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_MACD', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'fast'), param('int64_t', 'slow'), param('int64_t', 'smooth')])
add_checked_function(mod, 'tav_Sum', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_TR', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close')])
add_checked_function(mod, 'tav_ALMA', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('double', 'sigma'), param('double', 'distOff')])
add_checked_function(mod, 'tav_HL2', retval('int64_t'), [param('int64_t', 'a'), param('int64_t', 'b')])
add_checked_function(mod, 'tav_UTBot', retval('int64_t'), [param('int64_t', 'c'), param('int64_t', 'atr'), param('double', 'rate')])
add_checked_function(mod, 'tav_ADX', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_KDJ', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period'), param('int64_t', 'sm1'), param('int64_t', 'sm2')])
add_checked_function(mod, 'tav_MFI', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'volume'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_RMI', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('int64_t', 'montLen')])
add_checked_function(mod, 'tav_ROC', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_Stoch', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_KAMABy', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('int64_t', 'fast'), param('int64_t', 'slow')])
add_checked_function(mod, 'tav_StdDev', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_RSI', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_RSIBy', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('double', 'subVal')])
add_checked_function(mod, 'tav_STC', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('int64_t', 'fast'), param('int64_t', 'slow'), param('double', 'alpha')])
add_checked_function(mod, 'tav_StdDevBy', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('int64_t', 'ddof')])
add_checked_function(mod, 'tav_RMA', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_CMO', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_Cross', retval('int64_t'), [param('int64_t', 'data1'), param('int64_t', 'data2')])
add_checked_function(mod, 'tav_HLC3', retval('int64_t'), [param('int64_t', 'a'), param('int64_t', 'b'), param('int64_t', 'c')])
add_checked_function(mod, 'tav_HighestBar', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_LinReg', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_PercentRank', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_StochRSI', retval('int64_t'), [param('int64_t', 'obj'), param('int64_t', 'rsiLen'), param('int64_t', 'stochLen'), param('int64_t', 'maK'), param('int64_t', 'maD')])
add_checked_function(mod, 'tav_ATR', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_CHOP', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_DV2', retval('int64_t'), [param('int64_t', 'h'), param('int64_t', 'l'), param('int64_t', 'c'), param('int64_t', 'period'), param('int64_t', 'maLen')])
add_checked_function(mod, 'tav_ER', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_LowestBar', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_Stiffness', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'maLen'), param('int64_t', 'stiffLen'), param('int64_t', 'stiffMa')])
add_checked_function(mod, 'tav_CRSIBy', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('int64_t', 'upDn'), param('int64_t', 'rocVal'), param('int64_t', 'vtype')])
add_checked_function(mod, 'tav_Lowest', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_MACDBy', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'fast'), param('int64_t', 'slow'), param('int64_t', 'smooth'), param('int64_t', 'initType')])
add_checked_function(mod, 'tav_RMABy', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period'), param('int64_t', 'initType'), param('double', 'initVal')])
add_checked_function(mod, 'tav_WMA', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_WillR', retval('int64_t'), [param('int64_t', 'high'), param('int64_t', 'low'), param('int64_t', 'close'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_EMA', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])
add_checked_function(mod, 'tav_HMA', retval('int64_t'), [param('int64_t', 'data'), param('int64_t', 'period')])

mod.generate(open('bbta.c', 'w'))

