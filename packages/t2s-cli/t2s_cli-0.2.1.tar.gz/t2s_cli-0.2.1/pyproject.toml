[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "t2s-cli"
version = "0.2.1"
description = "Terminal-based Text-to-SQL converter with AI model integration"
authors = [
    {email = "lakshmanturlapati@gmail.com"},
    {name = "Lakshman Turlapati"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["sql", "text-to-sql", "ai", "database", "cli", "terminal"]

dependencies = [
    "torch>=2.0.0",
    "transformers>=4.40.0",
    "accelerate>=0.25.0",
    "huggingface-hub>=0.20.0",
    "datasets>=2.16.0",
    "tokenizers>=0.15.0",
    "sentencepiece>=0.1.99",  # Required for SQLCoder and other models using CodeLlamaTokenizer
    "protobuf>=3.20.0",  # Required for sentencepiece and some model formats
    "rich>=13.0.0",
    "click>=8.1.0",
    "questionary>=2.0.0",
    "art>=6.0",
    "tabulate>=0.9.0",
    "pandas>=2.0.0",
    "sqlalchemy>=2.0.0",
    "sqlparse>=0.4.0",
    "psycopg2-binary>=2.9.0",
    "pymysql>=1.0.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pillow>=9.0.0",  # Required for multimodal models like SmolVLM
]

[project.optional-dependencies]
gemma = [
    "sentencepiece>=0.1.99",  # Required for Gemma tokenizers
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
all = [
    "sentencepiece>=0.1.99",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
]

[project.scripts]
t2s = "t2s.cli:main"

[project.urls]
Homepage = "https://github.com/lakshmanturlapati/t2s-cli"
Repository = "https://github.com/lakshmanturlapati/t2s-cli"
Documentation = "https://github.com/lakshmanturlapati/t2s-cli#readme"
Issues = "https://github.com/lakshmanturlapati/t2s-cli/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["t2s*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"] 