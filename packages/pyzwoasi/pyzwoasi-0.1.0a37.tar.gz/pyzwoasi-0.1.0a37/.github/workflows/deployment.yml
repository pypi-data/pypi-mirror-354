name: Deployment workflow to PyPI

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with: 
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build setuptools_scm

    - name: Build package
      run: python -m build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build
    runs-on: ubuntu-latest
    
    environment:
      name: pypi # Should be testpypi for testing
      url: https://pypi.org/p/pyzwoasi # Should be test.pypi.org for testing

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # with: # These two lines are only for test-PyPI
        # repository-url: https://test.pypi.org/legacy/

  github-release:
    name: >-
      Sign the Python distribution with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    
    - name: Determines if prerelease
      id: prerelease
      run: |
        if [[ "$GITHUB_REF_NAME" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+[a-zA-Z].* || "$GITHUB_REF_NAME" =~ ^[^v].* ]]; then
          echo "PRERELEASE=true" >> $GITHUB_ENV
        else
          echo "PRERELEASE=false" >> $GITHUB_ENV
        fi

    - name: Extract version from tag
      run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
    
    - name: Defining (pre)release name
      run: >-
        RELEASE_NAME="PyZWOASI ${{ env.VERSION }}"
          
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        if [ "${{ env.PRERELEASE }}" = "true" ]; then
          gh release create \
          "$GITHUB_REF_NAME" \
          --repo "$GITHUB_REPOSITORY" \
          --title "$RELEASE_NAME" \
          --notes "" --prerelease
        else
          gh release create \
          "$GITHUB_REF_NAME" \
          --repo "$GITHUB_REPOSITORY" \
          --title "$RELEASE_NAME" \
          --notes ""
        fi
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/**
        --repo "$GITHUB_REPOSITORY"