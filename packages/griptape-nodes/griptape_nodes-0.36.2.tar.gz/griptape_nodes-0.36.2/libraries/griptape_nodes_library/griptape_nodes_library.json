{
  "name": "Griptape Nodes Library",
  "library_schema_version": "0.1.0",
  "metadata": {
    "author": "Griptape, Inc",
    "description": "Default nodes for Griptape Nodes",
    "library_version": "0.34.0",
    "engine_version": "0.34.0",
    "tags": [
      "Griptape",
      "AI"
    ]
  },
  "categories": [
    {
      "misc": {
        "title": "misc",
        "description": "Miscellaneous nodes",
        "color": "border-gray-500",
        "icon": "Folder"
      }
    },
    {
      "execution_flow": {
        "color": "border-green-500",
        "title": "Execution Flow",
        "description": "Execution Nodes",
        "icon": "Braces"
      }
    },
    {
      "agents": {
        "color": "border-red-500",
        "title": "Agent",
        "description": "Nodes related to Agents",
        "icon": "UserCircle"
      }
    },
    {
      "prompt_models": {
        "color": "border-lime-500",
        "title": "Prompt",
        "description": "Prompt Drivers for Griptape Agents",
        "icon": "Truck"
      }
    },
    {
      "rules": {
        "color": "border-amber-500",
        "title": "Rules",
        "description": "Basic nodes",
        "icon": "Scale"
      }
    },
    {
      "tools": {
        "color": "border-cyan-500",
        "title": "Tools",
        "description": "Tools an agent can use",
        "icon": "Wrench"
      }
    },
    {
      "tools/config": {
        "color": "border-cyan-500",
        "title": "Drivers",
        "description": "Drivers for Griptape Agents",
        "icon": "Truck"
      }
    },
    {
      "3D": {
        "color": "border-indigo-500",
        "title": "3D",
        "description": "3D model related nodes",
        "icon": "Cube"
      }
    },
    {
      "audio": {
        "color": "border-sky-500",
        "title": "Audio",
        "description": "Audio related nodes",
        "icon": "SpeakerWave"
      }
    },
    {
      "video": {
        "color": "border-pink-500",
        "title": "Video",
        "description": "Video related nodes",
        "icon": "Video"
      }
    },
    {
      "image": {
        "color": "border-purple-500",
        "title": "Image",
        "description": "Image related nodes",
        "icon": "Image"
      }
    },
    {
      "image_models": {
        "color": "border-lime-500",
        "title": "Image",
        "description": "Image Drivers for Griptape Agents",
        "icon": "Truck"
      }
    },
    {
      "image/depth": {
        "color": "border-purple-500",
        "title": "image/depth",
        "description": "",
        "icon": "Image"
      }
    },
    {
      "image/edge": {
        "color": "border-purple-500",
        "title": "image/edge",
        "description": "",
        "icon": "Image"
      }
    },
    {
      "image/flux": {
        "color": "border-purple-500",
        "title": "image/flux",
        "description": "",
        "icon": "Image"
      }
    },
    {
      "image/flux/controlnet": {
        "color": "border-purple-500",
        "title": "image/flux/controlnet",
        "description": "",
        "icon": "Image"
      }
    },
    {
      "image/flux/loras": {
        "color": "border-purple-500",
        "title": "image/flux/loras",
        "description": "",
        "icon": "Image"
      }
    },
    {
      "image/upscale": {
        "color": "border-purple-500",
        "title": "Image/Upscale",
        "description": "Image upscaling related nodes",
        "icon": "Image"
      }
    },
    {
      "number": {
        "color": "border-blue-500",
        "title": "Number",
        "description": "Number Nodes",
        "icon": "Hash"
      }
    },
    {
      "text": {
        "color": "border-blue-500",
        "title": "Text",
        "description": "Text related nodes",
        "icon": "DocumentText"
      }
    },
    {
      "dict": {
        "color": "border-green-500",
        "title": "Dictionary",
        "description": "Dictionary Nodes",
        "icon": "Braces"
      }
    },
    {
      "convert": {
        "color": "border-cyan-500",
        "title": "Convert",
        "description": "Convert nodes",
        "icon": "Shuffle"
      }
    },
    {
      "utils": {
        "color": "border-gray-500",
        "title": "Utility",
        "description": "Utility nodes like save, etc., etc",
        "icon": "Cog"
      }
    },
    {
      "workflows": {
        "color": "border-gray-500",
        "title": "Workflows",
        "description": "Nodes for executing Workflows",
        "icon": "Workflow"
      }
    }
  ],
  "nodes": [
    {
      "class_name": "Agent",
      "file_path": "griptape_nodes_library/agents/agent.py",
      "metadata": {
        "category": "agents",
        "description": "Creates an AI agent with conversation memory and the ability to use tools",
        "display_name": "Agent"
      }
    },
    {
      "class_name": "LoadAudio",
      "file_path": "griptape_nodes_library/audio/load_audio.py",
      "metadata": {
        "category": "audio",
        "description": "Loads audio files into your workflow",
        "display_name": "Load Audio"
      }
    },
    {
      "class_name": "TranscribeAudio",
      "file_path": "griptape_nodes_library/audio/transcribe_audio.py",
      "metadata": {
        "category": "audio",
        "description": "Transcribe audio files into text.\nRequires an OpenAI API key.",
        "display_name": "Transcribe Audio"
      }
    },
    {
      "class_name": "Microphone",
      "file_path": "griptape_nodes_library/audio/microphone.py",
      "metadata": {
        "category": "audio",
        "description": "Can record audio from your microphone.",
        "display_name": "Microphone"
      }
    },
    {
      "class_name": "LoadVideo",
      "file_path": "griptape_nodes_library/video/load_video.py",
      "metadata": {
        "category": "video",
        "description": "Loads video files into your workflow",
        "display_name": "Load Video"
      }
    },
    {
      "class_name": "DisplayVideo",
      "file_path": "griptape_nodes_library/video/display_video.py",
      "metadata": {
        "category": "video",
        "description": "Display a video",
        "display_name": "Display Video"
      }
    },
    {
      "class_name": "SaveVideo",
      "file_path": "griptape_nodes_library/video/save_video.py",
      "metadata": {
        "category": "video",
        "description": "Save a video to a file",
        "display_name": "Save Video"
      }
    },
    {
      "class_name": "ToBool",
      "file_path": "griptape_nodes_library/convert/to_bool.py",
      "metadata": {
        "category": "convert",
        "description": "Converts incoming value to a boolean",
        "display_name": "To Bool"
      }
    },
    {
      "class_name": "ToDictionary",
      "file_path": "griptape_nodes_library/convert/to_dict.py",
      "metadata": {
        "category": "convert",
        "description": "Converts incoming value to a dictionary",
        "display_name": "To Dictionary"
      }
    },
    {
      "class_name": "ToFloat",
      "file_path": "griptape_nodes_library/convert/to_float.py",
      "metadata": {
        "category": "convert",
        "description": "Converts incoming value to a float",
        "display_name": "To Float"
      }
    },
    {
      "class_name": "ToInteger",
      "file_path": "griptape_nodes_library/convert/to_int.py",
      "display_name": "To Integer",
      "metadata": {
        "category": "convert",
        "description": "Converts incoming value to an integer",
        "display_name": "To Integer"
      }
    },
    {
      "class_name": "ToText",
      "file_path": "griptape_nodes_library/convert/to_text.py",
      "metadata": {
        "category": "convert",
        "description": "Converts incoming value to text",
        "display_name": "To Text"
      }
    },
    {
      "class_name": "DisplayDictionary",
      "file_path": "griptape_nodes_library/dict/display_dict.py",
      "metadata": {
        "category": "dict",
        "description": "Displays dictionary data",
        "display_name": "Display Dictionary"
      }
    },
    {
      "class_name": "KeyValuePair",
      "file_path": "griptape_nodes_library/dict/key_value_pair.py",
      "metadata": {
        "category": "dict",
        "description": "Create a Key Value Pair",
        "display_name": "Key Value Pair"
      }
    },
    {
      "class_name": "LoadDictionary",
      "file_path": "griptape_nodes_library/dict/load_dict.py",
      "metadata": {
        "category": "dict",
        "description": "Loads a dictionary from disk",
        "display_name": "Load Dictionary"
      }
    },
    {
      "class_name": "MergeKeyValuePairs",
      "file_path": "griptape_nodes_library/dict/merge_key_value_pair.py",
      "metadata": {
        "category": "dict",
        "description": "Merges multiple Key/Value Pairs into a single dictionary",
        "display_name": "Merge Key Value Pairs"
      }
    },
    {
      "class_name": "SaveDictionary",
      "file_path": "griptape_nodes_library/dict/save_dict.py",
      "metadata": {
        "category": "dict",
        "description": "Save dictionary data to a file",
        "display_name": "Save Dictionary"
      }
    },
    {
      "class_name": "GriptapeCloudImage",
      "file_path": "griptape_nodes_library/config/image/griptape_cloud_image_driver.py",
      "metadata": {
        "category": "image_models",
        "description": "Image Generation Models available from Griptape Cloud",
        "display_name": "Griptape Cloud Image"
      }
    },
    {
      "class_name": "GrokImage",
      "file_path": "griptape_nodes_library/config/image/grok_image_driver.py",
      "metadata": {
        "category": "image_models",
        "description": "Image Generation Models available from xAI Grok",
        "display_name": "Grok Image"
      }
    },
    {
      "class_name": "OpenAiImage",
      "file_path": "griptape_nodes_library/config/image/openai_image_driver.py",
      "metadata": {
        "category": "image_models",
        "description": "Image Generation Models available from OpenAI",
        "display_name": "Open Ai Image"
      }
    },
    {
      "class_name": "AmazonBedrockPrompt",
      "file_path": "griptape_nodes_library/config/prompt/amazon_bedrock_prompt.py",
      "metadata": {
        "category": "prompt_models",
        "description": "Prompt Models available from Amazon Bedrock",
        "display_name": "Amazon Bedrock Prompt"
      }
    },
    {
      "class_name": "AnthropicPrompt",
      "file_path": "griptape_nodes_library/config/prompt/anthropic_prompt.py",
      "metadata": {
        "category": "prompt_models",
        "description": "Prompt Models available from Anthropic",
        "display_name": "Anthropic Prompt"
      }
    },
    {
      "class_name": "CoherePrompt",
      "file_path": "griptape_nodes_library/config/prompt/cohere_prompt.py",
      "metadata": {
        "category": "prompt_models",
        "description": "Prompt Models available from Cohere",
        "display_name": "Cohere Prompt"
      }
    },
    {
      "class_name": "GriptapeCloudPrompt",
      "file_path": "griptape_nodes_library/config/prompt/griptape_cloud_prompt.py",
      "metadata": {
        "category": "prompt_models",
        "description": "Prompt Models available from Griptape Cloud",
        "display_name": "Griptape Cloud Prompt"
      }
    },
    {
      "class_name": "GrokPrompt",
      "file_path": "griptape_nodes_library/config/prompt/grok_prompt.py",
      "metadata": {
        "category": "prompt_models",
        "description": "Prompt Models available from xAI Grok",
        "display_name": "Grok Prompt"
      }
    },
    {
      "class_name": "GroqPrompt",
      "file_path": "griptape_nodes_library/config/prompt/groq_prompt.py",
      "metadata": {
        "category": "prompt_models",
        "description": "Prompt Models available from Groq",
        "display_name": "Groq Prompt"
      }
    },
    {
      "class_name": "OpenAiPrompt",
      "file_path": "griptape_nodes_library/config/prompt/openai_prompt.py",
      "metadata": {
        "category": "prompt_models",
        "description": "Prompt Models available from OpenAi",
        "display_name": "Open Ai Prompt"
      }
    },
    {
      "class_name": "DuckDuckGo",
      "file_path": "griptape_nodes_library/config/web_search/web_search_drivers.py",
      "metadata": {
        "category": "tools/config",
        "description": "WebSearch driver for DuckDuckGo",
        "display_name": "Duck Duck Go"
      }
    },
    {
      "class_name": "GenerateImage",
      "file_path": "griptape_nodes_library/image/create_image.py",
      "metadata": {
        "category": "image",
        "description": "Generates an image using Griptape Cloud, or other provided image generation models",
        "display_name": "Generate Image"
      }
    },
    {
      "class_name": "DescribeImage",
      "file_path": "griptape_nodes_library/image/describe_image.py",
      "metadata": {
        "category": "image",
        "description": "Can be used to describe an image",
        "display_name": "Describe Image"
      }
    },
    {
      "class_name": "DisplayImage",
      "file_path": "griptape_nodes_library/image/display_image.py",
      "metadata": {
        "category": "image",
        "description": "Display an image",
        "display_name": "Display Image"
      }
    },
    {
      "class_name": "CompareImages",
      "file_path": "griptape_nodes_library/image/compare_images.py",
      "metadata": {
        "category": "image",
        "description": "Can be used to compare two images",
        "display_name": "Compare Images"
      }
    },
    {
      "class_name": "LoadImage",
      "file_path": "griptape_nodes_library/image/load_image.py",
      "metadata": {
        "category": "image",
        "description": "Loads an image from disk",
        "display_name": "Load Image"
      }
    },
    {
      "class_name": "PaintMask",
      "file_path": "griptape_nodes_library/image/paint_mask.py",
      "metadata": {
        "category": "image",
        "description": "Paint a mask on an image.",
        "display_name": "Paint Mask"
      }
    },
    {
      "class_name": "Webcam",
      "file_path": "griptape_nodes_library/image/webcam.py",
      "metadata": {
        "category": "image",
        "description": "Capture an image using the device's camera",
        "display_name": "Webcam"
      }
    },
    {
      "class_name": "SaveImage",
      "file_path": "griptape_nodes_library/image/save_image.py",
      "metadata": {
        "category": "image",
        "description": "Save an image to a file",
        "display_name": "Save Image"
      }
    },
    {
      "class_name": "Note",
      "file_path": "griptape_nodes_library/note.py",
      "metadata": {
        "category": "misc",
        "description": "Create a note node to provide helpful context in your workflow",
        "display_name": "Note"
      }
    },
    {
      "class_name": "FloatInput",
      "file_path": "griptape_nodes_library/number/create_float.py",
      "metadata": {
        "category": "number",
        "description": "Create a float value",
        "display_name": "Float Input"
      }
    },
    {
      "class_name": "IntegerInput",
      "file_path": "griptape_nodes_library/number/create_int.py",
      "metadata": {
        "category": "number",
        "description": "Create an integer value",
        "display_name": "Integer Input"
      }
    },
    {
      "class_name": "DisplayFloat",
      "file_path": "griptape_nodes_library/number/display_float.py",
      "metadata": {
        "category": "number",
        "description": "Display a float value",
        "display_name": "Display Float"
      }
    },
    {
      "class_name": "DisplayInteger",
      "file_path": "griptape_nodes_library/number/display_int.py",
      "metadata": {
        "category": "number",
        "description": "Display an integer value",
        "display_name": "Display Integer"
      }
    },
    {
      "class_name": "Ruleset",
      "file_path": "griptape_nodes_library/rules/create_ruleset.py",
      "metadata": {
        "category": "rules",
        "description": "Ruleset node",
        "display_name": "Ruleset"
      }
    },
    {
      "class_name": "RulesetList",
      "file_path": "griptape_nodes_library/rules/ruleset_list.py",
      "metadata": {
        "category": "rules",
        "description": "Combine rulesets to give an agent a more complex set of behaviors",
        "display_name": "Ruleset List"
      }
    },
    {
      "class_name": "DisplayText",
      "file_path": "griptape_nodes_library/text/display_text.py",
      "metadata": {
        "category": "text",
        "description": "DisplayText node",
        "display_name": "Display Text"
      }
    },
    {
      "class_name": "ListTexts",
      "file_path": "griptape_nodes_library/text/list_texts.py",
      "metadata": {
        "category": "text",
        "description": "Create a list of strings from multiple input values, and immediately forwards to output",
        "display_name": "List Texts"
      }
    },
    {
      "class_name": "LoadText",
      "file_path": "griptape_nodes_library/text/load_text.py",
      "metadata": {
        "category": "text",
        "description": "LoadText node",
        "display_name": "Load Text"
      }
    },
    {
      "class_name": "MergeTexts",
      "file_path": "griptape_nodes_library/text/merge_texts.py",
      "metadata": {
        "category": "text",
        "description": "MergeTexts node",
        "display_name": "Merge Texts"
      }
    },
    {
      "class_name": "RandomText",
      "file_path": "griptape_nodes_library/text/random_text.py",
      "metadata": {
        "category": "text",
        "description": "Selects a random character, word, sentence, or paragraph from input text, or generates random content if no input is provided.",
        "display_name": "Random Text"
      }
    },
    {
      "class_name": "SaveText",
      "file_path": "griptape_nodes_library/text/save_text.py",
      "metadata": {
        "category": "text",
        "description": "Save text to a file",
        "display_name": "Save Text"
      }
    },
    {
      "class_name": "SearchReplaceText",
      "file_path": "griptape_nodes_library/text/search_replace_text.py",
      "metadata": {
        "category": "text",
        "description": "Perform search and replace operations on text content with support for regex and case sensitivity",
        "display_name": "Search Replace Text"
      }
    },
    {
      "class_name": "TextInput",
      "file_path": "griptape_nodes_library/text/create_multiline_text.py",
      "metadata": {
        "category": "text",
        "description": "TextInput node",
        "display_name": "Text Input"
      }
    },
    {
      "class_name": "Calculator",
      "file_path": "griptape_nodes_library/tools/calculator_tool.py",
      "metadata": {
        "category": "tools",
        "description": "Give an agent the ability to use a calculator",
        "display_name": "Calculator"
      }
    },
    {
      "class_name": "DateTime",
      "file_path": "griptape_nodes_library/tools/date_time_tool.py",
      "metadata": {
        "category": "tools",
        "description": "Give an agent the ability to know what day and time it is",
        "display_name": "Date Time"
      }
    },
    {
      "class_name": "FileManager",
      "file_path": "griptape_nodes_library/tools/file_manager_tool.py",
      "metadata": {
        "category": "tools",
        "description": "Give an agent the ability to load files from disk",
        "display_name": "File Manager"
      }
    },
    {
      "class_name": "ToolList",
      "file_path": "griptape_nodes_library/tools/tool_list.py",
      "metadata": {
        "category": "tools",
        "description": "Combine tools to give an agent a more complex set of tools",
        "display_name": "Tool List"
      }
    },
    {
      "class_name": "WebSearch",
      "file_path": "griptape_nodes_library/tools/web_search_tool.py",
      "metadata": {
        "category": "tools",
        "description": "Give an agent the ability to search the web",
        "display_name": "Web Search"
      }
    },
    {
      "class_name": "WebScraper",
      "file_path": "griptape_nodes_library/tools/web_scraper_tool.py",
      "metadata": {
        "category": "tools",
        "description": "Give an agent the ability to scrape the web for information",
        "display_name": "Web Scraper"
      }
    },
    {
      "class_name": "StartFlow",
      "file_path": "griptape_nodes_library/workflows/start_flow.py",
      "metadata": {
        "category": "workflows",
        "description": "Define the start of a workflow and pass parameters into the flow",
        "display_name": "Start Flow"
      }
    },
    {
      "class_name": "EndFlow",
      "file_path": "griptape_nodes_library/workflows/end_flow.py",
      "metadata": {
        "category": "workflows",
        "description": "Define the end of a workflow and return parameters from the flow",
        "display_name": "End Flow"
      }
    },
    {
      "class_name": "Reroute",
      "file_path": "griptape_nodes_library/execution/reroute.py",
      "metadata": {
        "category": "execution_flow",
        "description": "Provides a node to allow you to redirect a flow, matching inputs and outputs",
        "display_name": "Reroute"
      }
    },
    {
      "class_name": "IfElse",
      "file_path": "griptape_nodes_library/execution/if_else.py",
      "metadata": {
        "category": "execution_flow",
        "description": "Create a branching workflow based on whether a value is true or false",
        "display_name": "IfElse"
      }
    },
    {
      "class_name": "CompareNumbers",
      "file_path": "griptape_nodes_library/execution/compare_numbers.py",
      "metadata": {
        "category": "execution_flow",
        "description": "Branch your workflow based on a comparison of two numbers",
        "display_name": "Compare Numbers"
      }
    },
    {
      "class_name": "CompareStrings",
      "file_path": "griptape_nodes_library/execution/compare_strings.py",
      "metadata": {
        "category": "execution_flow",
        "description": "Branch your workflow based on a comparison of two strings",
        "display_name": "Compare Strings"
      }
    },
    {
      "class_name": "OutputSelector",
      "file_path": "griptape_nodes_library/execution/select_output.py",
      "metadata": {
        "category": "execution_flow",
        "description": "Let's you choose which direction you want a flow to go, based on the output of previous nodes",
        "display_name": "Output Selector"
      }
    },
    {
      "class_name": "AgentToTool",
      "file_path": "griptape_nodes_library/convert/agent_to_tool.py",
      "metadata": {
        "category": "convert",
        "description": "Convert an agent into a tool that another agent can use",
        "display_name": "Agent To Tool"
      }
    },
    {
      "class_name": "PublishedWorkflow",
      "file_path": "griptape_nodes_library/workflows/published_workflow.py",
      "metadata": {
        "category": "workflows",
        "description": "Use a published workflow within your graph",
        "display_name": "Published Workflow"
      }
    },
    
    {
      "class_name": "LoadGLTF",
      "file_path": "griptape_nodes_library/three_d/load_gltf.py",
      "metadata": {
        "category": "3D",
        "description": "Loads a GLTF file into your workflow",
        "display_name": "Load GLTF"
      }
    }
  ],
  "workflows": [
    "workflows/templates/prompt_an_image.py",
    "workflows/templates/coordinating_agents.py",
    "workflows/templates/compare_prompts.py",
    "workflows/templates/photography_team.py"
  ],
  "is_default_library": true
}