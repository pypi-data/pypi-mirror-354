# Simple workflow for deploying static content to GitHub Pages
name: Deploy Documentation to Pages

on:
    # Runs on pushes targeting the default branch
    push:
        branches: ["main"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    # Single deploy job since we're just deploying
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  # Install all documentation dependencies
                  pip install sphinx sphinx-rtd-theme sphinx-autodoc-typehints nbsphinx
                  # If you have a requirements file, also install it
                  if [ -f requirements.txt ]; then
                    pip install -r requirements.txt
                  fi
                  # Display installed packages for debugging
                  pip freeze

            - name: Build documentation
              run: |
                  mkdir -p docs/source

                  # Check and modify existing conf.py if needed
                  if [ -f docs/source/conf.py ]; then
                    # Backup the original file
                    cp docs/source/conf.py docs/source/conf.py.bak
                    
                    # Check for problematic extensions and create a simplified version if found
                    if grep -q "sphinx_autodoc_typehints" docs/source/conf.py; then
                      echo "Fixing conf.py by removing problematic extensions"
                      # Create a simplified conf.py
                      echo 'project = "VERUS"' > docs/source/conf.py
                      echo 'copyright = "2025, LES2 Team"' >> docs/source/conf.py
                      echo 'author = "oão Carlos N. Bittencourt"' >> docs/source/conf.py
                      echo 'extensions = ["sphinx.ext.autodoc", "sphinx.ext.viewcode"]' >> docs/source/conf.py
                      echo 'html_theme = "sphinx_rtd_theme"' >> docs/source/conf.py
                    fi
                  else
                    # Create minimal conf.py if it doesn't exist
                    echo 'project = "VERUS"' > docs/source/conf.py
                    echo 'copyright = "2025, LES2 Team"' >> docs/source/conf.py
                    echo 'author = "João Carlos N. Bittencourt"' >> docs/source/conf.py
                    echo 'extensions = ["sphinx.ext.autodoc", "sphinx.ext.viewcode"]' >> docs/source/conf.py
                    echo 'html_theme = "sphinx_rtd_theme"' >> docs/source/conf.py
                  fi

                  # Create minimal index.rst if it doesn't exist
                  if [ ! -f docs/source/index.rst ]; then
                    echo 'VERUS Documentation' > docs/source/index.rst
                    echo '===================' >> docs/source/index.rst
                    echo '' >> docs/source/index.rst
                    echo 'Welcome to VERUS documentation.' >> docs/source/index.rst
                    echo '' >> docs/source/index.rst
                    echo 'Contents' >> docs/source/index.rst
                    echo '========' >> docs/source/index.rst
                    echo '' >> docs/source/index.rst
                    echo '.. toctree::' >> docs/source/index.rst
                    echo '   :maxdepth: 2' >> docs/source/index.rst
                    echo '' >> docs/source/index.rst
                  fi

                  # Display the content of conf.py for debugging
                  echo "Content of conf.py:"
                  cat docs/source/conf.py

                  # Build the documentation
                  cd docs
                  mkdir -p _build/html
                  sphinx-build -b html source _build/html

                  # Create .nojekyll file to prevent GitHub from using Jekyll
                  touch _build/html/.nojekyll

            - name: Setup Pages
              uses: actions/configure-pages@v4

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  # Upload the sphinx build directory
                  path: "docs/_build/html"

            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
