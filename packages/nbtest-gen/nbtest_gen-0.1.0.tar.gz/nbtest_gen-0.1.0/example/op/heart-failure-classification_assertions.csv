Assertion_id,Assertion,Assertion_type
0,"nbtest.assert_shape(df, (299, 13))",DATASET__read_csv
1,"nbtest.assert_column_names(df, ['DEATH_EVENT', 'age', 'anaemia', 'creatinine_phosphokinase', 'diabetes', 'ejection_fraction', 'high_blood_pressure', 'platelets', 'serum_creatinine', 'serum_sodium', 'sex', 'smoking', 'time'])",DATASET__read_csv
2,"nbtest.assert_column_types(df, ['int64', 'float64', 'int64', 'int64', 'int64', 'int64', 'int64', 'float64', 'float64', 'int64', 'int64', 'int64', 'int64'])",DATASET__read_csv
3,"nbtest.assert_df_mean(df, 20331.504464625676, atol=0.0)",DATASET__read_csv
4,"nbtest.assert_df_var(df, 5655280085.135918, atol=0.0)",DATASET__read_csv
5,"nbtest.assert_shape(nbtest_tmpvar_0, (10, 13))",DATASET__head
6,"nbtest.assert_column_names(nbtest_tmpvar_0, ['DEATH_EVENT', 'age', 'anaemia', 'creatinine_phosphokinase', 'diabetes', 'ejection_fraction', 'high_blood_pressure', 'platelets', 'serum_creatinine', 'serum_sodium', 'sex', 'smoking', 'time'])",DATASET__head
7,"nbtest.assert_column_types(nbtest_tmpvar_0, ['int64', 'float64', 'int64', 'int64', 'int64', 'int64', 'int64', 'float64', 'float64', 'int64', 'int64', 'int64', 'int64'])",DATASET__head
8,"nbtest.assert_df_mean(nbtest_tmpvar_0, 20584.102, atol=0.0)",DATASET__head
9,"nbtest.assert_df_var(nbtest_tmpvar_0, 5735375787.815456, atol=0.0)",DATASET__head
10,"nbtest.assert_allclose(nbtest_tmpvar_2.sum(), 0.0, atol=0.0)",DATASET__any
11,"nbtest.assert_shape(df, (299, 13))",DATASET__ATTRIBUTE_ACCESS
12,"nbtest.assert_shape(nbtest_tmpvar_3, (8, 13))",DATASET__describe
13,"nbtest.assert_column_names(nbtest_tmpvar_3, ['DEATH_EVENT', 'age', 'anaemia', 'creatinine_phosphokinase', 'diabetes', 'ejection_fraction', 'high_blood_pressure', 'platelets', 'serum_creatinine', 'serum_sodium', 'sex', 'smoking', 'time'])",DATASET__describe
14,"nbtest.assert_column_types(nbtest_tmpvar_3, ['float64', 'float64', 'float64', 'float64', 'float64', 'float64', 'float64', 'float64', 'float64', 'float64', 'float64', 'float64', 'float64'])",DATASET__describe
15,"nbtest.assert_df_mean(nbtest_tmpvar_3, 19528.024571370242, atol=0.0)",DATASET__describe
16,"nbtest.assert_df_var(nbtest_tmpvar_3, 9311258132.272377, atol=0.0)",DATASET__describe
17,"nbtest.assert_sklearn_model(nbtest_tmpvar_4, /home/verve/ml_nb_testing/comp_analysis/nbtest-gen/example/op/sklearn_model_17.pkl)",MODEL_ARCH__fit
18,"nbtest.assert_allclose(accuracy_score(y_test, y_pred), 0.8400000000000001, atol=0.11155467020454334)",MODEL_PERF__accuracy_score
19,"nbtest.assert_allclose(roc_auc, 0.9108934567101145, atol=0.1456452575839852)",MODEL_PERF__auc
20,"nbtest.assert_allclose(sklearn.metrics.roc_auc_score(y_test, y_pred), 0.8110204833719143, atol=0.14027071488727222)",MODEL_PERF__roc_auc_score
21,"nbtest.assert_sklearn_model(nbtest_tmpvar_5, /home/verve/ml_nb_testing/comp_analysis/nbtest-gen/example/op/sklearn_model_21.pkl)",MODEL_ARCH__fit
22,"nbtest.assert_allclose(accuracy_score(y_test, y_pred), 0.8, atol=0.1563471919941143)",MODEL_PERF__accuracy_score
23,"nbtest.assert_allclose(roc_auc, 0.852153813699536, atol=0.20428763685163875)",MODEL_PERF__auc
24,"nbtest.assert_allclose(sklearn.metrics.roc_auc_score(y_test, y_pred), 0.7645997097367632, atol=0.1841917680044929)",MODEL_PERF__roc_auc_score
25,"nbtest.assert_sklearn_model(nbtest_tmpvar_6, /home/verve/ml_nb_testing/comp_analysis/nbtest-gen/example/op/sklearn_model_25.pkl)",MODEL_ARCH__fit
26,"nbtest.assert_allclose(accuracy_score(y_test, y_pred), 0.7933333333333333, atol=0.15347819244295127)",MODEL_PERF__accuracy_score
27,"nbtest.assert_allclose(roc_auc, 0.8907349966966368, atol=0.12229281055777137)",MODEL_PERF__auc
28,"nbtest.assert_allclose(sklearn.metrics.roc_auc_score(y_test, y_pred), 0.7559464317638447, atol=0.23756857957372185)",MODEL_PERF__roc_auc_score
29,"nbtest.assert_sklearn_model(nbtest_tmpvar_7, /home/verve/ml_nb_testing/comp_analysis/nbtest-gen/example/op/sklearn_model_29.pkl)",MODEL_ARCH__fit
30,"nbtest.assert_allclose(accuracy_score(y_test, y_pred), 0.8266666666666665, atol=0.12110601416389959)",MODEL_PERF__accuracy_score
31,"nbtest.assert_allclose(roc_auc, 0.9026079458477707, atol=0.16769145439539307)",MODEL_PERF__auc
32,"nbtest.assert_allclose(sklearn.metrics.roc_auc_score(y_test, y_pred), 0.7738830023961791, atol=0.25162112938452746)",MODEL_PERF__roc_auc_score
33,"nbtest.assert_sklearn_model(nbtest_tmpvar_8, /home/verve/ml_nb_testing/comp_analysis/nbtest-gen/example/op/sklearn_model_33.pkl)",MODEL_ARCH__fit
34,"nbtest.assert_allclose(accuracy_score(y_test, y_pred), 0.7966666666666666, atol=0.2599145158615723)",MODEL_PERF__accuracy_score
35,"nbtest.assert_allclose(roc_auc, 0.7767401710692505, atol=0.31520372185936313)",MODEL_PERF__auc
36,"nbtest.assert_allclose(sklearn.metrics.roc_auc_score(y_test, y_pred), 0.7767401710692505, atol=0.31520372185936313)",MODEL_PERF__roc_auc_score
37,"nbtest.assert_sklearn_model(nbtest_tmpvar_9, /home/verve/ml_nb_testing/comp_analysis/nbtest-gen/example/op/sklearn_model_37.pkl)",MODEL_ARCH__fit
38,"nbtest.assert_allclose(accuracy_score(y_test, y_pred), 0.8233333333333335, atol=0.16055459438389716)",MODEL_PERF__accuracy_score
39,"nbtest.assert_allclose(roc_auc, 0.90482373467913, atol=0.11338564795799509)",MODEL_PERF__auc
40,"nbtest.assert_allclose(sklearn.metrics.roc_auc_score(y_test, y_pred), 0.7813223693084752, atol=0.21843646804798797)",MODEL_PERF__roc_auc_score
