Metadata-Version: 2.4
Name: renpy-assets
Version: 0.1.4
Summary: CLI tool to scan and manage assets for Ren'Py visual novel projects.
Author: Joseph Evans
License-Expression: MIT
License-File: LICENSE
Requires-Python: >=3.8
Requires-Dist: typer[all]>=0.12.0
Description-Content-Type: text/markdown

# renpy-assets

A command-line interface for automating asset management in Ren'Py visual novel projects.

Easily scan your project for images, audio, and font assets, and generate boilerplate declarations to speed up scripting in `.rpy` files.

---

## Features

### Scan Assets

Identify all assets in your Ren'Py project based on type:

- **images** – `.png`, `.jpg`, `.jpeg`, `.webp`
- **audio** – `.ogg`, `.mp3`, `.wav`
- **fonts** – `.ttf`, `.otf`

You can also scan **all** asset types at once.

```bash
renpy-assets scan images --path assets/images
renpy-assets scan audio
renpy-assets scan all
```

This prints a nicely formatted list of found assets, organized by category.

---

### Generate Declarations

Automatically generate Ren'Py declarations for your assets:

```bash
renpy-assets generate images --path game/images --output image_decls.rpy
renpy-assets generate fonts --path assets/fonts --output fonts.rpy
renpy-assets generate all --output assets.rpy
```

This creates `.rpy`-ready declarations such as:

```renpy
# --- Image Assets ---
image bg_room = "images/bg room.png"
image character_happy = "images/character happy.png"

# --- Audio Assets ---
define audio.button_click = "audio/ui/click.ogg"

# --- Font Assets ---
define inter_font = "fonts/Inter-Regular.ttf"
```

You can optionally use the `--spaces` flag to replace underscores and dashes in image names with spaces:

```bash
renpy-assets generate images --path game/images --output image_decls.rpy --spaces
```

Which outputs:

```renpy
image bg room = "images/bg room.png"
image character happy = "images/character happy.png"
```

---

## Installation

```bash
pip install renpy-assets
```

For local development:

```bash
git clone https://github.com/jeje1197/renpy-assets
cd renpy-assets
pip install -e .
```

---

## Project Layout

```
renpy_assets/
  cli.py
  commands/
    scan.py
    generate.py
  utils/
    file_utilities.py
    constants.py

tests/
```

---

## Testing

Run all tests using:

```bash
pytest
```

Make sure you're in the root directory and `renpy_assets` is on the Python path.

---

## Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md) for how to get involved.