[build-system]
requires = ["hatchling", "hatch-vcs", "nipreps-versions"]
build-backend = "hatchling.build"

[project]
name = "ncdlmuse"
description = "NCDLMUSE - A BIDS-App wrapper for NiChart DLMUSE for brain segmentation and ICV extraction"
readme = "long_description.rst"
authors = [{name = "The NCDLMUSE Developers"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.10",
]
license = {file = "LICENSE.md"}
requires-python = ">=3.10"
dependencies = [
    'importlib_resources; python_version < "3.11"',
    "acres",
    "indexed_gzip <= 1.9.4",
    "looseversion",
    "networkx == 2.8.8",  # nipype needs networkx, but 3+ isn"t compatible with nipype 1.8.5
    "nibabel <= 5.3.2",
    "nilearn ~= 0.11.0",
    "nipype >= 1.8.5",
    "niworkflows ~= 1.13.0",
    "fmriprep >= 25.0.0",
    "nireports >= 25.0.1",  # Required for report generation
    "numpy >= 1.26",
    "packaging",
    "pandas",
    "psutil <= 7.0.0",
    "pybids <= 0.19.0",
    "requests",
    "templateflow <= 24.2.2",
    "toml",
    "torch==2.3.1",
    "scipy",
    "huggingface_hub",
    "fmriprep",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/CBICA/BIDS_NiChart_DLMUSE"
Documentation = "https://cbica.github.io/NiChart_DLMUSE"
NiPreps = "https://www.nipreps.org/"

[project.optional-dependencies]
doc = [
    "doctest-ignore-unicode",
    "lxml_html_clean",
    "myst_parser",
    "nbsphinx",
    "packaging",
    "pydot >= 1.2.3",
    "pydotplus",
    "sphinx >= 6.2.1",
    "sphinx-argparse",
    "sphinx-markdown-tables",
    "sphinx_rtd_theme >= 1.2.2",
    "sphinxcontrib-apidoc",
    "sphinxcontrib-bibtex",
]
dev = [
    "ruff ~= 0.11.0",
    "pre-commit",
]
test = [
    "codecov",
    "coverage",
    "pytest",
    "pytest-cov",
]
maint = [
    "fuzzywuzzy",
    "python-Levenshtein",
]

# Aliases
all = ["ncdlmuse[dev,doc,maint,test]"]

[project.scripts]
ncdlmuse = "ncdlmuse.cli.run:main"

#
# Hatch configurations
#

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]

[tool.hatch.build.targets.wheel]
packages = ["ncdlmuse"]
exclude = [
    "ncdlmuse/tests/data",
]

##  The following two sections configure setuptools_scm in the hatch way

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "ncdlmuse/_version.py"

#
# Developer tool configurations
#

# Disable black
[tool.black]
exclude = ".*"

[tool.ruff]
line-length = 99

[tool.ruff.lint]
extend-select = [
    "F",
    "E",
    "W",
    "I",
    "UP",
    "YTT",
    "S",
    "BLE",
    "B",
    "A",
    "C4",
    "DTZ",
    "T10",
    "EXE",
    "FA",
    "ISC",
    "ICN",
    "PT",
    "Q",
]
ignore = [
    "UP031",
    "S311",
    "ISC001",
    "S603",
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.extend-per-file-ignores]
"*/test_*.py" = ["S101"]
"ncdlmuse/utils/debug.py" = ["A002", "T100"]
"docs/conf.py" = ["A001"]
"docs/sphinxext/github_link.py" = ["BLE001"]
"ncdlmuse/workflows/base.py" = ["F401", "F811"]

[tool.ruff.format]
quote-style = "single"

[tool.pytest.ini_options]
addopts = '-m "not examples and not test_001 and not test_002 and not test_003_minimal and not test_003_resampling and not test_003_full"'
markers = [
    "examples: mark integration test",
    "test_001: mark integration test",
    "test_002: mark integration test",
    "test_003_minimal: mark integration test",
    "test_003_resampling: mark integration test",
    "test_003_full: mark integration test",
]

[tool.coverage.run]
branch = false
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/conftest.py",
    "ncdlmuse/_version.py"
]

[tool.coverage.report]
exclude_lines = [
    'raise NotImplementedError',
    'warnings\.warn',
]