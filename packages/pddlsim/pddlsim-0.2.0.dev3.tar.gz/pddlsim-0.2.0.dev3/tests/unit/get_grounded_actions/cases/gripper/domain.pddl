(define (domain gripper)
        (:requirements :equality :typing :negative-preconditions)
        (:types room ball gripper)
        (:predicates (at-robby ?r - room)
                     (at ?o - ball ?r - room)
                     (free ?g - gripper)
                     (carry ?o - ball ?g - gripper))
        (:action move
        :parameters (?from ?to - room)
        :precondition (and (at-robby ?from)
                           (not (= ?from ?to)))
        :effect (and (at-robby ?to)
                     (not (at-robby ?from))))
        (:action pick
        :parameters (?obj - ball ?room - room ?gripper - gripper)
        :precondition (and (at ?obj ?room)
                           (at-robby ?room)
                           (free ?gripper))
        :effect (and (carry ?obj ?gripper)
                     (not (at ?obj ?room))
                     (not (free ?gripper))))
        (:action drop
        :parameters (?obj - ball ?room - room ?gripper - gripper)
        :precondition (and (carry ?obj ?gripper)
                           (at-robby ?room))
        :effect (and (at ?obj ?room)
                     (free ?gripper)
                     (not (carry ?obj ?gripper)))))