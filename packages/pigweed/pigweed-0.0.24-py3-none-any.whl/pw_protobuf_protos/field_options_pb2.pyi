"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2022 The Pigweed Authors

Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.descriptor_pb2
import google.protobuf.internal.extension_dict
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class FieldOptions(google.protobuf.message.Message):
    """Options supported for inline usage in .proto files.

    These options are for use when there are true limitations intended to be part
    of the protocol specification and are not specific to any particular protobuf
    code generator.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAX_COUNT_FIELD_NUMBER: builtins.int
    MAX_SIZE_FIELD_NUMBER: builtins.int
    max_count: builtins.int
    """Maximum number of entries for repeated fields."""
    max_size: builtins.int
    """Maximum size for bytes and string fields (excludes null terminator)."""
    def __init__(
        self,
        *,
        max_count: builtins.int | None = ...,
        max_size: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_max_count", b"_max_count", "_max_size", b"_max_size", "max_count", b"max_count", "max_size", b"max_size"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_max_count", b"_max_count", "_max_size", b"_max_size", "max_count", b"max_count", "max_size", b"max_size"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_count", b"_max_count"]) -> typing_extensions.Literal["max_count"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_size", b"_max_size"]) -> typing_extensions.Literal["max_size"] | None: ...

global___FieldOptions = FieldOptions

PWPB_FIELD_NUMBER: builtins.int
pwpb: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[google.protobuf.descriptor_pb2.FieldOptions, global___FieldOptions]
"""Extension 1155 is reserved upstream for PW protobuf compiler.
https://github.com/protocolbuffers/protobuf/blob/main/docs/options.md
"""
