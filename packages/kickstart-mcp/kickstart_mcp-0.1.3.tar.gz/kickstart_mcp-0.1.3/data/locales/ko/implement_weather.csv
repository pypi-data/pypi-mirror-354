key,value
implement_weather.warning,"이전 MakeServer 튜토리얼을 먼저 완료하셨나요?"
implement_weather.step1.title,"1단계: 헬퍼 함수 추가"
implement_weather.step1.intro1,"이전 서버는 작동하지만 그다지 유용하지 않습니다."
implement_weather.step1.intro2,"더 실용적으로 만들어 보겠습니다."
implement_weather.step1.intro3,"먼저 National Weather Service API와 상호작용할 헬퍼 함수를 추가하겠습니다."
implement_weather.step1.intro4,"이 함수들은 HTTP 요청을 만들고 응답을 포맷팅하는 데 도움이 될 것입니다."
implement_weather.step1.todo.title,"다음 작업이 필요합니다:"
implement_weather.step1.todo.1,"1. 필요한 import 추가"
implement_weather.step1.todo.2,"2. API 상수 정의"
implement_weather.step1.todo.3,"3. API 요청을 위한 헬퍼 함수 생성"
implement_weather.step1.todo.4,"4. 응답 포맷터 생성"
implement_weather.step1.add_code,"파일 시작 부분에 다음 코드를 추가하세요:"
implement_weather.step1.dependency,"project.toml 파일에 httpx 의존성을 추가하는 것을 잊지 마세요!"
implement_weather.step2.title,"2단계: 날씨 경보 도구 구현"
implement_weather.step2.intro1,"이제 list_tools를 수정하고 get_alerts 기능을 구현하겠습니다."
implement_weather.step2.intro2,"이를 통해 사용자는 미국의 모든 주에 대한 날씨 경보를 받을 수 있습니다."
implement_weather.step2.intro3,"이전 튜토리얼의 get_weather 함수는 그다지 유용하지 않으므로 제거하겠습니다."
implement_weather.step2.intro4,"또한 call_tool 함수를 수정하여 어떤 도구를 호출할지 결정하겠습니다."
implement_weather.step2.replace_list,"기존 list_tools를 다음으로 교체하세요:"
implement_weather.step2.replace_call,"또한 기존 call_tool을 교체하고 get_alerts를 추가하세요:"
implement_weather.step3.title,"3단계: 예보 도구 추가"
implement_weather.step3.intro1,"마지막으로 상세한 날씨 예보를 얻기 위한 get_forecast 도구를 추가하겠습니다."
implement_weather.step3.intro2,"이 도구는 위도와 경도를 사용하여 위치별 예보를 제공합니다."
implement_weather.step3.add_list,"list_tools 함수에 다음을 추가하세요 (tools.extend 내부):"
implement_weather.step3.add_impl,"그리고 이 새로운 도구 구현을 추가하세요:"
implement_weather.step_complete,"{}단계를 완료했습니다!"
implement_weather.press_continue,"➤ 계속하려면 아무 키나 누르세요"
