key,value
implement_sse.warning,"이전 ImplementWeather 튜토리얼을 먼저 완료하셨나요?"
implement_sse.step1.title,"1단계: SSE 전송 계층 소개"
implement_sse.step1.intro1,"축하합니다! 알림과 예보가 포함된 날씨 MCP 서버를 성공적으로 구현했습니다."
implement_sse.step1.intro2,"이제 SSE 전송 계층 지원을 추가하여 서버를 개선해 보겠습니다."
implement_sse.step1.transport_types.title,"MCP에서 전송 계층은 일반적으로 두 가지 유형이 있습니다:"
implement_sse.step1.transport_types.1,"1. stdio (표준 입출력) - 로컬 통합 및 명령줄 도구에 사용"
implement_sse.step1.transport_types.2,"2. SSE (서버 전송 이벤트) - HTTP POST 요청으로 서버-클라이언트 스트리밍을 가능하게 함"
implement_sse.step1.add_function,"두 가지 전송 유형을 모두 처리할 run_server 함수를 추가하는 것으로 시작하겠습니다."
implement_sse.step1.add_code,"파일에 다음 함수를 추가하세요:"
implement_sse.step2.title,"2단계: 의존성 추가"
implement_sse.step2.intro1,"이제 SSE 전송에 필요한 의존성을 추가해야 합니다."
implement_sse.step2.intro2,"프로젝트의 의존성에 다음을 추가하세요:"
implement_sse.step2.intro3,"pyproject.toml 또는 requirements.txt 파일에 추가할 수 있습니다."
implement_sse.step3.title,"3단계: 메인 진입점 업데이트"
implement_sse.step3.intro1,"마지막으로, 새로운 run_server 함수를 사용하도록 메인 진입점을 업데이트하겠습니다."
implement_sse.step3.intro2,"기존 main 블록을 다음으로 교체하세요:"
implement_sse.step3.intro3,"이제 두 가지 전송 방식으로 서버를 실행할 수 있습니다:"
implement_sse.step3.intro4,"stdio 사용: hatch run mcp_weather"
implement_sse.step3.intro5,"SSE 사용: hatch run mcp_weather --transport sse --port 9009"
implement_sse.step_complete,"{}단계를 완료했습니다!"
implement_sse.press_continue,"➤ 계속하려면 아무 키나 누르세요"
