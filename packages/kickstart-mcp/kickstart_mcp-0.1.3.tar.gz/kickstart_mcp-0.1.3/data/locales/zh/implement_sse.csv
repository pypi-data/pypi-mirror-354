key,value
implement_sse.warning,"您是否已完成之前的ImplementWeather教程？"
implement_sse.step1.title,"步骤1：SSE传输介绍"
implement_sse.step1.intro1,"恭喜！您已成功实现了一个带有警报和预报功能的天气MCP服务器。"
implement_sse.step1.intro2,"现在，让我们通过添加SSE传输支持来增强您的服务器。"
implement_sse.step1.transport_types.title,"在MCP中，传输层通常有两种类型："
implement_sse.step1.transport_types.1,"1. stdio（标准输入/输出）- 用于本地集成和命令行工具"
implement_sse.step1.transport_types.2,"2. SSE（服务器发送事件）- 通过HTTP POST请求实现服务器到客户端的流式传输"
implement_sse.step1.add_function,"让我们首先添加run_server函数，它将处理两种传输类型。"
implement_sse.step1.add_code,"将此函数添加到您的文件中："
implement_sse.step2.title,"步骤2：添加依赖项"
implement_sse.step2.intro1,"现在我们需要为SSE传输添加所需的依赖项。"
implement_sse.step2.intro2,"将这些添加到项目的依赖项中："
implement_sse.step2.intro3,"您可以将这些添加到pyproject.toml或requirements.txt文件中。"
implement_sse.step3.title,"步骤3：更新主入口点"
implement_sse.step3.intro1,"最后，让我们更新主入口点以使用新的run_server函数。"
implement_sse.step3.intro2,"将现有的main块替换为："
implement_sse.step3.intro3,"现在您可以使用任一传输方式运行服务器："
implement_sse.step3.intro4,"对于stdio：hatch run mcp_weather"
implement_sse.step3.intro5,"对于SSE：hatch run mcp_weather --transport sse --port 9009"
implement_sse.step_complete,"您已完成步骤{}！"
implement_sse.press_continue,"➤ 按任意键继续"
