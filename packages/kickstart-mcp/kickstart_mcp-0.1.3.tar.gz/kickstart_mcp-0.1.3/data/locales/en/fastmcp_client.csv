key,value
fastmcp_client.step1.title,"Step 1 - Environment Setup"
fastmcp_client.step1.intro1,"In this step, you'll set up your Python environment and install the required dependencies for building an MCP client. We'll use a modern, isolated environment and follow best practices."
fastmcp_client.step1.intro2,"1. Create a new project directory and initialize it with a pyproject.toml file.\n2. Confiure virtual enviorment/project configuration with your favorite tools.(in this tutorial, used hatch)\n3. Add the required dependencies: mcp, anthropic, python-dotenv."

fastmcp_client.step1.intro3,"Make sure your pyproject.toml includes these dependencies. This ensures your client can communicate with MCP servers and use the Anthropic API."
fastmcp_client.step2.title,"Step 2 - Server Connection"
fastmcp_client.step2.intro1,"In this step, we'll implement the server connection functionality.\nThis is the foundation of our MCP client that allows it to communicate with any MCP server."
fastmcp_client.step2.intro2,"1. Create a file named client.py in your mcp-client directory(src/mcp_client/client.py).\n2. Add the following code to set up the basic structure and server connection."
fastmcp_client.step2.intro3,"This code sets up the client and implements the server connection functionality. It handles both Python and JavaScript servers, establishes the connection, and lists available tools."
fastmcp_client.step3.title,"Step 3 - Query Processing"
fastmcp_client.step3.intro1,"Now, let's implement the query processing functionality. This part handles user queries, interacts with the LLM (Claude), and manages tool calls."
fastmcp_client.step3.intro2,"This code implements the query processing functionality. It handles user queries, manages conversations with Claude, and processes tool calls when needed."
fastmcp_client.step4.title,"Step 4 - Interactive Chat Loop"
fastmcp_client.step4.intro1,"Let's add the interactive chat loop. This will allow you to run your client and interact with any MCP server."
fastmcp_client.step5.title,"Step 5 - Main Entry Point"
fastmcp_client.step5.intro1,"Finally, make the main entry point and initialize the client."
fastmcp_client.step5.intro2,"Now you can run your client with: uv run mcp-client <path_to_server_script>. Try connecting to your weather server or any other MCP server!"
fastmcp_client.step5.intro3,"If you followed the server tutorial, pass uv run mcp-client ../mcp-weather/src/mcp_weather/__init__.py"
fastmcp_client.step5.intro4,"Congratulations! You've built a fully functional MCP client. You can now explore, extend, and integrate with any MCP-compatible server and tools."
