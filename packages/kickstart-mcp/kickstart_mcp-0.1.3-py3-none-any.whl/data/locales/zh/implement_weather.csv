key,value
implement_weather.warning,"您是否已完成之前的MakeServer教程？"
implement_weather.step1.title,"步骤1：添加辅助函数"
implement_weather.step1.intro1,"之前的服务器可以工作，但不太实用。"
implement_weather.step1.intro2,"让我们使其更实用。"
implement_weather.step1.intro3,"首先，我们将添加与国家气象服务API交互的辅助函数。"
implement_weather.step1.intro4,"这些函数将帮助我们发出HTTP请求并格式化响应。"
implement_weather.step1.todo.title,"我们需要："
implement_weather.step1.todo.1,"1. 添加必要的导入"
implement_weather.step1.todo.2,"2. 定义API常量"
implement_weather.step1.todo.3,"3. 创建API请求的辅助函数"
implement_weather.step1.todo.4,"4. 创建响应格式化器"
implement_weather.step1.add_code,"将以下代码添加到文件开头："
implement_weather.step1.dependency,"不要忘记将httpx添加到项目依赖项中！"
implement_weather.step2.title,"步骤2：实现天气警报工具"
implement_weather.step2.intro1,"现在我们将修改list_tools并实现get_alerts功能。"
implement_weather.step2.intro2,"这将允许用户获取任何美国州的天气警报。"
implement_weather.step2.intro3,"之前教程中的get_weather函数不太有用，所以我们将删除它。"
implement_weather.step2.intro4,"我们还将修改call_tool函数以确定应该调用哪个工具。"
implement_weather.step2.replace_list,"将现有的list_tools替换为："
implement_weather.step2.replace_call,"同时，替换现有的call_tool，并添加get_alerts："
implement_weather.step3.title,"步骤3：添加预报工具"
implement_weather.step3.intro1,"最后，我们将添加get_forecast工具以获取详细的天气预报。"
implement_weather.step3.intro2,"此工具将使用纬度和经度来获取特定位置的预报。"
implement_weather.step3.add_list,"将此添加到list_tools函数中（在tools.extend内）："
implement_weather.step3.add_impl,"并添加这个新工具的实现："
implement_weather.step_complete,"您已完成步骤{}！"
implement_weather.press_continue,"➤ 按任意键继续"
