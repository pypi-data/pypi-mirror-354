import os
import logging
from logging.handlers import RotatingFileHandler
from datetime import datetime

class BriefFormatter(logging.Formatter):
    def formatException(self, exc_info):
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
        result = super().formatException(exc_info)
        if result:
            return result.splitlines()[0]
        return ""

class LoggerManager:
    def __init__(self, log_dir=None, max_log_files=3,
                 logger_level=logging.DEBUG, file_log_level=logging.INFO, console_log_level=logging.INFO):
        """
        –ú–µ–Ω–µ–¥–∂–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è prompt-storage.
        
        :param log_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–æ–≤. –ï—Å–ª–∏ None –∏–ª–∏ "", —Ñ–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è.
        :param max_log_files: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤.
        :param logger_level: –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ª–æ–≥–≥–µ—Ä–∞.
        :param file_log_level: –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
        :param console_log_level: –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
        """
        self.log_dir = log_dir
        self.max_log_files = max_log_files
        self.logger_level = logger_level
        self.file_log_level = file_log_level
        self.console_log_level = console_log_level

        self.logger = logging.getLogger("prompt_storage_logger")
        self.logger.setLevel(self.logger_level)
        self.logger.propagate = False

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ–≥–¥–∞
        self._setup_console_handler()

        # –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —É–∫–∞–∑–∞–Ω–∞, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        if self.log_dir:
            os.makedirs(self.log_dir, exist_ok=True)
            self._cleanup_old_logs()
            self._setup_file_handler()

    def _cleanup_old_logs(self):
        """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –ª–æ–≥-—Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç max_log_files."""
        log_files = sorted(
            [os.path.join(self.log_dir, f) for f in os.listdir(self.log_dir)
             if f.startswith("app_") and f.endswith(".log")],
            key=os.path.getctime
        )
        while len(log_files) > self.max_log_files:
            oldest_file = log_files.pop(0)
            os.remove(oldest_file)
            #print(f"üóë –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –ª–æ–≥-—Ñ–∞–π–ª: {oldest_file}")

    def _setup_file_handler(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ñ–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ä–æ—Ç–∞—Ü–∏–µ–π."""
        log_format = "%(asctime)s - %(name)s - %(levelname)s - %(module)s.%(funcName)s - %(message)s"
        log_filename = os.path.join(self.log_dir, f"app_{datetime.now().strftime('%Y-%m-%d')}.log")
        file_handler = RotatingFileHandler(log_filename, maxBytes=5 * 1024 * 1024, backupCount=self.max_log_files)
        file_handler.setLevel(self.file_log_level)
        file_handler.setFormatter(logging.Formatter(log_format))
        self.logger.addHandler(file_handler)

    def _setup_console_handler(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∫—Ä–∞—Ç–∫–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º."""
        console_handler = logging.StreamHandler()
        console_handler.setLevel(self.console_log_level)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º BriefFormatter –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–∞—Ö
        brief_formatter = BriefFormatter("%(asctime)s - %(levelname)s - %(module)s.%(funcName)s - %(message)s")
        console_handler.setFormatter(brief_formatter)
        self.logger.addHandler(console_handler)

    def get_logger(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ª–æ–≥–≥–µ—Ä."""
        return self.logger
