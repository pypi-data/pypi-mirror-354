% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LOVE.R
\name{LOVE}
\alias{LOVE}
\title{LOVE: Latent-model based OVErlapping clustering}
\usage{
LOVE(
  X,
  lbd = 0.5,
  mu = 0.5,
  est_non_pure_row = "HT",
  verbose = FALSE,
  pure_homo = FALSE,
  diagonal = FALSE,
  delta = NULL,
  merge = FALSE,
  rep_CV = 50,
  ndelta = 50,
  q = 2,
  exact = FALSE,
  max_pure = NULL,
  nfolds = 10
)
}
\arguments{
\item{X}{A \eqn{n} by \eqn{p} data matrix.}

\item{lbd}{The grid of leading constant of \eqn{\lambda}.}

\item{mu}{The leading constant used for thresholding the loading matrix.}

\item{est_non_pure_row}{String. Procedure used for estimating the non-pure
rows. One of \{"HT", "ST", "Dantzig"\}.}

\item{verbose}{Logical. Set FALSE to suppress printing the progress.}

\item{pure_homo}{Logical. TRUE if the pure loadings have the same magnitude.}

\item{diagonal}{Logical. If TRUE, the covariance matrix of \eqn{Z} is
diagonal; else FALSE.}

\item{delta}{The grid of leading constant of \eqn{\delta}.}

\item{merge}{Logical. If TRUE, take the union of all candidate pure variables;
otherwise, take the intersection.}

\item{rep_CV}{The number of repetitions used for cross validation.}

\item{ndelta}{Integer. The length of the grid of \code{delta}.}

\item{q}{Either \code{2} or \code{Inf} to specify the type of score.}

\item{exact}{Logical. Only active for compute the \code{Inf} score.
If TRUE, compute the \code{Inf} score exactly via solving a linear program.
Otherwise, use approximation to compute \code{Inf} score.}

\item{max_pure}{A numeric value between (0, 1] specifying the maximal
proportion of pure variables. Default is NULL. When not specified,
\code{max_pure} = 1 if \eqn{n > p}, \code{max_pure} = 0.8 otherwise.}

\item{nfolds}{The number of folds. Default is 10.}
}
\value{
A list of objects including: \itemize{
  \item \code{K} The estimated number of clusters.
  \item \code{pureVec} The estimated set of pure variables.
  \item \code{pureInd} The estimated partition of pure variables.
  \item \code{group} The estimated clusters (indices of each cluster).
  \item \code{A} The estimated \eqn{p} by \eqn{K} assignment matrix.
  \item \code{C} The covariance matrix of \eqn{Z}.
  \item \code{Omega} The precision matrix of \eqn{Z}.
  \item \code{Gamma} The diagonal of the covariance matrix of \eqn{E}.
  \item \code{optDelta} The selected value of \eqn{\delta}.
}
}
\description{
Perform overlapping (variable) clustering of a \eqn{p}-
dimensional feature generated from the latent factor model
\deqn{X = AZ + E}
with identifiability conditions on \eqn{A} and \eqn{Cov(Z)}.
}
\details{
\code{LOVE} performs overlapping clustering of the feature variables
  \eqn{X} generated from the latent factor model
  \deqn{X = AZ+E}
  where the loading matrix \eqn{A} and the covariance matrix of \eqn{Z}
  satisfy certain identifiability conditions. The main goal is to estimate
  the loading matrix \eqn{A} whose support is used to form overlapping groups
  of \eqn{X}.

  The first step estimates the pure loadings, defined as the rows of \eqn{A}
  that are proportional to canonical vectors. When the pure loadings are
  expected to have the same magnitudes (up to the sign), for instance,
  \deqn{A_{1.} = (1, 0, 0), A_{2.} = (-1, 0, 0),}
  the estimation of pure loadings is done via setting \code{pure_homo} to
  \code{TRUE}. When different magnitudes are expected for the pure loadings,
  such as \deqn{A_{1.} = (1, 0, 0), A_{2.} = (-0.5, 0, 0),}
  the estimation uses a different approach by setting setting \code{pure_homo}
  to \code{FALSE}.

  The second step estimates the non-pure (mixed) loadings of \eqn{A}. Three
  procedures are available as specified by \code{est_non_pure_row}. The choice
  "HT" specifies the estimation via hard-thresholding that is computationally
  fast while "ST" uses soft-thresholding instead. Both "ST" and "Dantzig"
  resort to solving linear programs. Another difference of "Dantzig" from "HT"
  and "ST" is that the former does not require to estimate the precision
  matrix of \eqn{Z}.
}
\examples{
p <- 6
n <- 100
K <- 2
A <- rbind(c(1, 0), c(-1, 0), c(0, 1), c(0, 1), c(1/3, 2/3), c(1/2, -1/2))
Z <- matrix(rnorm(n * K, sd = sqrt(2)), n, K)
E <- matrix(rnorm(n * p), n, p)
X <- Z \%*\% t(A) + E
res_LOVE <- LOVE(X, pure_homo = FALSE, delta = NULL)
res_LOVE <- LOVE(X, pure_homo = TRUE, delta = seq(0.1, 1.1 ,0.1))

}
\references{
Bing, X., Bunea, F., Yang N and Wegkamp, M. (2020) \emph{Adaptive
estimation in structured factor models with applications to overlapping clustering},
Annals of Statistics, Vol.48(4) 2055 - 2081, August 2020.
\url{https://projecteuclid.org/journals/annals-of-statistics/volume-48/issue-4/Adaptive-estimation-in-structured-factor-models-with-applications-to-overlapping/10.1214/19-AOS1877.short}

Bing, X., Bunea, F. and Wegkamp, M. (2021) \emph{Detecting approximate replicate
components of a high-dimensional random vector with latent structure}.
\url{https://arxiv.org/abs/2010.02288}.
}
