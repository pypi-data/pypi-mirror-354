[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "deeptan"
version = "0.1.5"
description = "DeepTAN: A multi-task framework designed to infer multi-omics trait-associated networks and reconstruct phenotype-specific omics states from mosaic data input."
authors = [{ name = "Chenhua Wu", email = "chanhuawu@outlook.com" }]
maintainers = [{ name = "Chenhua Wu", email = "chanhuawu@outlook.com" }]
readme = "README.md"
requires-python = ">=3.10, <3.13"
dependencies = [
    "leidenalg>=0.10.2",
    "lightning>=2.5.1.post0",
    "litdata>=0.2.49",
    "mosaicml-streaming>=0.12.0",
    "numpy>=2.1.2",
    "optuna>=4.3.0",
    "optuna-dashboard>=0.18.0",
    "pacmap>=0.8.0",
    "polars>=1.30.0",
    "pyarrow>=19.0.0",
    "scanpy>=1.11.2",
    "scib-metrics>=0.5.4",
    "scikit-learn>=1.6.1",
    "scikit-misc>=0.5.1",
    "scipy>=1.15.1",
    "tensorboard>=2.18.0",
    "torch==2.7.0",
    "torchaudio==2.7.0",
    "torchvision==0.22.0",
    "torch-geometric>=2.6.1",
    "pyg_lib",
    "torch_scatter",
    "torch_sparse",
    "torch_cluster",
    "torch_spline_conv",
    "torchmetrics>=1.7.1",
    "zstd>=1.5.7.0",
    "setuptools>=78.1.1",
    "jupyterlab>=4.4.3",
    "jupyterlab-lsp>=5.1.1",
    "tqdm>=4.67.1",
]
license = { file = "LICENSE" }
keywords = ["bioinformatics", "deep learning", "pytorch"]
classifiers = [
    "Environment :: Console",
    "Environment :: GPU :: NVIDIA CUDA :: 12",
    "Natural Language :: English",
    "Natural Language :: Chinese (Simplified)",
    "Development Status :: 2 - Pre-Alpha",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Operating System :: POSIX :: Linux",
]

[project.urls]
Homepage = "https://github.com/cma2015/DeepTAN"

[project.scripts]
hello_deeptan = "deeptan.cli.hello:hello"
print_sc_h5 = "deeptan.cli.print_sc_h5:print_sc_h5"
deeptan-litdata = "deeptan.cli.deeptan_litdata:deeptan_litdata"
deeptan-fit = "deeptan.cli.deeptan_fit:deeptan_fit_tune"
deeptan-predict = "deeptan.cli.deeptan_predict:deeptan_predict"
deeptan-perturb = "deeptan.cli.deeptan_perturb:deeptan_perturb"
deeptan-pkl2h5 = "deeptan.cli.deeptan_pkl2h5:convert_pkl_to_h5"

[tool.uv.pip]
index-url = "https://mirror.sjtu.edu.cn/pypi/web/simple"

[tool.uv]
index-url = "https://mirror.sjtu.edu.cn/pypi/web/simple"
environments = ["sys_platform == 'linux'"]

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[[tool.uv.index]]
name = "pyg-pt27cu128"
url = "https://data.pyg.org/whl/torch-2.7.0+cu128.html"
format = "flat"
explicit = true

[tool.uv.sources]
torch = [
    { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]
torchvision = [
    { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]
torchaudio = [
    { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]
pyg_lib = [
    { index = "pyg-pt27cu128", marker = "sys_platform == 'linux'" },
]
torch_scatter = [
    { index = "pyg-pt27cu128", marker = "sys_platform == 'linux'" },
]
torch_sparse = [
    { index = "pyg-pt27cu128", marker = "sys_platform == 'linux'" },
]
torch_cluster = [
    { index = "pyg-pt27cu128", marker = "sys_platform == 'linux'" },
]
torch_spline_conv = [
    { index = "pyg-pt27cu128", marker = "sys_platform == 'linux'" },
]

[tool.ruff]
line-length = 288
