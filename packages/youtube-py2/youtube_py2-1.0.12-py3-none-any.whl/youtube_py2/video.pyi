# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from typing import Any
from typing_extensions import Self
from youtube_py2.license import require_device_cert
import logging
import os
import requests
import time

class YouTubeVideo:
    def __init__(self: Self, auth: Any) -> None: ...
    def _cache_get(self: Self, key: Any) -> Any: ...
    def _cache_set(self: Self, key: Any, value: Any, ttl: Any) -> Any: ...
    def get_video_info(self: Self, video_id: Any, use_cache: Any) -> Any: ...
    def search_videos(self: Self, query: Any, max_results: Any, page_token: Any) -> Any: ...
    def get_related_videos(self: Self, video_id: Any, max_results: Any) -> Any: ...
    def upload_video(self: Self, file_path: Any, title: Any, desc: Any, progress_callback: Any) -> Any: ...
    def batch_edit_videos(self: Self, video_ids: Any, title: Any, desc: Any) -> Any: ...
    def get_thumbnail_url(self: Self, video_id: Any, quality: Any) -> Any: ...
    def get_tags_and_category(self: Self, video_id: Any) -> Any: ...
    def _get_category_name(self: Self, category_id: Any) -> Any: ...
    def get_chapters(self: Self, video_id: Any) -> Any: ...
    def set_privacy_status(self: Self, video_id: Any, status: Any) -> Any: ...
    def get_trending_videos(self: Self, region_code: Any, max_results: Any) -> Any: ...
    def search_local_videos(self: Self, keyword: Any, field: Any) -> Any: ...
    def extract_links_and_images(self: Self, video_id: Any) -> Any: ...
    def backup_video_info(self: Self, video_id: Any, backup_dir: Any) -> Any: ...
    def list_backups(self: Self, backup_dir: Any) -> Any: ...
    def restore_video_info(self: Self, video_id: Any, backup_dir: Any) -> Any: ...
    def list_shorts(self: Self, channel_id: Any, max_results: Any) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import os
import requests
import logging
import time
import youtube_py2
import youtube_py2.license
import ntpath
import re
import json