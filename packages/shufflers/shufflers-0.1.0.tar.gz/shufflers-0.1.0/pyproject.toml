[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "shufflers"
dynamic = ["version"]
description = "ShuffleLM: Parallel Token Generation Language Models with Intelligent Reordering"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "thisisthepy", email = "thisisthepy@gmail.com" },
]
keywords = [
    "language-model",
    "transformer",
    "mlp-mixer", 
    "parallel-generation",
    "natural-language-processing",
    "deep-learning",
    "pytorch",
    "shufflelm",
    "rotary-regression"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]
requires-python = ">=3.9"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.21.0",
    "numpy>=1.21.0",
    "einops>=0.6.0",
    "tqdm>=4.64.0",
    "safetensors>=0.3.0",
    "tokenizers>=0.13.0",
    "huggingface-hub>=0.16.0",
    "packaging>=21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0",
]
visualization = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "pillow>=9.0.0",
    "imageio>=2.22.0",
]
benchmark = [
    "datasets>=2.0.0",
    "evaluate>=0.4.0",
    "wandb>=0.13.0",
    "accelerate>=0.20.0",
]
all = [
    "shufflers[dev,docs,visualization,benchmark]"
]

[project.urls]
Homepage = "https://github.com/thisisthepy/ShuffleLM"
Documentation = "https://shufflelm.readthedocs.io"
Repository = "https://github.com/thisisthepy/ShuffleLM"
"Bug Tracker" = "https://github.com/thisisthepy/ShuffleLM/issues"
"Discussions" = "https://github.com/thisisthepy/ShuffleLM/discussions"
Changelog = "https://github.com/thisisthepy/ShuffleLM/blob/main/CHANGELOG.md"

[project.scripts]
shufflelm = "shufflers.cli:main"

[tool.flit.module]
name = "shufflers"

# === Tool Configurations ===

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--color=yes",
    "-v"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gpu: marks tests that require GPU",
]

[tool.coverage.run]
source = ["shufflers"]
omit = [
    "shufflers/__init__.py",
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312", "py313"]
include = "\\.pyi?$"
extend-exclude = '''
/(
    # directories
    \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["shufflers"]
known_third_party = [
    "torch",
    "transformers", 
    "numpy",
    "einops",
    "tqdm"
]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
]
per-file-ignores = [
    "__init__.py:F401",  # allow unused imports in __init__.py
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "einops.*",
    "numpy.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["shufflers"]

# === uv Configuration ===

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "ruff>=0.1.0",
]

[tool.uv.sources]
# Local development sources can be specified here if needed
