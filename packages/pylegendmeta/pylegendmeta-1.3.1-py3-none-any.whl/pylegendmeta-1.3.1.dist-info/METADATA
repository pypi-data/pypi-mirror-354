Metadata-Version: 2.4
Name: pylegendmeta
Version: 1.3.1
Summary: Python LEGEND-metadata implementation
Author-email: Luigi Pertoldi <gipert@pm.me>
Maintainer: The LEGEND Collaboration
License: GPL-3.0
Project-URL: Homepage, https://github.com/legend-exp/pylegendmeta
Project-URL: Bug Tracker, https://github.com/legend-exp/pylegedmeta/issues
Project-URL: Discussions, https://github.com/legend-exp/pylegedmeta/discussions
Project-URL: Changelog, https://github.com/legend-exp/pylegedmeta/releases
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: packaging
Requires-Dist: dbetto>=1.2.2
Requires-Dist: GitPython
Requires-Dist: pandas
Requires-Dist: pyyaml
Requires-Dist: psycopg2-binary<=2.9.9; python_version < "3.10" and platform_system == "Darwin"
Requires-Dist: psycopg2-binary; python_version >= "3.10" or platform_system != "Darwin"
Requires-Dist: sqlalchemy>=2
Provides-Extra: all
Requires-Dist: pylegendmeta[docs,test]; extra == "all"
Provides-Extra: docs
Requires-Dist: furo; extra == "docs"
Requires-Dist: myst-parser; extra == "docs"
Requires-Dist: sphinx>=7.2.2; extra == "docs"
Requires-Dist: sphinx-copybutton; extra == "docs"
Requires-Dist: sphinx-inline-tabs; extra == "docs"
Provides-Extra: test
Requires-Dist: pre-commit; extra == "test"
Requires-Dist: pytest>=6.0; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Dynamic: license-file

# pylegendmeta

[![PyPI](https://img.shields.io/pypi/v/pylegendmeta?logo=pypi)](https://pypi.org/project/pylegendmeta/)
![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/legend-exp/pylegendmeta?logo=git)
[![GitHub Workflow Status](https://img.shields.io/github/checks-status/legend-exp/pylegendmeta/main?label=main%20branch&logo=github)](https://github.com/legend-exp/pylegendmeta/actions)
[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Codecov](https://img.shields.io/codecov/c/github/legend-exp/pylegendmeta?logo=codecov)](https://app.codecov.io/gh/legend-exp/pylegendmeta)
![GitHub issues](https://img.shields.io/github/issues/legend-exp/pylegendmeta?logo=github)
![GitHub pull requests](https://img.shields.io/github/issues-pr/legend-exp/pylegendmeta?logo=github)
![License](https://img.shields.io/github/license/legend-exp/pylegendmeta)
[![Read the Docs](https://img.shields.io/readthedocs/pylegendmeta?logo=readthedocs)](https://pylegendmeta.readthedocs.io)

Access [legend-metadata](https://github.com/legend-exp/legend-metadata) through
[dbetto](https://dbetto.readthedocs.io).
