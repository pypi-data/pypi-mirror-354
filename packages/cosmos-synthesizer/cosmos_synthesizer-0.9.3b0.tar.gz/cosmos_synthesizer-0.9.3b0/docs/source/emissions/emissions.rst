Emissions 
=================

Emissions are the theoretical outputs from combining a ``Galaxy`` and/or its ``Components`` with an ``EmissionModel`` (though they can also be extracted from `a `Grid<../emission_grids/grids.rst>`_ or created explicitly with a user input). In this section, we will cover generating and working with these objects.

Emission Lines
~~~~~~~~~~~~~~~

Emission lines are encapsulated by the ``LineCollection`` object. This object holds an arbitrary collection of emission lines, with each luminosity, continuum, line ID, and wavelength stored in an array. However, as well as providing an interface to these arrays, the ``LineCollection`` can also be treated as a dictionary. We demonstrate this below.

Note that the line IDs follow the same convention as in Cloudy, whereby a line is usually represented as ``{atomic or molecular notation} {ionisation state} {wavelength}``. The ionisation state is in the usual astronomical notation, e.g. H 1 for atomic hydrogen, but different for molecules, with the state denoted by '+' or '-' (e.g. HCO+).

In the following examples we show how to interact with a ``LineCollection``, how to compute line ratios, and demonstrate how to generate lines from both a ``Grid`` and a ``Galaxy``.


.. toctree::
   :maxdepth: 1

   lines/lines_example
   lines/line_ratios
   lines/grid_lines


Spectral Energy Distributions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A Spectral Energy Distribution, or SED, describes the energy distribution of an emitting body as a function of frequency / wavelength. In Synthesizer, spectra are stored in ``Sed`` objects.

There are a number of different ways to generate spectra in synthesizer, but in every case the resulting SED is always stored in an ``Sed`` object.
An ``Sed`` object in synthesizer is generally agnostic of where the input spectra comes from; they can therefore be inititalised provided any arbitrary frequency / wavelength and the corresponding flux / luminosity density.
An ``Sed`` object has the ability to contain multiple spectra (multiple galaxies or particles).

The ``Sed`` class contains a number of methods for calculating derived properties, such as broadband luminosities / fluxes (within wavelength windows or on `filters <../filters/filters.rst>`_) and spectral indices (e.g. balmer break, UV-continuum slope), and for modifying the spectra themselves, for example by applying an attenuation curve due to dust.

In the following example we introduce the ``Sed`` class, and some simple functionality.

.. toctree::
   :maxdepth: 1

   spectra/sed_example

Generating Emissions 
~~~~~~~~~~~~~~~~~~~~~~~~~

Synthesizer currently supports the generation of spectra for both stellar populations and AGN.
Generation of spectra for each `component <../components/components>`_ in a galaxy requires an `emission model <../emission_models/emission_models>`_ defining the different spectra to be generated.
With a model in hand, all that needs to be done is pass that model to the ``get_spectra`` method on a ``component`` or ``galaxy``. 
This will generate ``Sed`` objects (see `here <../sed/sed>`_ for an overview) and attach them to the component / galaxy.

Integrated vs Particle
-----------------------

Synthesizer enables the generation of both integrated spectra (a single spectra per component / galaxy) or "per--particle" spectra (a spectra for each individual particle).
The latter of these is (unsurprisingly) only applicable for particle components (`particle.Stars` and `particle.BlackHoles`), while the former can be generated for both parametric and particle components.
Additionally, galaxy level spectra are, by definition, integrated.

Integrated spectra are generated by ``get_spectra`` methods, and store the resultant spectra in a dictionary called `spectra` on the component / galaxy.
Any particle based components also provide the ``get_particle_spectra`` method, which will produce per--particle spectra, and store the generated spectra in a dictionary called ``particle_spectra`` on the component.
In the linked docs we demonstrate how, using ``EmissionModels`` in conjunction with these methods, you can generate component and galaxy spectra. Additionally, if you have an instrument with a wavelength array (e.g. NIRSpec, 4MOST, DESI, etc.) you can also perform spectroscopy. This is detailed in the spectroscopy docs below.

.. toctree::
   :maxdepth: 1

   lines/galaxy_lines
   spectra/stars
   spectra/blackholes
   spectra/galaxy
   spectra/spectroscopy
