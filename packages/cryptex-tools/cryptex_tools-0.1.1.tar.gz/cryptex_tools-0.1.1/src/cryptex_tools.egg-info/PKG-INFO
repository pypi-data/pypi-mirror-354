Metadata-Version: 2.4
Name: cryptex_tools
Version: 0.1.1
Summary: An educational toolkit for classic ciphers and cryptanalysis
Author-email: Arpit Omprakash <omprakasharpit@gmail.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/arpit-omprakash/cryptex-tools
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Education
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Security :: Cryptography
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click>=8.0
Dynamic: license-file

# üîê Cryptex Tools

**cryptex_tools** is an educational cryptography toolkit written in Python, designed for learners and hobbyists. It demonstrates classical ciphers, basic cryptanalysis tools, and allows users to experiment with encryption and decryption via a simple command-line interface (CLI).

---

## üì¶ Features

- Classical Ciphers:
  - Caesar, Vigen√®re, Atbash, Affine, Pigpen, ROT13, Keyboard Shift, Playfair, Rail Fence
- Cryptanalysis Tools:
  - Frequency analysis
  - Vigen√®re cipher cracking (with auto alignment and dictionary support)
  - Caesar cipher cracking (brute force)
- File-based encryption/decryption support
- Modular, extensible architecture with clean CLI powered by `click`

---

|||
|-|-|
|Author   | Arpit Omprakash             |
|License  | MIT License                 |
|Homepage | https://github.com/arpit-omprakash/cryptex-tools |

---

## üìÅ Project Structure

cryptex-tools/  
‚îú‚îÄ‚îÄ src/cryptex_tools/  
‚îÇ ‚îú‚îÄ‚îÄ ciphers/ # Individual cipher modules  
‚îÇ ‚îú‚îÄ‚îÄ cli/ # CLI entry point and command setup  
‚îÇ ‚îú‚îÄ‚îÄ cryptanalysis/ # Cryptanalysis tools and helpers  
‚îÇ ‚îú‚îÄ‚îÄ utils/ # Utility functions like cipher loader  
‚îú‚îÄ‚îÄ tests/ # Unit tests for ciphers and CLI  
‚îú‚îÄ‚îÄ README.md  
‚îî‚îÄ‚îÄ requirements.txt  

---

## Supported Ciphers

`cryptex_tools` currently supports the following ciphers (see `src/cryptex_tools/ciphers`):

1. **Caesar Cipher** ‚Äì Shifts each letter by a fixed number of positions.
2. **ROT13 Cipher** ‚Äì Caesar cipher with a fixed shift of 13.
3. **Affine Cipher** ‚Äì Encrypts using the formula `(a*x + b) mod 26`.
4. **Atbash Cipher** ‚Äì Substitutes each letter with its reverse in the alphabet.
5. **Keyboard Shift Cipher** ‚Äì Shifts letters according to their position in QWERTY keyboard rows.
6. **Pigpen Cipher (Unicode)** ‚Äì Substitutes each letter with a Unicode Pigpen symbol.
7. **Playfair Cipher** ‚Äì Digraph substitution cipher using a 5x5 matrix based on a keyword.
8. **Rail Fence Cipher** ‚Äì Transposition cipher writing text in a zigzag pattern.
9. **Vigen√®re Cipher** ‚Äì Uses a keyword to shift letters; the keyword repeats to match text length.

---


## üöÄ Getting Started

### 1. Clone the repository

```bash
git clone https://github.com/arpit-omprakash/cryptex-tools.git
cd cryptex-tools
```

### 2. Set up virtual environment and install

```bash
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
pip install -r requirements.txt

# Install the package
pip install -e .
```

### 3. Run the CLI

```bash
# Help for the program
python -m cryptex_tools --help

# Help for a specific submenu
python -m cryptex_tools encrypt --help 
```

---

## üõ† Usage Examples 

### Encrypt using Caesar Cipher

```bash
$ python -m cryptex_tools encrypt "caesar cipher" --text "HELLO" --key 3

# Output
$ KHOOR
```

### Decrypt using Vigenere Cipher

```bash
$ python -m cryptex_tools decrypt "vigenere cipher" --text "RIJVS" --key "KEY"

# Output
$ HELLO
```

### Crack Vigenere Cipher using Dictionary

```bash
$ python -m cryptex_tools analyze crack-vigenere --text "LLKJMLSQGJWTYI"

# Output
$ [+] Guessed key: SECRET
$ [+] Decrypted text:
$ THISISAMESSAGE
```

## ‚úÖ Running Tests

To run all tests:

```bash
tests\run_tests.bat # Windows

# or manually
python -m unittest discover -s tests
```

## ‚ú® Contributing

Pull Requests, Feedback, and Suggestions are Welcome!

## üìú License

```
MIT License

Copyright (c) 2025 Arpit Omprakash

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
```

---
