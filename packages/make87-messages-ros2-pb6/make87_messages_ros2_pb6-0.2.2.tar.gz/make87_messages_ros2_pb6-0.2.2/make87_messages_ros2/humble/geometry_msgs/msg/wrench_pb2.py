# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: make87_messages_ros2/humble/geometry_msgs/msg/wrench.proto
# Protobuf Python Version: 6.30.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    2,
    '',
    'make87_messages_ros2/humble/geometry_msgs/msg/wrench.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from make87_messages.core import header_pb2 as make87__messages_dot_core_dot_header__pb2
from make87_messages_ros2.humble.geometry_msgs.msg import vector3_pb2 as make87__messages__ros2_dot_humble_dot_geometry__msgs_dot_msg_dot_vector3__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n:make87_messages_ros2/humble/geometry_msgs/msg/wrench.proto\x12-make87_messages_ros2.humble.geometry_msgs.msg\x1a!make87_messages/core/header.proto\x1a;make87_messages_ros2/humble/geometry_msgs/msg/vector3.proto\"\xc5\x01\n\x06Wrench\x12,\n\x06header\x18\x01 \x01(\x0b\x32\x1c.make87_messages.core.Header\x12\x45\n\x05\x66orce\x18\x02 \x01(\x0b\x32\x36.make87_messages_ros2.humble.geometry_msgs.msg.Vector3\x12\x46\n\x06torque\x18\x03 \x01(\x0b\x32\x36.make87_messages_ros2.humble.geometry_msgs.msg.Vector3b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'make87_messages_ros2.humble.geometry_msgs.msg.wrench_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_WRENCH']._serialized_start=206
  _globals['_WRENCH']._serialized_end=403
# @@protoc_insertion_point(module_scope)
