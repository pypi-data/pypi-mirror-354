# kilopa/__init__.py - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –≤–µ—Ä—Å–∏—è
"""
üõ°Ô∏è Kilopa Protection - –ù–µ–≤–∏–¥–∏–º–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã Python –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
"""

__version__ = "2.1.1"
__author__ = "KilopaDev"
__email__ = "dev@kilopa.com"
__license__ = "MIT"

import os
import sys
import time
import threading
import builtins
import inspect
from pathlib import Path

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
from .config import DEFAULT_CONFIG, update_config
from .protection import ProtectionManager

# ============================================================================
# –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
# ============================================================================

_protection_manager = None
_is_initialized = False
_config = DEFAULT_CONFIG.copy()

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
_original_input = builtins.input
_original_open = builtins.open
_original_eval = builtins.eval
_original_exec = builtins.exec

# ============================================================================
# –ë–ï–ó–û–ü–ê–°–ù–´–ï –ó–ê–©–ò–©–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò
# ============================================================================

def _is_system_call():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –º–æ–¥—É–ª—è–º–∏"""
    import inspect
    
    frame = inspect.currentframe()
    try:
        # –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –ø–æ —Å—Ç–µ–∫—É –≤—ã–∑–æ–≤–æ–≤
        while frame:
            filename = frame.f_code.co_filename
            # –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –º–æ–¥—É–ª–∏ Python –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
            if any(path in filename for path in [
                'site-packages',
                'Python313\\Lib',
                'python3.',
                '/usr/lib/python',
                'importlib',
                'flask',
                'werkzeug',
                'threading',
                'multiprocessing'
            ]):
                return True
            frame = frame.f_back
    except:
        pass
    finally:
        del frame
    
    return False

def _protected_input(*args, **kwargs):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞—â–∏—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è input"""
    # –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤—ã–∑–æ–≤—ã
    if _is_system_call():
        return _original_input(*args, **kwargs)
        
    if _protection_manager and not _protection_manager.is_licensed():
        if _protection_manager._check_if_blocked():
            return ""
        _protection_manager._increment_operation()
    return _original_input(*args, **kwargs)

def _protected_open(*args, **kwargs):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞—â–∏—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è open"""
    # –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤—ã–∑–æ–≤—ã
    if _is_system_call():
        return _original_open(*args, **kwargs)
        
    if _protection_manager and not _protection_manager.is_licensed():
        mode = 'r'
        if len(args) > 1:
            mode = args[1]
        elif 'mode' in kwargs:
            mode = kwargs['mode']
        
        if any(m in mode for m in ['w', 'a', 'x', '+']):
            if _protection_manager._check_if_blocked():
                raise PermissionError("–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω")
            else:
                raise PermissionError("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    return _original_open(*args, **kwargs)

def _protected_eval(*args, **kwargs):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞—â–∏—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è eval"""
    # –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤—ã–∑–æ–≤—ã
    if _is_system_call():
        return _original_eval(*args, **kwargs)
        
    if _protection_manager and not _protection_manager.is_licensed():
        if _protection_manager._check_if_blocked():
            raise RuntimeError("–û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        _protection_manager._increment_operation()
    return _original_eval(*args, **kwargs)

def _protected_exec(*args, **kwargs):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞—â–∏—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è exec"""
    # –í–°–ï–ì–î–ê —Ä–∞–∑—Ä–µ—à–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤—ã–∑–æ–≤—ã –¥–ª—è exec!
    if _is_system_call():
        return _original_exec(*args, **kwargs)
        
    # –¢–æ–ª—å–∫–æ –±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤—ã–∑–æ–≤—ã exec
    if _protection_manager and not _protection_manager.is_licensed():
        if _protection_manager._check_if_blocked():
            raise RuntimeError("–§—É–Ω–∫—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
        else:
            raise RuntimeError("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    return _original_exec(*args, **kwargs)

# ============================================================================
# –ü–£–ë–õ–ò–ß–ù–´–ï –§–£–ù–ö–¶–ò–ò API
# ============================================================================

def configure(**kwargs):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞—â–∏—Ç—ã"""
    global _config
    update_config(_config, kwargs)
    
    if _protection_manager:
        _protection_manager.update_config(_config)

def is_licensed():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    if _protection_manager:
        return _protection_manager.is_licensed()
    return False

def get_demo_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–µ–º–æ-–ø–µ—Ä–∏–æ–¥–µ"""
    if _protection_manager:
        return _protection_manager.get_demo_info()
    return {'licensed': False, 'time_left': 0, 'operations_left': 0, 'user_id': 'Unknown'}

def get_user_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    if _protection_manager:
        return _protection_manager.get_user_info()
    return None

def start_admin_server(port=None):
    """–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-—Å–µ—Ä–≤–µ—Ä–∞ –≤—Ä—É—á–Ω—É—é"""
    from .admin_server import start_server
    
    if port:
        _config['admin_port'] = port
    
    start_server(_config['admin_port'])

def protect_function(func_name="—Ñ—É–Ω–∫—Ü–∏—è"):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –∑–∞—â–∏—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π"""
    def decorator(func):
        def wrapper(*args, **kwargs):
            if not is_licensed():
                return None
            return func(*args, **kwargs)
        return wrapper
    return decorator

# ============================================================================
# –í–ù–£–¢–†–ï–ù–ù–ò–ï –§–£–ù–ö–¶–ò–ò (–ü–û–õ–ù–û–°–¢–¨–Æ –¢–ò–•–ò–ï)
# ============================================================================

def _initialize_protection():
    """–¢–∏—Ö–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã"""
    global _protection_manager, _is_initialized
    
    if _is_initialized:
        return
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞—â–∏—Ç—ã –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ
        _config['silent_mode'] = True
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –¥–µ–º–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if _config['demo_time'] < 5:
            _config['demo_time'] = 5  # –ú–∏–Ω–∏–º—É–º 5 –º–∏–Ω—É—Ç
            
        _protection_manager = ProtectionManager(_config)
        _is_initialized = True
        
        # –ó–∞–º–µ–Ω—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
        builtins.input = _protected_input
        builtins.open = _protected_open
        builtins.eval = _protected_eval
        builtins.exec = _protected_exec
        
    except Exception:
        # –¢–∏—Ö–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        pass

def _get_caller_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–∑—ã–≤–∞—é—â–µ–º –º–æ–¥—É–ª–µ"""
    import inspect
    
    frame = inspect.currentframe()
    try:
        while frame:
            filename = frame.f_code.co_filename
            if not any(part in filename for part in ['kilopa', 'importlib', 'site-packages']):
                return {'filename': os.path.basename(filename), 'directory': os.path.dirname(filename)}
            frame = frame.f_back
    except:
        pass
    finally:
        del frame
    
    return {'filename': 'unknown', 'directory': ''}

def _auto_initialize():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–∏—Ö–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ"""
    caller_info = _get_caller_info()
    
    if caller_info['filename'] != 'unknown':
        base_name = os.path.splitext(caller_info['filename'])[0]
        if _config['product_id'] == DEFAULT_CONFIG['product_id']:
            _config['product_id'] = f"kilopa-{base_name}"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    def delayed_init():
        time.sleep(0.5)  # –î–∞–µ–º –≤—Å–µ–º –º–æ–¥—É–ª—è–º –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
        _initialize_protection()
    
    threading.Thread(target=delayed_init, daemon=True).start()

def _cleanup():
    """–¢–∏—Ö–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    global _protection_manager
    
    if _protection_manager:
        _protection_manager._cleanup()
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    try:
        builtins.input = _original_input
        builtins.open = _original_open
        builtins.eval = _original_eval
        builtins.exec = _original_exec
    except:
        pass

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–∏—Ö—É—é –æ—á–∏—Å—Ç–∫—É –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
import atexit
atexit.register(_cleanup)

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∏—Ö—É—é –∞–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
_auto_initialize()

# ============================================================================
# –≠–ö–°–ü–û–†–¢ –ü–£–ë–õ–ò–ß–ù–´–• –§–£–ù–ö–¶–ò–ô
# ============================================================================

__all__ = [
    'configure',
    'is_licensed', 
    'get_demo_info',
    'get_user_info',
    'start_admin_server',
    'protect_function',
    '__version__'
]

# –ê–ª–∏–∞—Å—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
licensed = is_licensed
demo_info = get_demo_info
user_info = get_user_info
protect = protect_function
is_full_version = is_licensed
is_demo = lambda: not is_licensed()