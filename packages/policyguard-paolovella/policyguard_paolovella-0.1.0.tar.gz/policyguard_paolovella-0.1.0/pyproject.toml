[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "policyguard-paolovella"
dynamic = ["version"]
description = "Pre-commit hook for detecting security issues in AI-generated code"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Paolo vella", email = "paolovella1993@gmail.com"}]
keywords = ["security", "linter", "pre-commit", "ai", "copilot", "code-quality"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]
requires-python = ">=3.7"
dependencies = [
    "click>=8.0",
    "colorama>=0.4.4;platform_system=='Windows'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "mypy>=0.990",
    "ruff>=0.0.261",
]

[project.urls]
Homepage = "https://github.com/yourusername/policyguard"
Documentation = "https://policyguard.readthedocs.io"
Repository = "https://github.com/yourusername/policyguard"
Issues = "https://github.com/yourusername/policyguard/issues"

[project.scripts]
policyguard = "policyguard.cli:main"

[tool.setuptools.dynamic]
version = {attr = "policyguard.__version__.__version__"}

[tool.setuptools.packages.find]
include = ["policyguard*"]

[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']

[tool.ruff]
line-length = 100
select = ["E", "F", "W", "I", "N", "UP", "S", "B", "A", "C4", "ICN", "SIM"]
ignore = ["E501", "S101"]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=policyguard --cov-report=term-missing"
