[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "opencar"
version = "1.0.0"
description = "Production-ready autonomous vehicle perception system with multimodal ML"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "numpy>=1.24.0",
    "opencv-python>=4.9.0",
    "pillow>=10.2.0",
    "openai>=1.12.0",
    "httpx>=0.26.0",
    "websockets>=12.0",
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "celery>=5.3.0",
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.22.0",
    "opentelemetry-sdk>=1.22.0",
    "opentelemetry-instrumentation-fastapi>=0.43b0",
    "rich>=13.7.0",
    "click>=8.1.0",
    "typer>=0.9.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "email-validator>=2.1.0",
    "jinja2>=3.1.0",
    "python-dateutil>=2.8.0",
    "pytz>=2024.1",
    "aiofiles>=23.2.0",
    "aiocache>=0.12.0",
    "structlog>=24.1.0",
    "sentry-sdk>=1.40.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.96.0",
    "black>=24.1.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
    "isort>=5.13.0",
    "pre-commit>=3.6.0",
    "ipython>=8.20.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
]

ml = [
    "transformers>=4.37.0",
    "accelerate>=0.26.0",
    "datasets>=2.16.0",
    "tensorboard>=2.15.0",
    "mlflow>=2.10.0",
    "optuna>=3.5.0",
    "albumentations>=1.3.0",
    "segmentation-models-pytorch>=0.3.0",
    "timm>=0.9.0",
]

[project.scripts]
opencar = "opencar.cli.main:app"

[project.urls]
Homepage = "https://github.com/llamasearchai/opencar"
Documentation = "https://github.com/llamasearchai/opencar#readme"
Repository = "https://github.com/llamasearchai/opencar"
Issues = "https://github.com/llamasearchai/opencar/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["opencar*"]

[tool.setuptools.package-data]
opencar = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E203", "B008", "B905"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=opencar --cov-report=term-missing"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
branch = true
source = ["src/opencar"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false 