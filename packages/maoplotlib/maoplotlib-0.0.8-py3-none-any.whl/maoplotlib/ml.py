def choose_task():
    print("1. Несколько способов на пропущенные значения\n\
        2. Визуализация распределения признаков\n\
        3. Бинарная классификация и выводы по первым значениям\n\
        4. Линейная модель, вывод коэффициентов и интерпретация\n\
        5. Модель регрессии с оптимизацией гиперпараметров по сетке\n\
        6. Множественная классификация с кросс-валидацией\n\
        7. Линейный SVM и метрики\n\
        8. Бинарная линейная классификация и гридсерч\n\
        9. Множественная классификация SVM poly с метриками\n\
        10. Регрессия с регуляризацией с гиперпараметрами")
    
def task(n):
    if n==1:
        print("from sklearn.datasets import load_iris\n\
            iris = load_iris()\n\
features = iris.data\n\
X = pd.DataFrame(features, columns = iris.feature_names)\n\
X.head()\n\
        data =pd.concat((X,pd.Series(y, name='target')),axis=1)\n\
data.head()\n\
        data =pd.concat((X,pd.Series(y, name='target')),axis=1)\n\
data.head()\n\
              np.unique(y)\n\
              print(iris.DESCR) # проверяю, что действительно должно быть 3 класса\n\
              data.info() # первый способ\n\
              data.isna().sum(axis=0) # второй способ\n\
              data.describe() # третий (почти первый, но со статистикой) - здесь же смотрим по смыслу\n\
# неотрицательность признаков (длина-ширина >0), иначе будем искать спецсимволы и заменять их\n\
# на наны, чтобы потом обработать как надо - условно data[data == -1] = np.nan\n\
              sns.heatmap(data.isnull(), yticklabels=False, cbar=False)\n\
              # визуальный способ - если бы были пропуски, тут были бы светлые полосочки\n\
# они очень удобные, потому что сразу видно строки, где много пропусков (помним примеры с датасета титаник)\n\
# это были объекты, где не было многих атрибутов, но тут все хорошо :)")
    elif n==2:
        print("")
    elif n==3:
        print("")
    elif n==4:
        print("")
    elif n==5:
        print("")
    elif n==6:
        print("")
    elif n==7:
        print("")
    elif n==8:
        print("")
    elif n==9:
        print("")
    else:
        print("")