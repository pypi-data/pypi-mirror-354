---
source: crates/cribo/tests/test_circular_dependencies.rs
expression: bundled_content
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

# ─ Module: module_a ─
import types
module_a = types.ModuleType('module_a')
exec('def process_a():\n    """Process A that depends on B"""\n    return process_b() + "->A"\ndef get_value_a():\n    return "value_from_A"', module_a.__dict__)

# ─ Module: module_b ─
def process_b():
    """Process B that depends on C"""
    return process_c() + "->B"
def get_value_b():
    return "value_from_B"

# ─ Module: module_c ─
def process_c():
    """Process C that depends back on A - creates the cycle"""
    value = get_value_a()
    return f"C(using_{value})"
def get_value_c():
    return "value_from_C"

# ─ Entry Module: main ─
def main():
    result = module_a.process_a()
    print(f"Result: {result}")
if __name__ == "__main__":
    main()
