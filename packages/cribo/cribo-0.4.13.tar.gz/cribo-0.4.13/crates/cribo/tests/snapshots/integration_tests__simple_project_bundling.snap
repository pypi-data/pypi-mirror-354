---
source: crates/cribo/tests/integration_tests.rs
description: Bundle output for simple project with User model and helper functions
expression: content
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

# Preserved imports
import os
import sys

# ─ Module: utils.helpers ─
import types
utils = types.ModuleType('utils')
utils.helpers = types.ModuleType('utils.helpers')
exec('"""Utility functions for the test project."""\nimport os\nimport sys\nfrom typing import Union\ndef greet(name: str) -> str:\n    """Greet a person by name."""\n    return f"Hello, {name}!"\ndef calculate(a: Union[int, float], b: Union[int, float]) -> Union[int, float]:\n    """Calculate the sum of two numbers."""\n    return a + b\ndef get_system_info() -> dict:\n    """Get basic system information."""\n    return {"platform": sys.platform, "python_version": sys.version, "cwd": os.getcwd()}', utils.helpers.__dict__)

# ─ Module: models.user ─
import types
models = types.ModuleType('models')
models.user = types.ModuleType('models.user')
exec('"""User model for the test project."""\nfrom dataclasses import dataclass\nfrom typing import Optional\n@dataclass\nclass User:\n    """A simple user model."""\n    name: str\n    age: int\n    email: Optional[str] = None\n\n    def is_adult(self) -> bool:\n        """Check if the user is an adult."""\n        return self.age >= 18\n\n    def get_display_name(self) -> str:\n        """Get a display name for the user."""\n        if self.email:\n            return f"{self.name} <{self.email}>"\n        return self.name', models.user.__dict__)

# ─ Module: utils ─
greet = utils.helpers.greet
calculate = utils.helpers.calculate
get_system_info = utils.helpers.get_system_info
"""Utils package initialization."""
__all__ = ["greet", "calculate", "get_system_info"]

# ─ Module: models ─
User = models.user.User
"""Models package initialization."""
__all__ = ["User"]

# ─ Entry Module: main ─
greet = utils.helpers.greet
calculate = utils.helpers.calculate
User = models.user.User
"""Simple test project entry point."""
def main():
    """Main function."""
    user = User("Alice", 30)
    print(greet(user.name))
    result = calculate(10, 20)
    print(f"Calculation result: {result}")
    print(f"User: {user.name}, Age: {user.age}")
if __name__ == "__main__":
    main()
