---
source: crates/cribo/tests/test_circular_dependencies.rs
expression: bundled_content
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

# ─ Module: services.auth ─
import types
services = types.ModuleType('services')
services.auth = types.ModuleType('services.auth')
exec('get_connection = get_connection\ndef authenticate_user(username):\n    """Authenticate user using database connection"""\n    conn = get_connection()\n    return f"auth({username}, conn={conn})"\ndef get_user_context():\n    """Get user context - used by database module"""\n    return "user_context_from_auth"', services.auth.__dict__)

# ─ Module: services.database ─
get_user_context = get_user_context
def get_connection():
    """Get database connection with user context"""
    context = get_user_context()
    return f"db_connection(context={context})"
def execute_query(query):
    """Execute a database query"""
    return f"query_result({query})"

# ─ Module: services ─
exec('', globals(), services.__dict__)

# ─ Entry Module: main ─
auth = services.auth
def main():
    result = auth.authenticate_user("test_user")
    print(f"Relative import cycle result: {result}")
if __name__ == "__main__":
    main()
