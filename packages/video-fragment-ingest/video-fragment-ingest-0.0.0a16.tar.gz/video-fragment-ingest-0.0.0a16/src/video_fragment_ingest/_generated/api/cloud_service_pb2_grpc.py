# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from models import ai_models_pb2 as models_dot_ai__models__pb2
from models import service_models_pb2 as models_dot_service__models__pb2


class CloudServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BiInferenceStream = channel.stream_stream(
                '/api.CloudService/BiInferenceStream',
                request_serializer=models_dot_ai__models__pb2.InferenceFrame.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetKVSStreamTasks = channel.stream_stream(
                '/api.CloudService/GetKVSStreamTasks',
                request_serializer=models_dot_service__models__pb2.CloudStats.SerializeToString,
                response_deserializer=models_dot_service__models__pb2.CloudStreamTask.FromString,
                )


class CloudServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BiInferenceStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKVSStreamTasks(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CloudServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BiInferenceStream': grpc.stream_stream_rpc_method_handler(
                    servicer.BiInferenceStream,
                    request_deserializer=models_dot_ai__models__pb2.InferenceFrame.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetKVSStreamTasks': grpc.stream_stream_rpc_method_handler(
                    servicer.GetKVSStreamTasks,
                    request_deserializer=models_dot_service__models__pb2.CloudStats.FromString,
                    response_serializer=models_dot_service__models__pb2.CloudStreamTask.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.CloudService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CloudService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BiInferenceStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/api.CloudService/BiInferenceStream',
            models_dot_ai__models__pb2.InferenceFrame.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetKVSStreamTasks(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/api.CloudService/GetKVSStreamTasks',
            models_dot_service__models__pb2.CloudStats.SerializeToString,
            models_dot_service__models__pb2.CloudStreamTask.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
