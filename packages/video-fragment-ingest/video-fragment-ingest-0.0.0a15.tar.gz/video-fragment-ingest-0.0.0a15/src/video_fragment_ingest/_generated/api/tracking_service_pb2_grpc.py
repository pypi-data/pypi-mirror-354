# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api import tracking_service_pb2 as api_dot_tracking__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from models import ai_models_pb2 as models_dot_ai__models__pb2
from models import graph_models_pb2 as models_dot_graph__models__pb2


class TrackingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddObjectToTrack = channel.unary_unary(
                '/api.TrackingService/AddObjectToTrack',
                request_serializer=models_dot_graph__models__pb2.ObjectsOfInterestRequest.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.ObjectOfInterestTrackingJob.FromString,
                )
        self.RemoveObjectFromTrack = channel.unary_unary(
                '/api.TrackingService/RemoveObjectFromTrack',
                request_serializer=models_dot_graph__models__pb2.ObjectsOfInterestRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.StopTrackingByIncident = channel.unary_unary(
                '/api.TrackingService/StopTrackingByIncident',
                request_serializer=models_dot_graph__models__pb2.Incident.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.VerifyMatchingObject = channel.unary_unary(
                '/api.TrackingService/VerifyMatchingObject',
                request_serializer=models_dot_graph__models__pb2.MatchPrediction.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.FoundMatchedObject = channel.unary_unary(
                '/api.TrackingService/FoundMatchedObject',
                request_serializer=models_dot_graph__models__pb2.MatchPrediction.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListUnconfirmedMatchedPredictions = channel.unary_unary(
                '/api.TrackingService/ListUnconfirmedMatchedPredictions',
                request_serializer=models_dot_graph__models__pb2.UnConfirmedPredictionRequest.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.MatchPredictionList.FromString,
                )
        self.GetMatchPrediction = channel.unary_unary(
                '/api.TrackingService/GetMatchPrediction',
                request_serializer=models_dot_graph__models__pb2.MatchPrediction.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.MatchPrediction.FromString,
                )
        self.GetConfirmedMatches = channel.unary_unary(
                '/api.TrackingService/GetConfirmedMatches',
                request_serializer=models_dot_graph__models__pb2.Incident.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.Incident.FromString,
                )
        self.Inference = channel.unary_unary(
                '/api.TrackingService/Inference',
                request_serializer=api_dot_tracking__service__pb2.InferenceRequest.SerializeToString,
                response_deserializer=models_dot_ai__models__pb2.InferenceFrame.FromString,
                )
        self.CreateTrackingIncident = channel.unary_unary(
                '/api.TrackingService/CreateTrackingIncident',
                request_serializer=models_dot_ai__models__pb2.InferenceFrame.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.Incident.FromString,
                )
        self.GetTrackingJobIncidents = channel.unary_unary(
                '/api.TrackingService/GetTrackingJobIncidents',
                request_serializer=models_dot_graph__models__pb2.ObjectOfInterestTrackingJob.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.IncidentList.FromString,
                )


class TrackingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddObjectToTrack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveObjectFromTrack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopTrackingByIncident(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyMatchingObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FoundMatchedObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUnconfirmedMatchedPredictions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMatchPrediction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfirmedMatches(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Inference(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTrackingIncident(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrackingJobIncidents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TrackingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddObjectToTrack': grpc.unary_unary_rpc_method_handler(
                    servicer.AddObjectToTrack,
                    request_deserializer=models_dot_graph__models__pb2.ObjectsOfInterestRequest.FromString,
                    response_serializer=models_dot_graph__models__pb2.ObjectOfInterestTrackingJob.SerializeToString,
            ),
            'RemoveObjectFromTrack': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveObjectFromTrack,
                    request_deserializer=models_dot_graph__models__pb2.ObjectsOfInterestRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'StopTrackingByIncident': grpc.unary_unary_rpc_method_handler(
                    servicer.StopTrackingByIncident,
                    request_deserializer=models_dot_graph__models__pb2.Incident.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'VerifyMatchingObject': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyMatchingObject,
                    request_deserializer=models_dot_graph__models__pb2.MatchPrediction.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'FoundMatchedObject': grpc.unary_unary_rpc_method_handler(
                    servicer.FoundMatchedObject,
                    request_deserializer=models_dot_graph__models__pb2.MatchPrediction.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListUnconfirmedMatchedPredictions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUnconfirmedMatchedPredictions,
                    request_deserializer=models_dot_graph__models__pb2.UnConfirmedPredictionRequest.FromString,
                    response_serializer=models_dot_graph__models__pb2.MatchPredictionList.SerializeToString,
            ),
            'GetMatchPrediction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMatchPrediction,
                    request_deserializer=models_dot_graph__models__pb2.MatchPrediction.FromString,
                    response_serializer=models_dot_graph__models__pb2.MatchPrediction.SerializeToString,
            ),
            'GetConfirmedMatches': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfirmedMatches,
                    request_deserializer=models_dot_graph__models__pb2.Incident.FromString,
                    response_serializer=models_dot_graph__models__pb2.Incident.SerializeToString,
            ),
            'Inference': grpc.unary_unary_rpc_method_handler(
                    servicer.Inference,
                    request_deserializer=api_dot_tracking__service__pb2.InferenceRequest.FromString,
                    response_serializer=models_dot_ai__models__pb2.InferenceFrame.SerializeToString,
            ),
            'CreateTrackingIncident': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTrackingIncident,
                    request_deserializer=models_dot_ai__models__pb2.InferenceFrame.FromString,
                    response_serializer=models_dot_graph__models__pb2.Incident.SerializeToString,
            ),
            'GetTrackingJobIncidents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrackingJobIncidents,
                    request_deserializer=models_dot_graph__models__pb2.ObjectOfInterestTrackingJob.FromString,
                    response_serializer=models_dot_graph__models__pb2.IncidentList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.TrackingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TrackingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddObjectToTrack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/AddObjectToTrack',
            models_dot_graph__models__pb2.ObjectsOfInterestRequest.SerializeToString,
            models_dot_graph__models__pb2.ObjectOfInterestTrackingJob.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveObjectFromTrack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/RemoveObjectFromTrack',
            models_dot_graph__models__pb2.ObjectsOfInterestRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopTrackingByIncident(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/StopTrackingByIncident',
            models_dot_graph__models__pb2.Incident.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyMatchingObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/VerifyMatchingObject',
            models_dot_graph__models__pb2.MatchPrediction.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FoundMatchedObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/FoundMatchedObject',
            models_dot_graph__models__pb2.MatchPrediction.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUnconfirmedMatchedPredictions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/ListUnconfirmedMatchedPredictions',
            models_dot_graph__models__pb2.UnConfirmedPredictionRequest.SerializeToString,
            models_dot_graph__models__pb2.MatchPredictionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMatchPrediction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/GetMatchPrediction',
            models_dot_graph__models__pb2.MatchPrediction.SerializeToString,
            models_dot_graph__models__pb2.MatchPrediction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConfirmedMatches(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/GetConfirmedMatches',
            models_dot_graph__models__pb2.Incident.SerializeToString,
            models_dot_graph__models__pb2.Incident.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Inference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/Inference',
            api_dot_tracking__service__pb2.InferenceRequest.SerializeToString,
            models_dot_ai__models__pb2.InferenceFrame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTrackingIncident(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/CreateTrackingIncident',
            models_dot_ai__models__pb2.InferenceFrame.SerializeToString,
            models_dot_graph__models__pb2.Incident.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTrackingJobIncidents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.TrackingService/GetTrackingJobIncidents',
            models_dot_graph__models__pb2.ObjectOfInterestTrackingJob.SerializeToString,
            models_dot_graph__models__pb2.IncidentList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
