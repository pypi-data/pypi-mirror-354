-- ============================================================================
-- Table: testfoundry_tb_input_field_mapping
-- Purpose:
--   Defines how to generate or resolve fields inside composite input types dynamically.
--   Supports:
--     - Random values
--     - FK resolutions with dependencies
--     - Optional nested types
--     - Linked field generation via generator groups
--     - Group leader control for coherent random generation
--
-- ============================================================================
CREATE TABLE IF NOT EXISTS testfoundry_tb_input_field_mapping (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    pk_input_field UUID DEFAULT gen_random_uuid() NOT NULL,
    input_type TEXT NOT NULL,                  -- Name of the composite input type (e.g., 'public_address_input')
    field_name TEXT NOT NULL,                   -- Name of the field inside the type (e.g., 'postal_code')

    generator_type TEXT NOT NULL,               -- 'random', 'resolve_fk', or 'nested'

    fk_mapping_key TEXT,                        -- FK mapping name for 'resolve_fk' types
    fk_dependency_fields TEXT[],                -- Array of extra fields needed for FK resolution

    nested_type TEXT,                            -- (optional) Composite type name if 'nested'

    random_function TEXT,                        -- (optional) Specific random generator function

    required BOOLEAN DEFAULT TRUE,               -- Is the field required to be populated?

    generator_group TEXT,                        -- (optional) Group name for linked fields that must be generated together

    group_leader BOOLEAN DEFAULT FALSE,          -- (optional) TRUE if this field is the leader that triggers group generation

    group_dependency_fields TEXT[],

    field_description TEXT,                      -- (optional) Free text documentation

    PRIMARY KEY (input_type, field_name)
);
