# VERL GRPO VLM training config on Geometry3K dataset.
#
# Requirements:
#   - Set up SkyPilot GCP: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html#setup
#   - Log into WandB (`wandb login`) or disable `enable_wandb`
#   - Log into HF: `huggingface-cli login`
#
# Usage:
#   oumi launch up -c configs/examples/grpo_verl_geometry3k/gcp_job.yaml --cluster grpo-verl-vlm-geom3k
#
# See Also:
#   - Documentation: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html
#   - Config class: oumi.core.configs.JobConfig
#   - Config source: https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/job_config.py
#   - Other job configs: configs/**/*job.yaml

name: grpo-verl-vlm-geom3k

resources:
  cloud: gcp
  accelerators: "A100-80GB:4"
  use_spot: false

working_dir: .

file_mounts:
  ~/.netrc: ~/.netrc # WandB credentials
  ~/.cache/huggingface/token: ~/.cache/huggingface/token # HF credentials

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: verl-vlm-geom3k.grpo
  # https://pytorch.org/docs/stable/notes/cuda.html#optimizing-memory-usage-with-pytorch-cuda-alloc-conf
  PYTORCH_CUDA_ALLOC_CONF: "garbage_collection_threshold:0.8,max_split_size_mb:128"

setup: |
  set -e
  pip install uv && uv pip install oumi[gpu] huggingface_hub[hf_xet] mathruler
  pip install -U flash-attn --no-build-isolation

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x
  oumi train \
      -c configs/examples/grpo_verl_geometry3k/train.yaml \
      --training.run_name "${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
