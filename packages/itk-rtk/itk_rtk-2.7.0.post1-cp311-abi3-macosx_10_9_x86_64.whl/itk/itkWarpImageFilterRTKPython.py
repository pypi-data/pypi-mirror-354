# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkWarpImageFilterRTKPython
else:
    import _itkWarpImageFilterRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkInterpolateImageFunctionPython
import itk.itkContinuousIndexPython
import itk.itkImageFunctionBasePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkWarpImageFilterID2ID2ICVD22_New():
    return itkWarpImageFilterID2ID2ICVD22.New()

class itkWarpImageFilterID2ID2ICVD22(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkWarpImageFilterID2ID2ICVD22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWarpImageFilterID2ID2ICVD22_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWarpImageFilterID2ID2ICVD22_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_Clone(self)

    def SetDisplacementField(self, _arg):
        r"""
        SetDisplacementField(self, _arg)

        Parameters
        ----------
        _arg: itkImageCVD22 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetDisplacementField(self, _arg)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageCVD22"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetDisplacementField(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID2D *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID2D"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID2D
        GetInterpolator(self) -> itkInterpolateImageFunctionID2D
        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetInterpolator(self, *args)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD2"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD2"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD22"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputDirection(self)

    def SetOutputParametersFromImage(self, image):
        r"""
        SetOutputParametersFromImage(self, image)

        Parameters
        ----------
        image: itkImageBase2 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputParametersFromImage(self, image)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex2"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputStartIndex(self)

    def SetOutputSize(self, _arg):
        r"""
        SetOutputSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputSize(self, _arg)

    def GetOutputSize(self):
        r"""GetOutputSize(self) -> itkSize2"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputSize(self)

    def SetEdgePaddingValue(self, _arg):
        r"""
        SetEdgePaddingValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetEdgePaddingValue(self, _arg)

    def GetEdgePaddingValue(self):
        r"""GetEdgePaddingValue(self) -> double"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetEdgePaddingValue(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GenerateInputRequestedRegion(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        r"""AfterThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_AfterThreadedGenerateData(self)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterID2ID2ICVD22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWarpImageFilterID2ID2ICVD22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID2ID2ICVD22

        Create a new object of the class itkWarpImageFilterID2ID2ICVD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID2ID2ICVD22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID2ID2ICVD22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterID2ID2ICVD22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterID2ID2ICVD22 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_swigregister(itkWarpImageFilterID2ID2ICVD22)

def itkWarpImageFilterID3ID3ICVD33_New():
    return itkWarpImageFilterID3ID3ICVD33.New()

class itkWarpImageFilterID3ID3ICVD33(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkWarpImageFilterID3ID3ICVD33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWarpImageFilterID3ID3ICVD33_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWarpImageFilterID3ID3ICVD33_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_Clone(self)

    def SetDisplacementField(self, _arg):
        r"""
        SetDisplacementField(self, _arg)

        Parameters
        ----------
        _arg: itkImageCVD33 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetDisplacementField(self, _arg)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageCVD33"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetDisplacementField(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID3D *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID3D"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID3D
        GetInterpolator(self) -> itkInterpolateImageFunctionID3D
        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetInterpolator(self, *args)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD3"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD3"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD33"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputDirection(self)

    def SetOutputParametersFromImage(self, image):
        r"""
        SetOutputParametersFromImage(self, image)

        Parameters
        ----------
        image: itkImageBase3 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputParametersFromImage(self, image)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex3"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputStartIndex(self)

    def SetOutputSize(self, _arg):
        r"""
        SetOutputSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputSize(self, _arg)

    def GetOutputSize(self):
        r"""GetOutputSize(self) -> itkSize3"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputSize(self)

    def SetEdgePaddingValue(self, _arg):
        r"""
        SetEdgePaddingValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetEdgePaddingValue(self, _arg)

    def GetEdgePaddingValue(self):
        r"""GetEdgePaddingValue(self) -> double"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetEdgePaddingValue(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GenerateInputRequestedRegion(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        r"""AfterThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_AfterThreadedGenerateData(self)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterID3ID3ICVD33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWarpImageFilterID3ID3ICVD33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID3ID3ICVD33

        Create a new object of the class itkWarpImageFilterID3ID3ICVD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID3ID3ICVD33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID3ID3ICVD33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterID3ID3ICVD33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterID3ID3ICVD33 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_swigregister(itkWarpImageFilterID3ID3ICVD33)

def itkWarpImageFilterID4ID4ICVD44_New():
    return itkWarpImageFilterID4ID4ICVD44.New()

class itkWarpImageFilterID4ID4ICVD44(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkWarpImageFilterID4ID4ICVD44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWarpImageFilterID4ID4ICVD44_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWarpImageFilterID4ID4ICVD44_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_Clone(self)

    def SetDisplacementField(self, _arg):
        r"""
        SetDisplacementField(self, _arg)

        Parameters
        ----------
        _arg: itkImageCVD44 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SetDisplacementField(self, _arg)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageCVD44"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GetDisplacementField(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID4D *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID4D"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID4D
        GetInterpolator(self) -> itkInterpolateImageFunctionID4D
        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GetInterpolator(self, *args)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD4"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD4"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD44"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GetOutputDirection(self)

    def SetOutputParametersFromImage(self, image):
        r"""
        SetOutputParametersFromImage(self, image)

        Parameters
        ----------
        image: itkImageBase4 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SetOutputParametersFromImage(self, image)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex4"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GetOutputStartIndex(self)

    def SetOutputSize(self, _arg):
        r"""
        SetOutputSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SetOutputSize(self, _arg)

    def GetOutputSize(self):
        r"""GetOutputSize(self) -> itkSize4"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GetOutputSize(self)

    def SetEdgePaddingValue(self, _arg):
        r"""
        SetEdgePaddingValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SetEdgePaddingValue(self, _arg)

    def GetEdgePaddingValue(self):
        r"""GetEdgePaddingValue(self) -> double"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GetEdgePaddingValue(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_GenerateInputRequestedRegion(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        r"""AfterThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_AfterThreadedGenerateData(self)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterID4ID4ICVD44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWarpImageFilterID4ID4ICVD44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID4ID4ICVD44

        Create a new object of the class itkWarpImageFilterID4ID4ICVD44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID4ID4ICVD44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID4ID4ICVD44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterID4ID4ICVD44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterID4ID4ICVD44 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterID4ID4ICVD44_swigregister(itkWarpImageFilterID4ID4ICVD44)

def itkWarpImageFilterIF2IF2ICVF22_New():
    return itkWarpImageFilterIF2IF2ICVF22.New()

class itkWarpImageFilterIF2IF2ICVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkWarpImageFilterIF2IF2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWarpImageFilterIF2IF2ICVF22_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWarpImageFilterIF2IF2ICVF22_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_Clone(self)

    def SetDisplacementField(self, _arg):
        r"""
        SetDisplacementField(self, _arg)

        Parameters
        ----------
        _arg: itkImageCVF22 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetDisplacementField(self, _arg)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageCVF22"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetDisplacementField(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF2D *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetInterpolator(self, *args)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD2"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD2"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD22"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputDirection(self)

    def SetOutputParametersFromImage(self, image):
        r"""
        SetOutputParametersFromImage(self, image)

        Parameters
        ----------
        image: itkImageBase2 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputParametersFromImage(self, image)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex2"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputStartIndex(self)

    def SetOutputSize(self, _arg):
        r"""
        SetOutputSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputSize(self, _arg)

    def GetOutputSize(self):
        r"""GetOutputSize(self) -> itkSize2"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputSize(self)

    def SetEdgePaddingValue(self, _arg):
        r"""
        SetEdgePaddingValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetEdgePaddingValue(self, _arg)

    def GetEdgePaddingValue(self):
        r"""GetEdgePaddingValue(self) -> float"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetEdgePaddingValue(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GenerateInputRequestedRegion(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        r"""AfterThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_AfterThreadedGenerateData(self)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterIF2IF2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWarpImageFilterIF2IF2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF2IF2ICVF22

        Create a new object of the class itkWarpImageFilterIF2IF2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF2IF2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF2IF2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterIF2IF2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterIF2IF2ICVF22 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_swigregister(itkWarpImageFilterIF2IF2ICVF22)

def itkWarpImageFilterIF3IF3ICVF33_New():
    return itkWarpImageFilterIF3IF3ICVF33.New()

class itkWarpImageFilterIF3IF3ICVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkWarpImageFilterIF3IF3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWarpImageFilterIF3IF3ICVF33_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWarpImageFilterIF3IF3ICVF33_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_Clone(self)

    def SetDisplacementField(self, _arg):
        r"""
        SetDisplacementField(self, _arg)

        Parameters
        ----------
        _arg: itkImageCVF33 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetDisplacementField(self, _arg)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageCVF33"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetDisplacementField(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF3D *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetInterpolator(self, *args)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD3"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD3"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD33"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputDirection(self)

    def SetOutputParametersFromImage(self, image):
        r"""
        SetOutputParametersFromImage(self, image)

        Parameters
        ----------
        image: itkImageBase3 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputParametersFromImage(self, image)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex3"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputStartIndex(self)

    def SetOutputSize(self, _arg):
        r"""
        SetOutputSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputSize(self, _arg)

    def GetOutputSize(self):
        r"""GetOutputSize(self) -> itkSize3"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputSize(self)

    def SetEdgePaddingValue(self, _arg):
        r"""
        SetEdgePaddingValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetEdgePaddingValue(self, _arg)

    def GetEdgePaddingValue(self):
        r"""GetEdgePaddingValue(self) -> float"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetEdgePaddingValue(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GenerateInputRequestedRegion(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        r"""AfterThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_AfterThreadedGenerateData(self)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterIF3IF3ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWarpImageFilterIF3IF3ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF3IF3ICVF33

        Create a new object of the class itkWarpImageFilterIF3IF3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF3IF3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF3IF3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterIF3IF3ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterIF3IF3ICVF33 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_swigregister(itkWarpImageFilterIF3IF3ICVF33)

def itkWarpImageFilterIF4IF4ICVF44_New():
    return itkWarpImageFilterIF4IF4ICVF44.New()

class itkWarpImageFilterIF4IF4ICVF44(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkWarpImageFilterIF4IF4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWarpImageFilterIF4IF4ICVF44_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWarpImageFilterIF4IF4ICVF44_Pointer"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_Clone(self)

    def SetDisplacementField(self, _arg):
        r"""
        SetDisplacementField(self, _arg)

        Parameters
        ----------
        _arg: itkImageCVF44 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SetDisplacementField(self, _arg)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageCVF44"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GetDisplacementField(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF4D *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF4D"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF4D
        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GetInterpolator(self, *args)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD4"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD4"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD44"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GetOutputDirection(self)

    def SetOutputParametersFromImage(self, image):
        r"""
        SetOutputParametersFromImage(self, image)

        Parameters
        ----------
        image: itkImageBase4 const *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SetOutputParametersFromImage(self, image)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex4"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GetOutputStartIndex(self)

    def SetOutputSize(self, _arg):
        r"""
        SetOutputSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SetOutputSize(self, _arg)

    def GetOutputSize(self):
        r"""GetOutputSize(self) -> itkSize4"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GetOutputSize(self)

    def SetEdgePaddingValue(self, _arg):
        r"""
        SetEdgePaddingValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SetEdgePaddingValue(self, _arg)

    def GetEdgePaddingValue(self):
        r"""GetEdgePaddingValue(self) -> float"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GetEdgePaddingValue(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_GenerateInputRequestedRegion(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        r"""AfterThreadedGenerateData(self)"""
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_AfterThreadedGenerateData(self)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterIF4IF4ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWarpImageFilterIF4IF4ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF4IF4ICVF44

        Create a new object of the class itkWarpImageFilterIF4IF4ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF4IF4ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF4IF4ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterIF4IF4ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterIF4IF4ICVF44 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterIF4IF4ICVF44_swigregister(itkWarpImageFilterIF4IF4ICVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def warp_image_filter(*args: itkt.ImageLike,  displacement_field: itkt.Image=..., interpolator: itkt.InterpolateImageFunction=..., output_spacing: Sequence[float]=..., output_origin: Sequence[float]=..., output_direction=..., output_parameters_from_image: itkt.ImageBase=..., output_start_index: Sequence[int]=..., output_size: Sequence[int]=..., edge_padding_value: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for WarpImageFilter"""
    import itk

    kwarg_typehints = { 'displacement_field':displacement_field,'interpolator':interpolator,'output_spacing':output_spacing,'output_origin':output_origin,'output_direction':output_direction,'output_parameters_from_image':output_parameters_from_image,'output_start_index':output_start_index,'output_size':output_size,'edge_padding_value':edge_padding_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.WarpImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def warp_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.WarpImageFilter
    warp_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    warp_image_filter.__doc__ = filter_object.__doc__



