# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkFFTProjectionsConvolutionImageFilterPython
else:
    import _rtkFFTProjectionsConvolutionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorRTKPython
import itk.itkFixedArrayRTKPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
class rtkFFTProjectionsConvolutionImageFilterID3ID3D(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ rtkFFTProjectionsConvolutionImageFilterID3ID3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetGreatestPrimeFactor(self):
        r"""GetGreatestPrimeFactor(self) -> int"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3D_GetGreatestPrimeFactor(self)

    def SetGreatestPrimeFactor(self, _arg):
        r"""
        SetGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3D_SetGreatestPrimeFactor(self, _arg)

    def GetTruncationCorrection(self):
        r"""GetTruncationCorrection(self) -> double"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3D_GetTruncationCorrection(self)

    def SetTruncationCorrection(self, _arg):
        r"""
        SetTruncationCorrection(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3D_SetTruncationCorrection(self, _arg)

    def GetZeroPadFactors(self):
        r"""GetZeroPadFactors(self) -> itkVectori2"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3D_GetZeroPadFactors(self)

    def SetZeroPadFactors(self, _arg):
        r"""
        SetZeroPadFactors(self, _arg)

        Parameters
        ----------
        _arg: itkVectori2

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3D_SetZeroPadFactors(self, _arg)
    ImageDimensionCheck = _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3D_ImageDimensionCheck
    
    __swig_destroy__ = _rtkFFTProjectionsConvolutionImageFilterPython.delete_rtkFFTProjectionsConvolutionImageFilterID3ID3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFFTProjectionsConvolutionImageFilterID3ID3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3D_cast(obj)

# Register rtkFFTProjectionsConvolutionImageFilterID3ID3D in _rtkFFTProjectionsConvolutionImageFilterPython:
_rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3D_swigregister(rtkFFTProjectionsConvolutionImageFilterID3ID3D)
class rtkFFTProjectionsConvolutionImageFilterID3ID3F(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ rtkFFTProjectionsConvolutionImageFilterID3ID3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetGreatestPrimeFactor(self):
        r"""GetGreatestPrimeFactor(self) -> int"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3F_GetGreatestPrimeFactor(self)

    def SetGreatestPrimeFactor(self, _arg):
        r"""
        SetGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3F_SetGreatestPrimeFactor(self, _arg)

    def GetTruncationCorrection(self):
        r"""GetTruncationCorrection(self) -> double"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3F_GetTruncationCorrection(self)

    def SetTruncationCorrection(self, _arg):
        r"""
        SetTruncationCorrection(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3F_SetTruncationCorrection(self, _arg)

    def GetZeroPadFactors(self):
        r"""GetZeroPadFactors(self) -> itkVectori2"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3F_GetZeroPadFactors(self)

    def SetZeroPadFactors(self, _arg):
        r"""
        SetZeroPadFactors(self, _arg)

        Parameters
        ----------
        _arg: itkVectori2

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3F_SetZeroPadFactors(self, _arg)
    ImageDimensionCheck = _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3F_ImageDimensionCheck
    
    __swig_destroy__ = _rtkFFTProjectionsConvolutionImageFilterPython.delete_rtkFFTProjectionsConvolutionImageFilterID3ID3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFFTProjectionsConvolutionImageFilterID3ID3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3F_cast(obj)

# Register rtkFFTProjectionsConvolutionImageFilterID3ID3F in _rtkFFTProjectionsConvolutionImageFilterPython:
_rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterID3ID3F_swigregister(rtkFFTProjectionsConvolutionImageFilterID3ID3F)
class rtkFFTProjectionsConvolutionImageFilterIF3IF3D(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ rtkFFTProjectionsConvolutionImageFilterIF3IF3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetGreatestPrimeFactor(self):
        r"""GetGreatestPrimeFactor(self) -> int"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3D_GetGreatestPrimeFactor(self)

    def SetGreatestPrimeFactor(self, _arg):
        r"""
        SetGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3D_SetGreatestPrimeFactor(self, _arg)

    def GetTruncationCorrection(self):
        r"""GetTruncationCorrection(self) -> double"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3D_GetTruncationCorrection(self)

    def SetTruncationCorrection(self, _arg):
        r"""
        SetTruncationCorrection(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3D_SetTruncationCorrection(self, _arg)

    def GetZeroPadFactors(self):
        r"""GetZeroPadFactors(self) -> itkVectori2"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3D_GetZeroPadFactors(self)

    def SetZeroPadFactors(self, _arg):
        r"""
        SetZeroPadFactors(self, _arg)

        Parameters
        ----------
        _arg: itkVectori2

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3D_SetZeroPadFactors(self, _arg)
    ImageDimensionCheck = _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3D_ImageDimensionCheck
    
    __swig_destroy__ = _rtkFFTProjectionsConvolutionImageFilterPython.delete_rtkFFTProjectionsConvolutionImageFilterIF3IF3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFFTProjectionsConvolutionImageFilterIF3IF3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3D_cast(obj)

# Register rtkFFTProjectionsConvolutionImageFilterIF3IF3D in _rtkFFTProjectionsConvolutionImageFilterPython:
_rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3D_swigregister(rtkFFTProjectionsConvolutionImageFilterIF3IF3D)
class rtkFFTProjectionsConvolutionImageFilterIF3IF3F(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ rtkFFTProjectionsConvolutionImageFilterIF3IF3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetGreatestPrimeFactor(self):
        r"""GetGreatestPrimeFactor(self) -> int"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3F_GetGreatestPrimeFactor(self)

    def SetGreatestPrimeFactor(self, _arg):
        r"""
        SetGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3F_SetGreatestPrimeFactor(self, _arg)

    def GetTruncationCorrection(self):
        r"""GetTruncationCorrection(self) -> double"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3F_GetTruncationCorrection(self)

    def SetTruncationCorrection(self, _arg):
        r"""
        SetTruncationCorrection(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3F_SetTruncationCorrection(self, _arg)

    def GetZeroPadFactors(self):
        r"""GetZeroPadFactors(self) -> itkVectori2"""
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3F_GetZeroPadFactors(self)

    def SetZeroPadFactors(self, _arg):
        r"""
        SetZeroPadFactors(self, _arg)

        Parameters
        ----------
        _arg: itkVectori2

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3F_SetZeroPadFactors(self, _arg)
    ImageDimensionCheck = _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3F_ImageDimensionCheck
    
    __swig_destroy__ = _rtkFFTProjectionsConvolutionImageFilterPython.delete_rtkFFTProjectionsConvolutionImageFilterIF3IF3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFFTProjectionsConvolutionImageFilterIF3IF3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3F_cast(obj)

# Register rtkFFTProjectionsConvolutionImageFilterIF3IF3F in _rtkFFTProjectionsConvolutionImageFilterPython:
_rtkFFTProjectionsConvolutionImageFilterPython.rtkFFTProjectionsConvolutionImageFilterIF3IF3F_swigregister(rtkFFTProjectionsConvolutionImageFilterIF3IF3F)

