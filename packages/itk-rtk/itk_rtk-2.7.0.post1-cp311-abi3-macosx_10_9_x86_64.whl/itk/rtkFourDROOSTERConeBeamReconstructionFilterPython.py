# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkFourDROOSTERConeBeamReconstructionFilterPython
else:
    import _rtkFourDROOSTERConeBeamReconstructionFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.rtkBackProjectionImageFilterPython
import itk.rtkThreeDCircularProjectionGeometryPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.rtkProjectionGeometryPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterBPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkImageRegionRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkArray2DPython
import itk.rtkForwardProjectionImageFilterPython
import itk.itkInPlaceImageFilterRTKPython
import itk.itkImageToImageFilterRTKPython
import itk.itkImageSourceRTKPython

def rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_New():
    return rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass.New()

class rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ForwardProjectionType_FP_JOSEPH = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_ForwardProjectionType_FP_JOSEPH
    
    ForwardProjectionType_FP_CUDARAYCAST = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_ForwardProjectionType_FP_CUDARAYCAST
    
    ForwardProjectionType_FP_JOSEPHATTENUATED = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_ForwardProjectionType_FP_JOSEPHATTENUATED
    
    ForwardProjectionType_FP_ZENG = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_ForwardProjectionType_FP_ZENG
    
    BackProjectionType_BP_VOXELBASED = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_VOXELBASED
    
    BackProjectionType_BP_JOSEPH = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_JOSEPH
    
    BackProjectionType_BP_CUDAVOXELBASED = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_CUDAVOXELBASED
    
    BackProjectionType_BP_CUDARAYCAST = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_CUDARAYCAST
    
    BackProjectionType_BP_JOSEPHATTENUATED = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_JOSEPHATTENUATED
    
    BackProjectionType_BP_ZENG = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_ZENG
    

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_Clone(self)

    def SetForwardProjectionFilter(self, fwtype):
        r"""
        SetForwardProjectionFilter(self, fwtype)

        Parameters
        ----------
        fwtype: enum rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass::ForwardProjectionType

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_SetForwardProjectionFilter(self, fwtype)

    def GetForwardProjectionFilter(self):
        r"""GetForwardProjectionFilter(self) -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass::ForwardProjectionType"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_GetForwardProjectionFilter(self)

    def SetBackProjectionFilter(self, bptype):
        r"""
        SetBackProjectionFilter(self, bptype)

        Parameters
        ----------
        bptype: enum rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass::BackProjectionType

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_SetBackProjectionFilter(self, bptype)

    def GetBackProjectionFilter(self):
        r"""GetBackProjectionFilter(self) -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass::BackProjectionType"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_GetBackProjectionFilter(self)

    def SetAttenuationMap(self, attenuationMap):
        r"""
        SetAttenuationMap(self, attenuationMap)

        Parameters
        ----------
        attenuationMap: itkImageD3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_SetAttenuationMap(self, attenuationMap)

    def GetAttenuationMap(self):
        r"""GetAttenuationMap(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_GetAttenuationMap(self)

    def SetInferiorClipImage(self, inferiorClipImage):
        r"""
        SetInferiorClipImage(self, inferiorClipImage)

        Parameters
        ----------
        inferiorClipImage: itkImageD3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_SetInferiorClipImage(self, inferiorClipImage)

    def GetInferiorClipImage(self):
        r"""GetInferiorClipImage(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_GetInferiorClipImage(self)

    def SetSuperiorClipImage(self, superiorClipImage):
        r"""
        SetSuperiorClipImage(self, superiorClipImage)

        Parameters
        ----------
        superiorClipImage: itkImageD3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_SetSuperiorClipImage(self, superiorClipImage)

    def GetSuperiorClipImage(self):
        r"""GetSuperiorClipImage(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_GetSuperiorClipImage(self)

    def GetSigmaZero(self):
        r"""GetSigmaZero(self) -> double"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_GetSigmaZero(self)

    def SetSigmaZero(self, _arg):
        r"""
        SetSigmaZero(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_SetSigmaZero(self, _arg)

    def GetAlphaPSF(self):
        r"""GetAlphaPSF(self) -> double"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_GetAlphaPSF(self)

    def SetAlphaPSF(self, _arg):
        r"""
        SetAlphaPSF(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_SetAlphaPSF(self, _arg)

    def GetStepSize(self):
        r"""GetStepSize(self) -> double"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_GetStepSize(self)

    def SetStepSize(self, _arg):
        r"""
        SetStepSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_SetStepSize(self, _arg)
    __swig_destroy__ = _rtkFourDROOSTERConeBeamReconstructionFilterPython.delete_rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass

        Create a new object of the class rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass in _rtkFourDROOSTERConeBeamReconstructionFilterPython:
_rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass_swigregister(rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass)

def rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_New():
    return rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass.New()

class rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ForwardProjectionType_FP_JOSEPH = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_ForwardProjectionType_FP_JOSEPH
    
    ForwardProjectionType_FP_CUDARAYCAST = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_ForwardProjectionType_FP_CUDARAYCAST
    
    ForwardProjectionType_FP_JOSEPHATTENUATED = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_ForwardProjectionType_FP_JOSEPHATTENUATED
    
    ForwardProjectionType_FP_ZENG = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_ForwardProjectionType_FP_ZENG
    
    BackProjectionType_BP_VOXELBASED = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_VOXELBASED
    
    BackProjectionType_BP_JOSEPH = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_JOSEPH
    
    BackProjectionType_BP_CUDAVOXELBASED = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_CUDAVOXELBASED
    
    BackProjectionType_BP_CUDARAYCAST = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_CUDARAYCAST
    
    BackProjectionType_BP_JOSEPHATTENUATED = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_JOSEPHATTENUATED
    
    BackProjectionType_BP_ZENG = _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_ZENG
    

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_Clone(self)

    def SetForwardProjectionFilter(self, fwtype):
        r"""
        SetForwardProjectionFilter(self, fwtype)

        Parameters
        ----------
        fwtype: enum rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass::ForwardProjectionType

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_SetForwardProjectionFilter(self, fwtype)

    def GetForwardProjectionFilter(self):
        r"""GetForwardProjectionFilter(self) -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass::ForwardProjectionType"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_GetForwardProjectionFilter(self)

    def SetBackProjectionFilter(self, bptype):
        r"""
        SetBackProjectionFilter(self, bptype)

        Parameters
        ----------
        bptype: enum rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass::BackProjectionType

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_SetBackProjectionFilter(self, bptype)

    def GetBackProjectionFilter(self):
        r"""GetBackProjectionFilter(self) -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass::BackProjectionType"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_GetBackProjectionFilter(self)

    def SetAttenuationMap(self, attenuationMap):
        r"""
        SetAttenuationMap(self, attenuationMap)

        Parameters
        ----------
        attenuationMap: itkImageF3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_SetAttenuationMap(self, attenuationMap)

    def GetAttenuationMap(self):
        r"""GetAttenuationMap(self) -> itkImageF3_ConstPointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_GetAttenuationMap(self)

    def SetInferiorClipImage(self, inferiorClipImage):
        r"""
        SetInferiorClipImage(self, inferiorClipImage)

        Parameters
        ----------
        inferiorClipImage: itkImageD3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_SetInferiorClipImage(self, inferiorClipImage)

    def GetInferiorClipImage(self):
        r"""GetInferiorClipImage(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_GetInferiorClipImage(self)

    def SetSuperiorClipImage(self, superiorClipImage):
        r"""
        SetSuperiorClipImage(self, superiorClipImage)

        Parameters
        ----------
        superiorClipImage: itkImageD3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_SetSuperiorClipImage(self, superiorClipImage)

    def GetSuperiorClipImage(self):
        r"""GetSuperiorClipImage(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_GetSuperiorClipImage(self)

    def GetSigmaZero(self):
        r"""GetSigmaZero(self) -> double"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_GetSigmaZero(self)

    def SetSigmaZero(self, _arg):
        r"""
        SetSigmaZero(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_SetSigmaZero(self, _arg)

    def GetAlphaPSF(self):
        r"""GetAlphaPSF(self) -> double"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_GetAlphaPSF(self)

    def SetAlphaPSF(self, _arg):
        r"""
        SetAlphaPSF(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_SetAlphaPSF(self, _arg)

    def GetStepSize(self):
        r"""GetStepSize(self) -> double"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_GetStepSize(self)

    def SetStepSize(self, _arg):
        r"""
        SetStepSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_SetStepSize(self, _arg)
    __swig_destroy__ = _rtkFourDROOSTERConeBeamReconstructionFilterPython.delete_rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass

        Create a new object of the class rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass in _rtkFourDROOSTERConeBeamReconstructionFilterPython:
_rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass_swigregister(rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass)

def rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_New():
    return rtkFourDROOSTERConeBeamReconstructionFilterID4ID3.New()

class rtkFourDROOSTERConeBeamReconstructionFilterID4ID3(rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Superclass):
    r"""Proxy of C++ rtkFourDROOSTERConeBeamReconstructionFilterID4ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_Clone(self)

    def SetInputVolumeSeries(self, VolumeSeries):
        r"""
        SetInputVolumeSeries(self, VolumeSeries)

        Parameters
        ----------
        VolumeSeries: itkImageD4 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetInputVolumeSeries(self, VolumeSeries)

    def GetInputVolumeSeries(self):
        r"""GetInputVolumeSeries(self) -> itkImageD4_ConstPointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetInputVolumeSeries(self)

    def SetInputProjectionStack(self, Projection):
        r"""
        SetInputProjectionStack(self, Projection)

        Parameters
        ----------
        Projection: itkImageD3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetInputProjectionStack(self, Projection)

    def GetInputProjectionStack(self):
        r"""GetInputProjectionStack(self) -> itkImageD3_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetInputProjectionStack(self)

    def SetMotionMask(self, mask):
        r"""
        SetMotionMask(self, mask)

        Parameters
        ----------
        mask: itkImageD3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetMotionMask(self, mask)

    def GetMotionMask(self):
        r"""GetMotionMask(self) -> itkImageD3_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetMotionMask(self)

    def SetDisplacementField(self, DVFs):
        r"""
        SetDisplacementField(self, DVFs)

        Parameters
        ----------
        DVFs: itkImageCVD34 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetDisplacementField(self, DVFs)

    def SetInverseDisplacementField(self, DVFs):
        r"""
        SetInverseDisplacementField(self, DVFs)

        Parameters
        ----------
        DVFs: itkImageCVD34 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetInverseDisplacementField(self, DVFs)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageCVD34_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetDisplacementField(self)

    def GetInverseDisplacementField(self):
        r"""GetInverseDisplacementField(self) -> itkImageCVD34_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetInverseDisplacementField(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkArray2DF const

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetWeights(self, _arg)

    def SetDisableDisplacedDetectorFilter(self, _arg):
        r"""
        SetDisableDisplacedDetectorFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetDisableDisplacedDetectorFilter(self, _arg)

    def GetDisableDisplacedDetectorFilter(self):
        r"""GetDisableDisplacedDetectorFilter(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetDisableDisplacedDetectorFilter(self)

    def SetPerformPositivity(self, _arg):
        r"""
        SetPerformPositivity(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetPerformPositivity(self, _arg)

    def GetPerformPositivity(self):
        r"""GetPerformPositivity(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetPerformPositivity(self)

    def SetPerformMotionMask(self, _arg):
        r"""
        SetPerformMotionMask(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetPerformMotionMask(self, _arg)

    def GetPerformMotionMask(self):
        r"""GetPerformMotionMask(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetPerformMotionMask(self)

    def SetPerformTVSpatialDenoising(self, _arg):
        r"""
        SetPerformTVSpatialDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetPerformTVSpatialDenoising(self, _arg)

    def GetPerformTVSpatialDenoising(self):
        r"""GetPerformTVSpatialDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetPerformTVSpatialDenoising(self)

    def SetPerformWaveletsSpatialDenoising(self, _arg):
        r"""
        SetPerformWaveletsSpatialDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetPerformWaveletsSpatialDenoising(self, _arg)

    def GetPerformWaveletsSpatialDenoising(self):
        r"""GetPerformWaveletsSpatialDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetPerformWaveletsSpatialDenoising(self)

    def SetPerformWarping(self, _arg):
        r"""
        SetPerformWarping(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetPerformWarping(self, _arg)

    def GetPerformWarping(self):
        r"""GetPerformWarping(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetPerformWarping(self)

    def SetPerformTVTemporalDenoising(self, _arg):
        r"""
        SetPerformTVTemporalDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetPerformTVTemporalDenoising(self, _arg)

    def GetPerformTVTemporalDenoising(self):
        r"""GetPerformTVTemporalDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetPerformTVTemporalDenoising(self)

    def SetPerformL0TemporalDenoising(self, _arg):
        r"""
        SetPerformL0TemporalDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetPerformL0TemporalDenoising(self, _arg)

    def GetPerformL0TemporalDenoising(self):
        r"""GetPerformL0TemporalDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetPerformL0TemporalDenoising(self)

    def SetPerformTNVDenoising(self, _arg):
        r"""
        SetPerformTNVDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetPerformTNVDenoising(self, _arg)

    def GetPerformTNVDenoising(self):
        r"""GetPerformTNVDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetPerformTNVDenoising(self)

    def SetComputeInverseWarpingByConjugateGradient(self, _arg):
        r"""
        SetComputeInverseWarpingByConjugateGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetComputeInverseWarpingByConjugateGradient(self, _arg)

    def GetComputeInverseWarpingByConjugateGradient(self):
        r"""GetComputeInverseWarpingByConjugateGradient(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetComputeInverseWarpingByConjugateGradient(self)

    def SetUseNearestNeighborInterpolationInWarping(self, _arg):
        r"""
        SetUseNearestNeighborInterpolationInWarping(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetUseNearestNeighborInterpolationInWarping(self, _arg)

    def GetUseNearestNeighborInterpolationInWarping(self):
        r"""GetUseNearestNeighborInterpolationInWarping(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetUseNearestNeighborInterpolationInWarping(self)

    def GetCudaConjugateGradient(self):
        r"""GetCudaConjugateGradient(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetCudaConjugateGradient(self)

    def SetCudaConjugateGradient(self, _arg):
        r"""
        SetCudaConjugateGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetCudaConjugateGradient(self, _arg)

    def SetUseCudaCyclicDeformation(self, _arg):
        r"""
        SetUseCudaCyclicDeformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetUseCudaCyclicDeformation(self, _arg)

    def GetUseCudaCyclicDeformation(self):
        r"""GetUseCudaCyclicDeformation(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetUseCudaCyclicDeformation(self)

    def SetGammaTVSpace(self, _arg):
        r"""
        SetGammaTVSpace(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetGammaTVSpace(self, _arg)

    def GetGammaTVSpace(self):
        r"""GetGammaTVSpace(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetGammaTVSpace(self)

    def SetGammaTVTime(self, _arg):
        r"""
        SetGammaTVTime(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetGammaTVTime(self, _arg)

    def GetGammaTVTime(self):
        r"""GetGammaTVTime(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetGammaTVTime(self)

    def SetGammaTNV(self, _arg):
        r"""
        SetGammaTNV(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetGammaTNV(self, _arg)

    def GetGammaTNV(self):
        r"""GetGammaTNV(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetGammaTNV(self)

    def SetLambdaL0Time(self, _arg):
        r"""
        SetLambdaL0Time(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetLambdaL0Time(self, _arg)

    def GetLambdaL0Time(self):
        r"""GetLambdaL0Time(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetLambdaL0Time(self)

    def SetSoftThresholdWavelets(self, _arg):
        r"""
        SetSoftThresholdWavelets(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetSoftThresholdWavelets(self, _arg)

    def GetSoftThresholdWavelets(self):
        r"""GetSoftThresholdWavelets(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetSoftThresholdWavelets(self)

    def SetPhaseShift(self, _arg):
        r"""
        SetPhaseShift(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetPhaseShift(self, _arg)

    def GetPhaseShift(self):
        r"""GetPhaseShift(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetPhaseShift(self)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetNumberOfLevels(self)

    def SetNumberOfLevels(self, _arg):
        r"""
        SetNumberOfLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetNumberOfLevels(self, _arg)

    def GetOrder(self):
        r"""GetOrder(self) -> unsigned int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetOrder(self)

    def SetOrder(self, _arg):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetOrder(self, _arg)

    def SetMainLoop_iterations(self, _arg):
        r"""
        SetMainLoop_iterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetMainLoop_iterations(self, _arg)

    def GetMainLoop_iterations(self):
        r"""GetMainLoop_iterations(self) -> int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetMainLoop_iterations(self)

    def SetCG_iterations(self, _arg):
        r"""
        SetCG_iterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetCG_iterations(self, _arg)

    def GetCG_iterations(self):
        r"""GetCG_iterations(self) -> int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetCG_iterations(self)

    def SetTV_iterations(self, _arg):
        r"""
        SetTV_iterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetTV_iterations(self, _arg)

    def GetTV_iterations(self):
        r"""GetTV_iterations(self) -> int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetTV_iterations(self)

    def SetL0_iterations(self, _arg):
        r"""
        SetL0_iterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetL0_iterations(self, _arg)

    def GetL0_iterations(self):
        r"""GetL0_iterations(self) -> int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetL0_iterations(self)

    def SetGeometry(self, _arg):
        r"""
        SetGeometry(self, _arg)

        Parameters
        ----------
        _arg: rtkThreeDCircularProjectionGeometry const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetGeometry(self, _arg)

    def GetGeometry(self):
        r"""GetGeometry(self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_GetGeometry(self)

    def SetSignal(self, signal):
        r"""
        SetSignal(self, signal)

        Parameters
        ----------
        signal: std::vector< double,std::allocator< double > > const

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_SetSignal(self, signal)
    __swig_destroy__ = _rtkFourDROOSTERConeBeamReconstructionFilterPython.delete_rtkFourDROOSTERConeBeamReconstructionFilterID4ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkFourDROOSTERConeBeamReconstructionFilterID4ID3

        Create a new object of the class rtkFourDROOSTERConeBeamReconstructionFilterID4ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFourDROOSTERConeBeamReconstructionFilterID4ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkFourDROOSTERConeBeamReconstructionFilterID4ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkFourDROOSTERConeBeamReconstructionFilterID4ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkFourDROOSTERConeBeamReconstructionFilterID4ID3 in _rtkFourDROOSTERConeBeamReconstructionFilterPython:
_rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterID4ID3_swigregister(rtkFourDROOSTERConeBeamReconstructionFilterID4ID3)

def rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_New():
    return rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3.New()

class rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3(rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Superclass):
    r"""Proxy of C++ rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_Clone(self)

    def SetInputVolumeSeries(self, VolumeSeries):
        r"""
        SetInputVolumeSeries(self, VolumeSeries)

        Parameters
        ----------
        VolumeSeries: itkImageF4 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetInputVolumeSeries(self, VolumeSeries)

    def GetInputVolumeSeries(self):
        r"""GetInputVolumeSeries(self) -> itkImageF4_ConstPointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetInputVolumeSeries(self)

    def SetInputProjectionStack(self, Projection):
        r"""
        SetInputProjectionStack(self, Projection)

        Parameters
        ----------
        Projection: itkImageF3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetInputProjectionStack(self, Projection)

    def GetInputProjectionStack(self):
        r"""GetInputProjectionStack(self) -> itkImageF3_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetInputProjectionStack(self)

    def SetMotionMask(self, mask):
        r"""
        SetMotionMask(self, mask)

        Parameters
        ----------
        mask: itkImageF3 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetMotionMask(self, mask)

    def GetMotionMask(self):
        r"""GetMotionMask(self) -> itkImageF3_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetMotionMask(self)

    def SetDisplacementField(self, DVFs):
        r"""
        SetDisplacementField(self, DVFs)

        Parameters
        ----------
        DVFs: itkImageCVF34 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetDisplacementField(self, DVFs)

    def SetInverseDisplacementField(self, DVFs):
        r"""
        SetInverseDisplacementField(self, DVFs)

        Parameters
        ----------
        DVFs: itkImageCVF34 const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetInverseDisplacementField(self, DVFs)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageCVF34_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetDisplacementField(self)

    def GetInverseDisplacementField(self):
        r"""GetInverseDisplacementField(self) -> itkImageCVF34_Pointer"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetInverseDisplacementField(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkArray2DF const

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetWeights(self, _arg)

    def SetDisableDisplacedDetectorFilter(self, _arg):
        r"""
        SetDisableDisplacedDetectorFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetDisableDisplacedDetectorFilter(self, _arg)

    def GetDisableDisplacedDetectorFilter(self):
        r"""GetDisableDisplacedDetectorFilter(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetDisableDisplacedDetectorFilter(self)

    def SetPerformPositivity(self, _arg):
        r"""
        SetPerformPositivity(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetPerformPositivity(self, _arg)

    def GetPerformPositivity(self):
        r"""GetPerformPositivity(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetPerformPositivity(self)

    def SetPerformMotionMask(self, _arg):
        r"""
        SetPerformMotionMask(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetPerformMotionMask(self, _arg)

    def GetPerformMotionMask(self):
        r"""GetPerformMotionMask(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetPerformMotionMask(self)

    def SetPerformTVSpatialDenoising(self, _arg):
        r"""
        SetPerformTVSpatialDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetPerformTVSpatialDenoising(self, _arg)

    def GetPerformTVSpatialDenoising(self):
        r"""GetPerformTVSpatialDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetPerformTVSpatialDenoising(self)

    def SetPerformWaveletsSpatialDenoising(self, _arg):
        r"""
        SetPerformWaveletsSpatialDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetPerformWaveletsSpatialDenoising(self, _arg)

    def GetPerformWaveletsSpatialDenoising(self):
        r"""GetPerformWaveletsSpatialDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetPerformWaveletsSpatialDenoising(self)

    def SetPerformWarping(self, _arg):
        r"""
        SetPerformWarping(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetPerformWarping(self, _arg)

    def GetPerformWarping(self):
        r"""GetPerformWarping(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetPerformWarping(self)

    def SetPerformTVTemporalDenoising(self, _arg):
        r"""
        SetPerformTVTemporalDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetPerformTVTemporalDenoising(self, _arg)

    def GetPerformTVTemporalDenoising(self):
        r"""GetPerformTVTemporalDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetPerformTVTemporalDenoising(self)

    def SetPerformL0TemporalDenoising(self, _arg):
        r"""
        SetPerformL0TemporalDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetPerformL0TemporalDenoising(self, _arg)

    def GetPerformL0TemporalDenoising(self):
        r"""GetPerformL0TemporalDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetPerformL0TemporalDenoising(self)

    def SetPerformTNVDenoising(self, _arg):
        r"""
        SetPerformTNVDenoising(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetPerformTNVDenoising(self, _arg)

    def GetPerformTNVDenoising(self):
        r"""GetPerformTNVDenoising(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetPerformTNVDenoising(self)

    def SetComputeInverseWarpingByConjugateGradient(self, _arg):
        r"""
        SetComputeInverseWarpingByConjugateGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetComputeInverseWarpingByConjugateGradient(self, _arg)

    def GetComputeInverseWarpingByConjugateGradient(self):
        r"""GetComputeInverseWarpingByConjugateGradient(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetComputeInverseWarpingByConjugateGradient(self)

    def SetUseNearestNeighborInterpolationInWarping(self, _arg):
        r"""
        SetUseNearestNeighborInterpolationInWarping(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetUseNearestNeighborInterpolationInWarping(self, _arg)

    def GetUseNearestNeighborInterpolationInWarping(self):
        r"""GetUseNearestNeighborInterpolationInWarping(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetUseNearestNeighborInterpolationInWarping(self)

    def GetCudaConjugateGradient(self):
        r"""GetCudaConjugateGradient(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetCudaConjugateGradient(self)

    def SetCudaConjugateGradient(self, _arg):
        r"""
        SetCudaConjugateGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetCudaConjugateGradient(self, _arg)

    def SetUseCudaCyclicDeformation(self, _arg):
        r"""
        SetUseCudaCyclicDeformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetUseCudaCyclicDeformation(self, _arg)

    def GetUseCudaCyclicDeformation(self):
        r"""GetUseCudaCyclicDeformation(self) -> bool"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetUseCudaCyclicDeformation(self)

    def SetGammaTVSpace(self, _arg):
        r"""
        SetGammaTVSpace(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetGammaTVSpace(self, _arg)

    def GetGammaTVSpace(self):
        r"""GetGammaTVSpace(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetGammaTVSpace(self)

    def SetGammaTVTime(self, _arg):
        r"""
        SetGammaTVTime(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetGammaTVTime(self, _arg)

    def GetGammaTVTime(self):
        r"""GetGammaTVTime(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetGammaTVTime(self)

    def SetGammaTNV(self, _arg):
        r"""
        SetGammaTNV(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetGammaTNV(self, _arg)

    def GetGammaTNV(self):
        r"""GetGammaTNV(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetGammaTNV(self)

    def SetLambdaL0Time(self, _arg):
        r"""
        SetLambdaL0Time(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetLambdaL0Time(self, _arg)

    def GetLambdaL0Time(self):
        r"""GetLambdaL0Time(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetLambdaL0Time(self)

    def SetSoftThresholdWavelets(self, _arg):
        r"""
        SetSoftThresholdWavelets(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetSoftThresholdWavelets(self, _arg)

    def GetSoftThresholdWavelets(self):
        r"""GetSoftThresholdWavelets(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetSoftThresholdWavelets(self)

    def SetPhaseShift(self, _arg):
        r"""
        SetPhaseShift(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetPhaseShift(self, _arg)

    def GetPhaseShift(self):
        r"""GetPhaseShift(self) -> float"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetPhaseShift(self)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetNumberOfLevels(self)

    def SetNumberOfLevels(self, _arg):
        r"""
        SetNumberOfLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetNumberOfLevels(self, _arg)

    def GetOrder(self):
        r"""GetOrder(self) -> unsigned int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetOrder(self)

    def SetOrder(self, _arg):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetOrder(self, _arg)

    def SetMainLoop_iterations(self, _arg):
        r"""
        SetMainLoop_iterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetMainLoop_iterations(self, _arg)

    def GetMainLoop_iterations(self):
        r"""GetMainLoop_iterations(self) -> int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetMainLoop_iterations(self)

    def SetCG_iterations(self, _arg):
        r"""
        SetCG_iterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetCG_iterations(self, _arg)

    def GetCG_iterations(self):
        r"""GetCG_iterations(self) -> int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetCG_iterations(self)

    def SetTV_iterations(self, _arg):
        r"""
        SetTV_iterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetTV_iterations(self, _arg)

    def GetTV_iterations(self):
        r"""GetTV_iterations(self) -> int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetTV_iterations(self)

    def SetL0_iterations(self, _arg):
        r"""
        SetL0_iterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetL0_iterations(self, _arg)

    def GetL0_iterations(self):
        r"""GetL0_iterations(self) -> int"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetL0_iterations(self)

    def SetGeometry(self, _arg):
        r"""
        SetGeometry(self, _arg)

        Parameters
        ----------
        _arg: rtkThreeDCircularProjectionGeometry const *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetGeometry(self, _arg)

    def GetGeometry(self):
        r"""GetGeometry(self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_GetGeometry(self)

    def SetSignal(self, signal):
        r"""
        SetSignal(self, signal)

        Parameters
        ----------
        signal: std::vector< double,std::allocator< double > > const

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_SetSignal(self, signal)
    __swig_destroy__ = _rtkFourDROOSTERConeBeamReconstructionFilterPython.delete_rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3

        Create a new object of the class rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3 in _rtkFourDROOSTERConeBeamReconstructionFilterPython:
_rtkFourDROOSTERConeBeamReconstructionFilterPython.rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3_swigregister(rtkFourDROOSTERConeBeamReconstructionFilterIF4IF3)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def four_drooster_cone_beam_reconstruction_filter(*args: itkt.ImageLike,  input_volume_series: itkt.Image=..., input_projection_stack: itkt.Image=..., motion_mask: itkt.Image=..., displacement_field: itkt.Image=..., inverse_displacement_field: itkt.Image=..., weights=..., disable_displaced_detector_filter: bool=..., perform_positivity: bool=..., perform_motion_mask: bool=..., perform_tv_spatial_denoising: bool=..., perform_wavelets_spatial_denoising: bool=..., perform_warping: bool=..., perform_tv_temporal_denoising: bool=..., perform_l0_temporal_denoising: bool=..., perform_tnv_denoising: bool=..., compute_inverse_warping_by_conjugate_gradient: bool=..., use_nearest_neighbor_interpolation_in_warping: bool=..., cuda_conjugate_gradient: bool=..., use_cuda_cyclic_deformation: bool=..., gamma_tv_space: float=..., gamma_tv_time: float=..., gamma_tnv: float=..., lambda_l0_time: float=..., soft_threshold_wavelets: float=..., phase_shift: float=..., number_of_levels: int=..., order: int=..., main_loop_iterations: int=..., cg_iterations: int=..., tv_iterations: int=..., l0_iterations: int=..., geometry=..., signal: Sequence[float]=..., forward_projection_filter=..., back_projection_filter=..., attenuation_map: itkt.Image=..., inferior_clip_image: itkt.Image=..., superior_clip_image: itkt.Image=..., sigma_zero: float=..., alpha_psf: float=..., step_size: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for FourDROOSTERConeBeamReconstructionFilter"""
    import itk

    kwarg_typehints = { 'input_volume_series':input_volume_series,'input_projection_stack':input_projection_stack,'motion_mask':motion_mask,'displacement_field':displacement_field,'inverse_displacement_field':inverse_displacement_field,'weights':weights,'disable_displaced_detector_filter':disable_displaced_detector_filter,'perform_positivity':perform_positivity,'perform_motion_mask':perform_motion_mask,'perform_tv_spatial_denoising':perform_tv_spatial_denoising,'perform_wavelets_spatial_denoising':perform_wavelets_spatial_denoising,'perform_warping':perform_warping,'perform_tv_temporal_denoising':perform_tv_temporal_denoising,'perform_l0_temporal_denoising':perform_l0_temporal_denoising,'perform_tnv_denoising':perform_tnv_denoising,'compute_inverse_warping_by_conjugate_gradient':compute_inverse_warping_by_conjugate_gradient,'use_nearest_neighbor_interpolation_in_warping':use_nearest_neighbor_interpolation_in_warping,'cuda_conjugate_gradient':cuda_conjugate_gradient,'use_cuda_cyclic_deformation':use_cuda_cyclic_deformation,'gamma_tv_space':gamma_tv_space,'gamma_tv_time':gamma_tv_time,'gamma_tnv':gamma_tnv,'lambda_l0_time':lambda_l0_time,'soft_threshold_wavelets':soft_threshold_wavelets,'phase_shift':phase_shift,'number_of_levels':number_of_levels,'order':order,'main_loop_iterations':main_loop_iterations,'cg_iterations':cg_iterations,'tv_iterations':tv_iterations,'l0_iterations':l0_iterations,'geometry':geometry,'signal':signal,'forward_projection_filter':forward_projection_filter,'back_projection_filter':back_projection_filter,'attenuation_map':attenuation_map,'inferior_clip_image':inferior_clip_image,'superior_clip_image':superior_clip_image,'sigma_zero':sigma_zero,'alpha_psf':alpha_psf,'step_size':step_size }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.FourDROOSTERConeBeamReconstructionFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def four_drooster_cone_beam_reconstruction_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.FourDROOSTERConeBeamReconstructionFilter
    four_drooster_cone_beam_reconstruction_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    four_drooster_cone_beam_reconstruction_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def iterative_cone_beam_reconstruction_filter(*args: itkt.ImageLike,  forward_projection_filter=..., back_projection_filter=..., attenuation_map: itkt.Image=..., inferior_clip_image: itkt.Image=..., superior_clip_image: itkt.Image=..., sigma_zero: float=..., alpha_psf: float=..., step_size: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for IterativeConeBeamReconstructionFilter"""
    import itk

    kwarg_typehints = { 'forward_projection_filter':forward_projection_filter,'back_projection_filter':back_projection_filter,'attenuation_map':attenuation_map,'inferior_clip_image':inferior_clip_image,'superior_clip_image':superior_clip_image,'sigma_zero':sigma_zero,'alpha_psf':alpha_psf,'step_size':step_size }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.IterativeConeBeamReconstructionFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def iterative_cone_beam_reconstruction_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.IterativeConeBeamReconstructionFilter
    iterative_cone_beam_reconstruction_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    iterative_cone_beam_reconstruction_filter.__doc__ = filter_object.__doc__



