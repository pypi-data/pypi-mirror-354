# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkDenoisingBPDQImageFilterPython
else:
    import _rtkDenoisingBPDQImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterBPython

def rtkDenoisingBPDQImageFilterID2ICVF22_New():
    return rtkDenoisingBPDQImageFilterID2ICVF22.New()

class rtkDenoisingBPDQImageFilterID2ICVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ rtkDenoisingBPDQImageFilterID2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkDenoisingBPDQImageFilterID2ICVF22_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkDenoisingBPDQImageFilterID2ICVF22_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID2ICVF22_Clone(self)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> int"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID2ICVF22_GetNumberOfIterations(self)

    def SetNumberOfIterations(self, _arg):
        r"""
        SetNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID2ICVF22_SetNumberOfIterations(self, _arg)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID2ICVF22_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID2ICVF22_GetGamma(self)
    __swig_destroy__ = _rtkDenoisingBPDQImageFilterPython.delete_rtkDenoisingBPDQImageFilterID2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkDenoisingBPDQImageFilterID2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkDenoisingBPDQImageFilterID2ICVF22

        Create a new object of the class rtkDenoisingBPDQImageFilterID2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDenoisingBPDQImageFilterID2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkDenoisingBPDQImageFilterID2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkDenoisingBPDQImageFilterID2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkDenoisingBPDQImageFilterID2ICVF22 in _rtkDenoisingBPDQImageFilterPython:
_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID2ICVF22_swigregister(rtkDenoisingBPDQImageFilterID2ICVF22)

def rtkDenoisingBPDQImageFilterID3ICVF33_New():
    return rtkDenoisingBPDQImageFilterID3ICVF33.New()

class rtkDenoisingBPDQImageFilterID3ICVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ rtkDenoisingBPDQImageFilterID3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkDenoisingBPDQImageFilterID3ICVF33_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID3ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkDenoisingBPDQImageFilterID3ICVF33_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID3ICVF33_Clone(self)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> int"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID3ICVF33_GetNumberOfIterations(self)

    def SetNumberOfIterations(self, _arg):
        r"""
        SetNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID3ICVF33_SetNumberOfIterations(self, _arg)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID3ICVF33_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID3ICVF33_GetGamma(self)
    __swig_destroy__ = _rtkDenoisingBPDQImageFilterPython.delete_rtkDenoisingBPDQImageFilterID3ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkDenoisingBPDQImageFilterID3ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID3ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkDenoisingBPDQImageFilterID3ICVF33

        Create a new object of the class rtkDenoisingBPDQImageFilterID3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDenoisingBPDQImageFilterID3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkDenoisingBPDQImageFilterID3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkDenoisingBPDQImageFilterID3ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkDenoisingBPDQImageFilterID3ICVF33 in _rtkDenoisingBPDQImageFilterPython:
_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID3ICVF33_swigregister(rtkDenoisingBPDQImageFilterID3ICVF33)

def rtkDenoisingBPDQImageFilterID4ICVF44_New():
    return rtkDenoisingBPDQImageFilterID4ICVF44.New()

class rtkDenoisingBPDQImageFilterID4ICVF44(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ rtkDenoisingBPDQImageFilterID4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkDenoisingBPDQImageFilterID4ICVF44_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID4ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkDenoisingBPDQImageFilterID4ICVF44_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID4ICVF44_Clone(self)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> int"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID4ICVF44_GetNumberOfIterations(self)

    def SetNumberOfIterations(self, _arg):
        r"""
        SetNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID4ICVF44_SetNumberOfIterations(self, _arg)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID4ICVF44_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID4ICVF44_GetGamma(self)
    __swig_destroy__ = _rtkDenoisingBPDQImageFilterPython.delete_rtkDenoisingBPDQImageFilterID4ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkDenoisingBPDQImageFilterID4ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID4ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkDenoisingBPDQImageFilterID4ICVF44

        Create a new object of the class rtkDenoisingBPDQImageFilterID4ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDenoisingBPDQImageFilterID4ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkDenoisingBPDQImageFilterID4ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkDenoisingBPDQImageFilterID4ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkDenoisingBPDQImageFilterID4ICVF44 in _rtkDenoisingBPDQImageFilterPython:
_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterID4ICVF44_swigregister(rtkDenoisingBPDQImageFilterID4ICVF44)

def rtkDenoisingBPDQImageFilterIF2ICVF22_New():
    return rtkDenoisingBPDQImageFilterIF2ICVF22.New()

class rtkDenoisingBPDQImageFilterIF2ICVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ rtkDenoisingBPDQImageFilterIF2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkDenoisingBPDQImageFilterIF2ICVF22_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkDenoisingBPDQImageFilterIF2ICVF22_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_Clone(self)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> int"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_GetNumberOfIterations(self)

    def SetNumberOfIterations(self, _arg):
        r"""
        SetNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_SetNumberOfIterations(self, _arg)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_GetGamma(self)
    __swig_destroy__ = _rtkDenoisingBPDQImageFilterPython.delete_rtkDenoisingBPDQImageFilterIF2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkDenoisingBPDQImageFilterIF2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkDenoisingBPDQImageFilterIF2ICVF22

        Create a new object of the class rtkDenoisingBPDQImageFilterIF2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDenoisingBPDQImageFilterIF2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkDenoisingBPDQImageFilterIF2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkDenoisingBPDQImageFilterIF2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkDenoisingBPDQImageFilterIF2ICVF22 in _rtkDenoisingBPDQImageFilterPython:
_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_swigregister(rtkDenoisingBPDQImageFilterIF2ICVF22)

def rtkDenoisingBPDQImageFilterIF3ICVF33_New():
    return rtkDenoisingBPDQImageFilterIF3ICVF33.New()

class rtkDenoisingBPDQImageFilterIF3ICVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ rtkDenoisingBPDQImageFilterIF3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkDenoisingBPDQImageFilterIF3ICVF33_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkDenoisingBPDQImageFilterIF3ICVF33_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_Clone(self)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> int"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_GetNumberOfIterations(self)

    def SetNumberOfIterations(self, _arg):
        r"""
        SetNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_SetNumberOfIterations(self, _arg)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_GetGamma(self)
    __swig_destroy__ = _rtkDenoisingBPDQImageFilterPython.delete_rtkDenoisingBPDQImageFilterIF3ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkDenoisingBPDQImageFilterIF3ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkDenoisingBPDQImageFilterIF3ICVF33

        Create a new object of the class rtkDenoisingBPDQImageFilterIF3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDenoisingBPDQImageFilterIF3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkDenoisingBPDQImageFilterIF3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkDenoisingBPDQImageFilterIF3ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkDenoisingBPDQImageFilterIF3ICVF33 in _rtkDenoisingBPDQImageFilterPython:
_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_swigregister(rtkDenoisingBPDQImageFilterIF3ICVF33)

def rtkDenoisingBPDQImageFilterIF4ICVF44_New():
    return rtkDenoisingBPDQImageFilterIF4ICVF44.New()

class rtkDenoisingBPDQImageFilterIF4ICVF44(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ rtkDenoisingBPDQImageFilterIF4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkDenoisingBPDQImageFilterIF4ICVF44_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF4ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkDenoisingBPDQImageFilterIF4ICVF44_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF4ICVF44_Clone(self)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> int"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF4ICVF44_GetNumberOfIterations(self)

    def SetNumberOfIterations(self, _arg):
        r"""
        SetNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF4ICVF44_SetNumberOfIterations(self, _arg)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF4ICVF44_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF4ICVF44_GetGamma(self)
    __swig_destroy__ = _rtkDenoisingBPDQImageFilterPython.delete_rtkDenoisingBPDQImageFilterIF4ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkDenoisingBPDQImageFilterIF4ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF4ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkDenoisingBPDQImageFilterIF4ICVF44

        Create a new object of the class rtkDenoisingBPDQImageFilterIF4ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDenoisingBPDQImageFilterIF4ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkDenoisingBPDQImageFilterIF4ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkDenoisingBPDQImageFilterIF4ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkDenoisingBPDQImageFilterIF4ICVF44 in _rtkDenoisingBPDQImageFilterPython:
_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF4ICVF44_swigregister(rtkDenoisingBPDQImageFilterIF4ICVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def denoising_bpdq_image_filter(*args: itkt.ImageLike,  number_of_iterations: int=..., gamma: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for DenoisingBPDQImageFilter"""
    import itk

    kwarg_typehints = { 'number_of_iterations':number_of_iterations,'gamma':gamma }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.DenoisingBPDQImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def denoising_bpdq_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.DenoisingBPDQImageFilter
    denoising_bpdq_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    denoising_bpdq_image_filter.__doc__ = filter_object.__doc__



