# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkSpectralForwardModelImageFilterPython
else:
    import _rtkSpectralForwardModelImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkRGBAPixelPython
import itk.itkIndexPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkVectorImageRTKPython
import itk.itkInPlaceImageFilterRTKPython
import itk.itkImageToImageFilterRTKPython
import itk.itkImageRegionRTKPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkPointRTKPython
import itk.itkImageSourceRTKPython
import itk.itkImageToImageFilterAPython

def rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_New():
    return rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2.New()

class rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVID3VID3):
    r"""Proxy of C++ rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_Pointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_Pointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_Clone(self)

    def SetInputIncidentSpectrum(self, *args):
        r"""
        SetInputIncidentSpectrum(self, IncidentSpectrum)

        Parameters
        ----------
        IncidentSpectrum: itkImageF3 const *

        SetInputIncidentSpectrum(self, IncidentSpectrum)

        Parameters
        ----------
        IncidentSpectrum: itkVectorImageF2 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetInputIncidentSpectrum(self, *args)

    def SetInputSecondIncidentSpectrum(self, *args):
        r"""
        SetInputSecondIncidentSpectrum(self, SecondIncidentSpectrum)

        Parameters
        ----------
        SecondIncidentSpectrum: itkImageF3 const *

        SetInputSecondIncidentSpectrum(self, SecondIncidentSpectrum)

        Parameters
        ----------
        SecondIncidentSpectrum: itkVectorImageF2 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetInputSecondIncidentSpectrum(self, *args)

    def GetInputIncidentSpectrum(self):
        r"""GetInputIncidentSpectrum(self) -> itkImageF3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetInputIncidentSpectrum(self)

    def GetInputSecondIncidentSpectrum(self):
        r"""GetInputSecondIncidentSpectrum(self) -> itkImageF3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetInputSecondIncidentSpectrum(self)

    def SetInputDecomposedProjections(self, DecomposedProjections):
        r"""
        SetInputDecomposedProjections(self, DecomposedProjections)

        Parameters
        ----------
        DecomposedProjections: itkImageBase3 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetInputDecomposedProjections(self, DecomposedProjections)

    def GetInputDecomposedProjections(self):
        r"""GetInputDecomposedProjections(self) -> itkVectorImageD3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetInputDecomposedProjections(self)

    def SetInputMeasuredProjections(self, MeasuredProjections):
        r"""
        SetInputMeasuredProjections(self, MeasuredProjections)

        Parameters
        ----------
        MeasuredProjections: itkImageBase3 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetInputMeasuredProjections(self, MeasuredProjections)

    def GetInputMeasuredProjections(self):
        r"""GetInputMeasuredProjections(self) -> itkVectorImageD3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetInputMeasuredProjections(self)

    def SetDetectorResponse(self, DetectorResponse):
        r"""
        SetDetectorResponse(self, DetectorResponse)

        Parameters
        ----------
        DetectorResponse: itkImageF2 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetDetectorResponse(self, DetectorResponse)

    def GetDetectorResponse(self):
        r"""GetDetectorResponse(self) -> itkImageF2_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetDetectorResponse(self)

    def SetMaterialAttenuations(self, MaterialAttenuations):
        r"""
        SetMaterialAttenuations(self, MaterialAttenuations)

        Parameters
        ----------
        MaterialAttenuations: itkImageF2 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetMaterialAttenuations(self, MaterialAttenuations)

    def GetMaterialAttenuations(self):
        r"""GetMaterialAttenuations(self) -> itkImageF2_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetMaterialAttenuations(self)

    def GetOutputCramerRaoLowerBound(self):
        r"""GetOutputCramerRaoLowerBound(self) -> itkVectorImageD3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetOutputCramerRaoLowerBound(self)

    def GetOutputVariances(self):
        r"""GetOutputVariances(self) -> itkVectorImageD3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetOutputVariances(self)

    def SetThresholds(self, _arg):
        r"""
        SetThresholds(self, _arg)

        Parameters
        ----------
        _arg: itkVariableLengthVectorD

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetThresholds(self, _arg)

    def GetThresholds(self):
        r"""GetThresholds(self) -> itkVariableLengthVectorD"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetThresholds(self)

    def SetNumberOfSpectralBins(self, _arg):
        r"""
        SetNumberOfSpectralBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetNumberOfSpectralBins(self, _arg)

    def GetNumberOfSpectralBins(self):
        r"""GetNumberOfSpectralBins(self) -> unsigned int"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetNumberOfSpectralBins(self)

    def SetNumberOfMaterials(self, _arg):
        r"""
        SetNumberOfMaterials(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetNumberOfMaterials(self, _arg)

    def GetNumberOfMaterials(self):
        r"""GetNumberOfMaterials(self) -> unsigned int"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetNumberOfMaterials(self)

    def SetNumberOfEnergies(self, _arg):
        r"""
        SetNumberOfEnergies(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetNumberOfEnergies(self, _arg)

    def GetNumberOfEnergies(self):
        r"""GetNumberOfEnergies(self) -> unsigned int"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetNumberOfEnergies(self)

    def SetIsSpectralCT(self, _arg):
        r"""
        SetIsSpectralCT(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetIsSpectralCT(self, _arg)

    def GetIsSpectralCT(self):
        r"""GetIsSpectralCT(self) -> bool"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetIsSpectralCT(self)

    def SetComputeVariances(self, _arg):
        r"""
        SetComputeVariances(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetComputeVariances(self, _arg)

    def GetComputeVariances(self):
        r"""GetComputeVariances(self) -> bool"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetComputeVariances(self)

    def SetComputeCramerRaoLowerBound(self, _arg):
        r"""
        SetComputeCramerRaoLowerBound(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_SetComputeCramerRaoLowerBound(self, _arg)

    def GetComputeCramerRaoLowerBound(self):
        r"""GetComputeCramerRaoLowerBound(self) -> bool"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_GetComputeCramerRaoLowerBound(self)
    __swig_destroy__ = _rtkSpectralForwardModelImageFilterPython.delete_rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2

        Create a new object of the class rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2 in _rtkSpectralForwardModelImageFilterPython:
_rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2_swigregister(rtkSpectralForwardModelImageFilterVID3VID3IF3IF2IF2)

def rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_New():
    return rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2.New()

class rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3):
    r"""Proxy of C++ rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_Pointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_Pointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_Clone(self)

    def SetInputIncidentSpectrum(self, *args):
        r"""
        SetInputIncidentSpectrum(self, IncidentSpectrum)

        Parameters
        ----------
        IncidentSpectrum: itkImageF3 const *

        SetInputIncidentSpectrum(self, IncidentSpectrum)

        Parameters
        ----------
        IncidentSpectrum: itkVectorImageF2 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetInputIncidentSpectrum(self, *args)

    def SetInputSecondIncidentSpectrum(self, *args):
        r"""
        SetInputSecondIncidentSpectrum(self, SecondIncidentSpectrum)

        Parameters
        ----------
        SecondIncidentSpectrum: itkImageF3 const *

        SetInputSecondIncidentSpectrum(self, SecondIncidentSpectrum)

        Parameters
        ----------
        SecondIncidentSpectrum: itkVectorImageF2 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetInputSecondIncidentSpectrum(self, *args)

    def GetInputIncidentSpectrum(self):
        r"""GetInputIncidentSpectrum(self) -> itkImageF3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetInputIncidentSpectrum(self)

    def GetInputSecondIncidentSpectrum(self):
        r"""GetInputSecondIncidentSpectrum(self) -> itkImageF3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetInputSecondIncidentSpectrum(self)

    def SetInputDecomposedProjections(self, DecomposedProjections):
        r"""
        SetInputDecomposedProjections(self, DecomposedProjections)

        Parameters
        ----------
        DecomposedProjections: itkImageBase3 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetInputDecomposedProjections(self, DecomposedProjections)

    def GetInputDecomposedProjections(self):
        r"""GetInputDecomposedProjections(self) -> itkVectorImageF3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetInputDecomposedProjections(self)

    def SetInputMeasuredProjections(self, MeasuredProjections):
        r"""
        SetInputMeasuredProjections(self, MeasuredProjections)

        Parameters
        ----------
        MeasuredProjections: itkImageBase3 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetInputMeasuredProjections(self, MeasuredProjections)

    def GetInputMeasuredProjections(self):
        r"""GetInputMeasuredProjections(self) -> itkVectorImageF3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetInputMeasuredProjections(self)

    def SetDetectorResponse(self, DetectorResponse):
        r"""
        SetDetectorResponse(self, DetectorResponse)

        Parameters
        ----------
        DetectorResponse: itkImageF2 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetDetectorResponse(self, DetectorResponse)

    def GetDetectorResponse(self):
        r"""GetDetectorResponse(self) -> itkImageF2_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetDetectorResponse(self)

    def SetMaterialAttenuations(self, MaterialAttenuations):
        r"""
        SetMaterialAttenuations(self, MaterialAttenuations)

        Parameters
        ----------
        MaterialAttenuations: itkImageF2 const *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetMaterialAttenuations(self, MaterialAttenuations)

    def GetMaterialAttenuations(self):
        r"""GetMaterialAttenuations(self) -> itkImageF2_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetMaterialAttenuations(self)

    def GetOutputCramerRaoLowerBound(self):
        r"""GetOutputCramerRaoLowerBound(self) -> itkVectorImageF3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetOutputCramerRaoLowerBound(self)

    def GetOutputVariances(self):
        r"""GetOutputVariances(self) -> itkVectorImageF3_ConstPointer"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetOutputVariances(self)

    def SetThresholds(self, _arg):
        r"""
        SetThresholds(self, _arg)

        Parameters
        ----------
        _arg: itkVariableLengthVectorD

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetThresholds(self, _arg)

    def GetThresholds(self):
        r"""GetThresholds(self) -> itkVariableLengthVectorD"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetThresholds(self)

    def SetNumberOfSpectralBins(self, _arg):
        r"""
        SetNumberOfSpectralBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetNumberOfSpectralBins(self, _arg)

    def GetNumberOfSpectralBins(self):
        r"""GetNumberOfSpectralBins(self) -> unsigned int"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetNumberOfSpectralBins(self)

    def SetNumberOfMaterials(self, _arg):
        r"""
        SetNumberOfMaterials(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetNumberOfMaterials(self, _arg)

    def GetNumberOfMaterials(self):
        r"""GetNumberOfMaterials(self) -> unsigned int"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetNumberOfMaterials(self)

    def SetNumberOfEnergies(self, _arg):
        r"""
        SetNumberOfEnergies(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetNumberOfEnergies(self, _arg)

    def GetNumberOfEnergies(self):
        r"""GetNumberOfEnergies(self) -> unsigned int"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetNumberOfEnergies(self)

    def SetIsSpectralCT(self, _arg):
        r"""
        SetIsSpectralCT(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetIsSpectralCT(self, _arg)

    def GetIsSpectralCT(self):
        r"""GetIsSpectralCT(self) -> bool"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetIsSpectralCT(self)

    def SetComputeVariances(self, _arg):
        r"""
        SetComputeVariances(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetComputeVariances(self, _arg)

    def GetComputeVariances(self):
        r"""GetComputeVariances(self) -> bool"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetComputeVariances(self)

    def SetComputeCramerRaoLowerBound(self, _arg):
        r"""
        SetComputeCramerRaoLowerBound(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_SetComputeCramerRaoLowerBound(self, _arg)

    def GetComputeCramerRaoLowerBound(self):
        r"""GetComputeCramerRaoLowerBound(self) -> bool"""
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_GetComputeCramerRaoLowerBound(self)
    __swig_destroy__ = _rtkSpectralForwardModelImageFilterPython.delete_rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2

        Create a new object of the class rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2 in _rtkSpectralForwardModelImageFilterPython:
_rtkSpectralForwardModelImageFilterPython.rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2_swigregister(rtkSpectralForwardModelImageFilterVIF3VIF3IF3IF2IF2)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def spectral_forward_model_image_filter(*args: itkt.ImageLike,  input_incident_spectrum: Union[itkt.VectorImage, itkt.Image]=..., input_second_incident_spectrum: Union[itkt.VectorImage, itkt.Image]=..., input_decomposed_projections: itkt.ImageBase=..., input_measured_projections: itkt.ImageBase=..., detector_response: itkt.Image=..., material_attenuations: itkt.Image=..., thresholds=..., number_of_spectral_bins: int=..., number_of_materials: int=..., number_of_energies: int=..., is_spectral_ct: bool=..., compute_variances: bool=..., compute_cramer_rao_lower_bound: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SpectralForwardModelImageFilter"""
    import itk

    kwarg_typehints = { 'input_incident_spectrum':input_incident_spectrum,'input_second_incident_spectrum':input_second_incident_spectrum,'input_decomposed_projections':input_decomposed_projections,'input_measured_projections':input_measured_projections,'detector_response':detector_response,'material_attenuations':material_attenuations,'thresholds':thresholds,'number_of_spectral_bins':number_of_spectral_bins,'number_of_materials':number_of_materials,'number_of_energies':number_of_energies,'is_spectral_ct':is_spectral_ct,'compute_variances':compute_variances,'compute_cramer_rao_lower_bound':compute_cramer_rao_lower_bound }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SpectralForwardModelImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def spectral_forward_model_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.SpectralForwardModelImageFilter
    spectral_forward_model_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    spectral_forward_model_image_filter.__doc__ = filter_object.__doc__



