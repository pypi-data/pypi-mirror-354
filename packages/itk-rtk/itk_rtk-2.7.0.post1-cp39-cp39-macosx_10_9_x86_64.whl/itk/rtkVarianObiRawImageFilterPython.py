# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkVarianObiRawImageFilterPython
else:
    import _rtkVarianObiRawImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkCastImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkUnaryFunctorImageFilterIUI2ID2OAUID_New():
    return itkUnaryFunctorImageFilterIUI2ID2OAUID.New()

class itkUnaryFunctorImageFilterIUI2ID2OAUID(itk.itkCastImageFilterPython.itkCastImageFilterIUI2ID2_Superclass):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUI2ID2OAUID class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUI2ID2OAUID_Pointer"""
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2OAUID___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUI2ID2OAUID_Pointer"""
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2OAUID_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctionObiAttenuationUID
        GetFunctor(self) -> rtkFunctionObiAttenuationUID
        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2OAUID_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctionObiAttenuationUID const &

        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2OAUID_SetFunctor(self, functor)
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_itkUnaryFunctorImageFilterIUI2ID2OAUID

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUI2ID2OAUID

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2OAUID_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUI2ID2OAUID

        Create a new object of the class itkUnaryFunctorImageFilterIUI2ID2OAUID and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUI2ID2OAUID.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUI2ID2OAUID.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUI2ID2OAUID.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUI2ID2OAUID in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2OAUID_swigregister(itkUnaryFunctorImageFilterIUI2ID2OAUID)

def itkUnaryFunctorImageFilterIUI2IF2OAUIF_New():
    return itkUnaryFunctorImageFilterIUI2IF2OAUIF.New()

class itkUnaryFunctorImageFilterIUI2IF2OAUIF(itk.itkCastImageFilterPython.itkCastImageFilterIUI2IF2_Superclass):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUI2IF2OAUIF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUI2IF2OAUIF_Pointer"""
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2OAUIF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUI2IF2OAUIF_Pointer"""
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2OAUIF_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctionObiAttenuationUIF
        GetFunctor(self) -> rtkFunctionObiAttenuationUIF
        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2OAUIF_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctionObiAttenuationUIF const &

        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2OAUIF_SetFunctor(self, functor)
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_itkUnaryFunctorImageFilterIUI2IF2OAUIF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUI2IF2OAUIF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2OAUIF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUI2IF2OAUIF

        Create a new object of the class itkUnaryFunctorImageFilterIUI2IF2OAUIF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUI2IF2OAUIF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUI2IF2OAUIF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUI2IF2OAUIF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUI2IF2OAUIF in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2OAUIF_swigregister(itkUnaryFunctorImageFilterIUI2IF2OAUIF)

def itkUnaryFunctorImageFilterIUI3ID3OAUID_New():
    return itkUnaryFunctorImageFilterIUI3ID3OAUID.New()

class itkUnaryFunctorImageFilterIUI3ID3OAUID(itk.itkCastImageFilterPython.itkCastImageFilterIUI3ID3_Superclass):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUI3ID3OAUID class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUI3ID3OAUID_Pointer"""
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3OAUID___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUI3ID3OAUID_Pointer"""
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3OAUID_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctionObiAttenuationUID
        GetFunctor(self) -> rtkFunctionObiAttenuationUID
        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3OAUID_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctionObiAttenuationUID const &

        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3OAUID_SetFunctor(self, functor)
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_itkUnaryFunctorImageFilterIUI3ID3OAUID

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUI3ID3OAUID

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3OAUID_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUI3ID3OAUID

        Create a new object of the class itkUnaryFunctorImageFilterIUI3ID3OAUID and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUI3ID3OAUID.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUI3ID3OAUID.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUI3ID3OAUID.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUI3ID3OAUID in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3OAUID_swigregister(itkUnaryFunctorImageFilterIUI3ID3OAUID)

def itkUnaryFunctorImageFilterIUI3IF3OAUIF_New():
    return itkUnaryFunctorImageFilterIUI3IF3OAUIF.New()

class itkUnaryFunctorImageFilterIUI3IF3OAUIF(itk.itkCastImageFilterPython.itkCastImageFilterIUI3IF3_Superclass):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUI3IF3OAUIF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUI3IF3OAUIF_Pointer"""
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3OAUIF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUI3IF3OAUIF_Pointer"""
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3OAUIF_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctionObiAttenuationUIF
        GetFunctor(self) -> rtkFunctionObiAttenuationUIF
        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3OAUIF_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctionObiAttenuationUIF const &

        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3OAUIF_SetFunctor(self, functor)
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_itkUnaryFunctorImageFilterIUI3IF3OAUIF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUI3IF3OAUIF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3OAUIF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUI3IF3OAUIF

        Create a new object of the class itkUnaryFunctorImageFilterIUI3IF3OAUIF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUI3IF3OAUIF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUI3IF3OAUIF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUI3IF3OAUIF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUI3IF3OAUIF in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3OAUIF_swigregister(itkUnaryFunctorImageFilterIUI3IF3OAUIF)
class rtkFunctionObiAttenuationUID(object):
    r"""Proxy of C++ rtkFunctionObiAttenuationUID class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_rtkFunctionObiAttenuationUID

    def __ne__(self, arg0):
        r"""
        __ne__(self, arg0) -> bool

        Parameters
        ----------
        arg0: rtkFunctionObiAttenuationUID const &

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUID___ne__(self, arg0)

    def __eq__(self, other):
        r"""
        __eq__(self, other) -> bool

        Parameters
        ----------
        other: rtkFunctionObiAttenuationUID const &

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUID___eq__(self, other)

    def __call__(self, A):
        r"""
        __call__(self, A) -> double

        Parameters
        ----------
        A: unsigned int const &

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUID___call__(self, A)

    def SetI0(self, i0):
        r"""
        SetI0(self, i0)

        Parameters
        ----------
        i0: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUID_SetI0(self, i0)

    def SetIDark(self, idark):
        r"""
        SetIDark(self, idark)

        Parameters
        ----------
        idark: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUID_SetIDark(self, idark)

    def __init__(self, *args):
        r"""
        __init__(self) -> rtkFunctionObiAttenuationUID
        __init__(self, arg0) -> rtkFunctionObiAttenuationUID

        Parameters
        ----------
        arg0: rtkFunctionObiAttenuationUID const &

        """
        _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUID_swiginit(self, _rtkVarianObiRawImageFilterPython.new_rtkFunctionObiAttenuationUID(*args))

# Register rtkFunctionObiAttenuationUID in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUID_swigregister(rtkFunctionObiAttenuationUID)
class rtkFunctionObiAttenuationUIF(object):
    r"""Proxy of C++ rtkFunctionObiAttenuationUIF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_rtkFunctionObiAttenuationUIF

    def __ne__(self, arg0):
        r"""
        __ne__(self, arg0) -> bool

        Parameters
        ----------
        arg0: rtkFunctionObiAttenuationUIF const &

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUIF___ne__(self, arg0)

    def __eq__(self, other):
        r"""
        __eq__(self, other) -> bool

        Parameters
        ----------
        other: rtkFunctionObiAttenuationUIF const &

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUIF___eq__(self, other)

    def __call__(self, A):
        r"""
        __call__(self, A) -> float

        Parameters
        ----------
        A: unsigned int const &

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUIF___call__(self, A)

    def SetI0(self, i0):
        r"""
        SetI0(self, i0)

        Parameters
        ----------
        i0: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUIF_SetI0(self, i0)

    def SetIDark(self, idark):
        r"""
        SetIDark(self, idark)

        Parameters
        ----------
        idark: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUIF_SetIDark(self, idark)

    def __init__(self, *args):
        r"""
        __init__(self) -> rtkFunctionObiAttenuationUIF
        __init__(self, arg0) -> rtkFunctionObiAttenuationUIF

        Parameters
        ----------
        arg0: rtkFunctionObiAttenuationUIF const &

        """
        _rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUIF_swiginit(self, _rtkVarianObiRawImageFilterPython.new_rtkFunctionObiAttenuationUIF(*args))

# Register rtkFunctionObiAttenuationUIF in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.rtkFunctionObiAttenuationUIF_swigregister(rtkFunctionObiAttenuationUIF)

def rtkVarianObiRawImageFilterIUI2ID2_New():
    return rtkVarianObiRawImageFilterIUI2ID2.New()

class rtkVarianObiRawImageFilterIUI2ID2(itkUnaryFunctorImageFilterIUI2ID2OAUID):
    r"""Proxy of C++ rtkVarianObiRawImageFilterIUI2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkVarianObiRawImageFilterIUI2ID2_Pointer"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkVarianObiRawImageFilterIUI2ID2_Pointer"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2ID2_Clone(self)

    def GetI0(self):
        r"""GetI0(self) -> double"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2ID2_GetI0(self)

    def SetI0(self, _arg):
        r"""
        SetI0(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2ID2_SetI0(self, _arg)

    def GetIDark(self):
        r"""GetIDark(self) -> double"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2ID2_GetIDark(self)

    def SetIDark(self, _arg):
        r"""
        SetIDark(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2ID2_SetIDark(self, _arg)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2ID2_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_rtkVarianObiRawImageFilterIUI2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkVarianObiRawImageFilterIUI2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkVarianObiRawImageFilterIUI2ID2

        Create a new object of the class rtkVarianObiRawImageFilterIUI2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkVarianObiRawImageFilterIUI2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkVarianObiRawImageFilterIUI2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkVarianObiRawImageFilterIUI2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkVarianObiRawImageFilterIUI2ID2 in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2ID2_swigregister(rtkVarianObiRawImageFilterIUI2ID2)

def rtkVarianObiRawImageFilterIUI2IF2_New():
    return rtkVarianObiRawImageFilterIUI2IF2.New()

class rtkVarianObiRawImageFilterIUI2IF2(itkUnaryFunctorImageFilterIUI2IF2OAUIF):
    r"""Proxy of C++ rtkVarianObiRawImageFilterIUI2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkVarianObiRawImageFilterIUI2IF2_Pointer"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkVarianObiRawImageFilterIUI2IF2_Pointer"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2IF2_Clone(self)

    def GetI0(self):
        r"""GetI0(self) -> double"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2IF2_GetI0(self)

    def SetI0(self, _arg):
        r"""
        SetI0(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2IF2_SetI0(self, _arg)

    def GetIDark(self):
        r"""GetIDark(self) -> double"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2IF2_GetIDark(self)

    def SetIDark(self, _arg):
        r"""
        SetIDark(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2IF2_SetIDark(self, _arg)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2IF2_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_rtkVarianObiRawImageFilterIUI2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkVarianObiRawImageFilterIUI2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkVarianObiRawImageFilterIUI2IF2

        Create a new object of the class rtkVarianObiRawImageFilterIUI2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkVarianObiRawImageFilterIUI2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkVarianObiRawImageFilterIUI2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkVarianObiRawImageFilterIUI2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkVarianObiRawImageFilterIUI2IF2 in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI2IF2_swigregister(rtkVarianObiRawImageFilterIUI2IF2)

def rtkVarianObiRawImageFilterIUI3ID3_New():
    return rtkVarianObiRawImageFilterIUI3ID3.New()

class rtkVarianObiRawImageFilterIUI3ID3(itkUnaryFunctorImageFilterIUI3ID3OAUID):
    r"""Proxy of C++ rtkVarianObiRawImageFilterIUI3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkVarianObiRawImageFilterIUI3ID3_Pointer"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkVarianObiRawImageFilterIUI3ID3_Pointer"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3ID3_Clone(self)

    def GetI0(self):
        r"""GetI0(self) -> double"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3ID3_GetI0(self)

    def SetI0(self, _arg):
        r"""
        SetI0(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3ID3_SetI0(self, _arg)

    def GetIDark(self):
        r"""GetIDark(self) -> double"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3ID3_GetIDark(self)

    def SetIDark(self, _arg):
        r"""
        SetIDark(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3ID3_SetIDark(self, _arg)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3ID3_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_rtkVarianObiRawImageFilterIUI3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkVarianObiRawImageFilterIUI3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkVarianObiRawImageFilterIUI3ID3

        Create a new object of the class rtkVarianObiRawImageFilterIUI3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkVarianObiRawImageFilterIUI3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkVarianObiRawImageFilterIUI3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkVarianObiRawImageFilterIUI3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkVarianObiRawImageFilterIUI3ID3 in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3ID3_swigregister(rtkVarianObiRawImageFilterIUI3ID3)

def rtkVarianObiRawImageFilterIUI3IF3_New():
    return rtkVarianObiRawImageFilterIUI3IF3.New()

class rtkVarianObiRawImageFilterIUI3IF3(itkUnaryFunctorImageFilterIUI3IF3OAUIF):
    r"""Proxy of C++ rtkVarianObiRawImageFilterIUI3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkVarianObiRawImageFilterIUI3IF3_Pointer"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkVarianObiRawImageFilterIUI3IF3_Pointer"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3IF3_Clone(self)

    def GetI0(self):
        r"""GetI0(self) -> double"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3IF3_GetI0(self)

    def SetI0(self, _arg):
        r"""
        SetI0(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3IF3_SetI0(self, _arg)

    def GetIDark(self):
        r"""GetIDark(self) -> double"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3IF3_GetIDark(self)

    def SetIDark(self, _arg):
        r"""
        SetIDark(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3IF3_SetIDark(self, _arg)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3IF3_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkVarianObiRawImageFilterPython.delete_rtkVarianObiRawImageFilterIUI3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkVarianObiRawImageFilterIUI3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkVarianObiRawImageFilterIUI3IF3

        Create a new object of the class rtkVarianObiRawImageFilterIUI3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkVarianObiRawImageFilterIUI3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkVarianObiRawImageFilterIUI3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkVarianObiRawImageFilterIUI3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkVarianObiRawImageFilterIUI3IF3 in _rtkVarianObiRawImageFilterPython:
_rtkVarianObiRawImageFilterPython.rtkVarianObiRawImageFilterIUI3IF3_swigregister(rtkVarianObiRawImageFilterIUI3IF3)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def varian_obi_raw_image_filter(*args: itkt.ImageLike,  i0: float=..., i_dark: float=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for VarianObiRawImageFilter"""
    import itk

    kwarg_typehints = { 'i0':i0,'i_dark':i_dark,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.VarianObiRawImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def varian_obi_raw_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.VarianObiRawImageFilter
    varian_obi_raw_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    varian_obi_raw_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def unary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.UnaryFunctorImageFilter
    unary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_functor_image_filter.__doc__ = filter_object.__doc__



