# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageFileWriterRTKPython
else:
    import _itkImageFileWriterRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.ITKIOImageBaseBasePython
import itk.itkImageRTKPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageBaseRTKPython
import itk.itkImageRegionRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkPointRTKPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython

def itkImageFileWriterID1_New():
    return itkImageFileWriterID1.New()

class itkImageFileWriterID1(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterID1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterID1_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterID1_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD1 const *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageD1
        GetInput(self, idx) -> itkImageD1

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itkImageIOBase *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterID1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterID1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterID1_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterID1

        Create a new object of the class itkImageFileWriterID1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterID1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterID1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterID1.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterID1 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterID1_swigregister(itkImageFileWriterID1)

def itkImageFileWriterIF1_New():
    return itkImageFileWriterIF1.New()

class itkImageFileWriterIF1(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIF1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterIF1_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterIF1_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF1 const *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageF1
        GetInput(self, idx) -> itkImageF1

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itkImageIOBase *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIF1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterIF1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIF1_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIF1

        Create a new object of the class itkImageFileWriterIF1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIF1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIF1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIF1.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIF1 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIF1_swigregister(itkImageFileWriterIF1)

def itkImageFileWriterIUC1_New():
    return itkImageFileWriterIUC1.New()

class itkImageFileWriterIUC1(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIUC1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterIUC1_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterIUC1_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC1 const *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUC1
        GetInput(self, idx) -> itkImageUC1

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itkImageIOBase *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIUC1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterIUC1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIUC1

        Create a new object of the class itkImageFileWriterIUC1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIUC1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIUC1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIUC1.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIUC1 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_swigregister(itkImageFileWriterIUC1)

def itkImageFileWriterIUS1_New():
    return itkImageFileWriterIUS1.New()

class itkImageFileWriterIUS1(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIUS1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterIUS1_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterIUS1_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS1 const *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUS1
        GetInput(self, idx) -> itkImageUS1

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itkImageIOBase *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIUS1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterIUS1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIUS1

        Create a new object of the class itkImageFileWriterIUS1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIUS1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIUS1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIUS1.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIUS1 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_swigregister(itkImageFileWriterIUS1)

def itkImageFileWriterIVF52_New():
    return itkImageFileWriterIVF52.New()

class itkImageFileWriterIVF52(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterIVF52_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterIVF52_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageVF52 const *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageVF52
        GetInput(self, idx) -> itkImageVF52

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itkImageIOBase *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIVF52

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterIVF52

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF52

        Create a new object of the class itkImageFileWriterIVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF52 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_swigregister(itkImageFileWriterIVF52)

def itkImageFileWriterIVF53_New():
    return itkImageFileWriterIVF53.New()

class itkImageFileWriterIVF53(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterIVF53_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterIVF53_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageVF53 const *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageVF53
        GetInput(self, idx) -> itkImageVF53

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itkImageIOBase *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterIVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF53

        Create a new object of the class itkImageFileWriterIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF53 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_swigregister(itkImageFileWriterIVF53)

def itkImageFileWriterIVF54_New():
    return itkImageFileWriterIVF54.New()

class itkImageFileWriterIVF54(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterIVF54_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterIVF54_Pointer"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageVF54 const *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageVF54
        GetInput(self, idx) -> itkImageVF54

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itkImageIOBase *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIVF54

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterIVF54

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileWriterRTKPython.itkImageFileWriterIVF54_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF54

        Create a new object of the class itkImageFileWriterIVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF54 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIVF54_swigregister(itkImageFileWriterIVF54)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_file_writer(*args,  file_name: str=..., image_io=..., io_region=..., number_of_stream_divisions: int=..., use_compression: bool=..., compression_level: int=..., use_input_meta_data_dictionary: bool=...,**kwargs):
    """Functional interface for ImageFileWriter"""
    import itk

    kwarg_typehints = { 'file_name':file_name,'image_io':image_io,'io_region':io_region,'number_of_stream_divisions':number_of_stream_divisions,'use_compression':use_compression,'compression_level':compression_level,'use_input_meta_data_dictionary':use_input_meta_data_dictionary }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageFileWriter.New(*args, **kwargs)

    return instance.__internal_call__()

def image_file_writer_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.ImageFileWriter
    image_file_writer.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_file_writer.__doc__ = filter_object.__doc__



