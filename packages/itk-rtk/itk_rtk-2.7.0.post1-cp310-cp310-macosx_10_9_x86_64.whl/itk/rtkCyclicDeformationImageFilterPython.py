# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkCyclicDeformationImageFilterPython
else:
    import _rtkCyclicDeformationImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterRTKPython
import itk.itkImageSourceRTKPython
import itk.itkImageSourceCommonPython
import itk.itkImageRTKPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkImageRegionRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython

def rtkCyclicDeformationImageFilterIF4IF3_New():
    return rtkCyclicDeformationImageFilterIF4IF3.New()

class rtkCyclicDeformationImageFilterIF4IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4IF3):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIF4IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkCyclicDeformationImageFilterIF4IF3_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkCyclicDeformationImageFilterIF4IF3_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_Clone(self)

    def GetSignalFilename(self):
        r"""GetSignalFilename(self) -> std::string"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_GetSignalFilename(self)

    def SetSignalFilename(self, _arg):
        r"""
        SetSignalFilename(self, _arg)

        Parameters
        ----------
        _arg: std::string const

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetSignalFilename(self, _arg)

    def SetSignalVector(self, _arg):
        r"""
        SetSignalVector(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetSignalVector(self, _arg)

    def GetFrame(self):
        r"""GetFrame(self) -> unsigned int"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_GetFrame(self)

    def SetFrame(self, _arg):
        r"""
        SetFrame(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetFrame(self, _arg)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIF4IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkCyclicDeformationImageFilterIF4IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIF4IF3

        Create a new object of the class rtkCyclicDeformationImageFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIF4IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIF4IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIF4IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIF4IF3 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_swigregister(rtkCyclicDeformationImageFilterIF4IF3)

def rtkCyclicDeformationImageFilterIVF24IVF23_New():
    return rtkCyclicDeformationImageFilterIVF24IVF23.New()

class rtkCyclicDeformationImageFilterIVF24IVF23(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIVF24IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkCyclicDeformationImageFilterIVF24IVF23_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkCyclicDeformationImageFilterIVF24IVF23_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_Clone(self)

    def GetSignalFilename(self):
        r"""GetSignalFilename(self) -> std::string"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_GetSignalFilename(self)

    def SetSignalFilename(self, _arg):
        r"""
        SetSignalFilename(self, _arg)

        Parameters
        ----------
        _arg: std::string const

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_SetSignalFilename(self, _arg)

    def SetSignalVector(self, _arg):
        r"""
        SetSignalVector(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_SetSignalVector(self, _arg)

    def GetFrame(self):
        r"""GetFrame(self) -> unsigned int"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_GetFrame(self)

    def SetFrame(self, _arg):
        r"""
        SetFrame(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_SetFrame(self, _arg)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIVF24IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkCyclicDeformationImageFilterIVF24IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIVF24IVF23

        Create a new object of the class rtkCyclicDeformationImageFilterIVF24IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIVF24IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIVF24IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIVF24IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIVF24IVF23 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_swigregister(rtkCyclicDeformationImageFilterIVF24IVF23)

def rtkCyclicDeformationImageFilterIVF34IVF33_New():
    return rtkCyclicDeformationImageFilterIVF34IVF33.New()

class rtkCyclicDeformationImageFilterIVF34IVF33(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIVF34IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkCyclicDeformationImageFilterIVF34IVF33_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkCyclicDeformationImageFilterIVF34IVF33_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_Clone(self)

    def GetSignalFilename(self):
        r"""GetSignalFilename(self) -> std::string"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_GetSignalFilename(self)

    def SetSignalFilename(self, _arg):
        r"""
        SetSignalFilename(self, _arg)

        Parameters
        ----------
        _arg: std::string const

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetSignalFilename(self, _arg)

    def SetSignalVector(self, _arg):
        r"""
        SetSignalVector(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetSignalVector(self, _arg)

    def GetFrame(self):
        r"""GetFrame(self) -> unsigned int"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_GetFrame(self)

    def SetFrame(self, _arg):
        r"""
        SetFrame(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetFrame(self, _arg)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIVF34IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkCyclicDeformationImageFilterIVF34IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIVF34IVF33

        Create a new object of the class rtkCyclicDeformationImageFilterIVF34IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIVF34IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIVF34IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIVF34IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIVF34IVF33 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_swigregister(rtkCyclicDeformationImageFilterIVF34IVF33)

def rtkCyclicDeformationImageFilterIVF44IVF43_New():
    return rtkCyclicDeformationImageFilterIVF44IVF43.New()

class rtkCyclicDeformationImageFilterIVF44IVF43(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIVF44IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkCyclicDeformationImageFilterIVF44IVF43_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkCyclicDeformationImageFilterIVF44IVF43_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_Clone(self)

    def GetSignalFilename(self):
        r"""GetSignalFilename(self) -> std::string"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_GetSignalFilename(self)

    def SetSignalFilename(self, _arg):
        r"""
        SetSignalFilename(self, _arg)

        Parameters
        ----------
        _arg: std::string const

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_SetSignalFilename(self, _arg)

    def SetSignalVector(self, _arg):
        r"""
        SetSignalVector(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_SetSignalVector(self, _arg)

    def GetFrame(self):
        r"""GetFrame(self) -> unsigned int"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_GetFrame(self)

    def SetFrame(self, _arg):
        r"""
        SetFrame(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_SetFrame(self, _arg)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIVF44IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkCyclicDeformationImageFilterIVF44IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIVF44IVF43

        Create a new object of the class rtkCyclicDeformationImageFilterIVF44IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIVF44IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIVF44IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIVF44IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIVF44IVF43 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_swigregister(rtkCyclicDeformationImageFilterIVF44IVF43)

def rtkCyclicDeformationImageFilterIVF54IVF53_New():
    return rtkCyclicDeformationImageFilterIVF54IVF53.New()

class rtkCyclicDeformationImageFilterIVF54IVF53(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIVF54IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkCyclicDeformationImageFilterIVF54IVF53_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkCyclicDeformationImageFilterIVF54IVF53_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_Clone(self)

    def GetSignalFilename(self):
        r"""GetSignalFilename(self) -> std::string"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_GetSignalFilename(self)

    def SetSignalFilename(self, _arg):
        r"""
        SetSignalFilename(self, _arg)

        Parameters
        ----------
        _arg: std::string const

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_SetSignalFilename(self, _arg)

    def SetSignalVector(self, _arg):
        r"""
        SetSignalVector(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_SetSignalVector(self, _arg)

    def GetFrame(self):
        r"""GetFrame(self) -> unsigned int"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_GetFrame(self)

    def SetFrame(self, _arg):
        r"""
        SetFrame(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_SetFrame(self, _arg)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIVF54IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkCyclicDeformationImageFilterIVF54IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIVF54IVF53

        Create a new object of the class rtkCyclicDeformationImageFilterIVF54IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIVF54IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIVF54IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIVF54IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIVF54IVF53 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_swigregister(rtkCyclicDeformationImageFilterIVF54IVF53)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def cyclic_deformation_image_filter(*args: itkt.ImageLike,  signal_filename: str=..., signal_vector: Sequence[float]=..., frame: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for CyclicDeformationImageFilter"""
    import itk

    kwarg_typehints = { 'signal_filename':signal_filename,'signal_vector':signal_vector,'frame':frame }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.CyclicDeformationImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def cyclic_deformation_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.CyclicDeformationImageFilter
    cyclic_deformation_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    cyclic_deformation_image_filter.__doc__ = filter_object.__doc__



