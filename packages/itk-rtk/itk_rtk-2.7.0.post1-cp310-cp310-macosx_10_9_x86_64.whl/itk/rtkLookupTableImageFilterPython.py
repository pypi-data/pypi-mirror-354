# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkLookupTableImageFilterPython
else:
    import _rtkLookupTableImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImageRTKPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkImageRegionRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython
import itk.itkCastImageFilterPython

def itkUnaryFunctorImageFilterIUI2ID2LUTUID_New():
    return itkUnaryFunctorImageFilterIUI2ID2LUTUID.New()

class itkUnaryFunctorImageFilterIUI2ID2LUTUID(itk.itkCastImageFilterPython.itkCastImageFilterIUI2ID2_Superclass):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUI2ID2LUTUID class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUI2ID2LUTUID_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2LUTUID___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUI2ID2LUTUID_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2LUTUID_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUID
        GetFunctor(self) -> rtkFunctorLUTUID
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2LUTUID_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUID const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2LUTUID_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUI2ID2LUTUID

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUI2ID2LUTUID

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2LUTUID_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUI2ID2LUTUID

        Create a new object of the class itkUnaryFunctorImageFilterIUI2ID2LUTUID and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUI2ID2LUTUID.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUI2ID2LUTUID.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUI2ID2LUTUID.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUI2ID2LUTUID in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2ID2LUTUID_swigregister(itkUnaryFunctorImageFilterIUI2ID2LUTUID)

def itkUnaryFunctorImageFilterIUI2IF2LUTUIF_New():
    return itkUnaryFunctorImageFilterIUI2IF2LUTUIF.New()

class itkUnaryFunctorImageFilterIUI2IF2LUTUIF(itk.itkCastImageFilterPython.itkCastImageFilterIUI2IF2_Superclass):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUI2IF2LUTUIF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUI2IF2LUTUIF_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2LUTUIF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUI2IF2LUTUIF_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2LUTUIF_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUIF
        GetFunctor(self) -> rtkFunctorLUTUIF
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2LUTUIF_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUIF const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2LUTUIF_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUI2IF2LUTUIF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUI2IF2LUTUIF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2LUTUIF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUI2IF2LUTUIF

        Create a new object of the class itkUnaryFunctorImageFilterIUI2IF2LUTUIF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUI2IF2LUTUIF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUI2IF2LUTUIF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUI2IF2LUTUIF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUI2IF2LUTUIF in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI2IF2LUTUIF_swigregister(itkUnaryFunctorImageFilterIUI2IF2LUTUIF)

def itkUnaryFunctorImageFilterIUI3ID3LUTUID_New():
    return itkUnaryFunctorImageFilterIUI3ID3LUTUID.New()

class itkUnaryFunctorImageFilterIUI3ID3LUTUID(itk.itkCastImageFilterPython.itkCastImageFilterIUI3ID3_Superclass):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUI3ID3LUTUID class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUI3ID3LUTUID_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3LUTUID___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUI3ID3LUTUID_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3LUTUID_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUID
        GetFunctor(self) -> rtkFunctorLUTUID
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3LUTUID_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUID const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3LUTUID_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUI3ID3LUTUID

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUI3ID3LUTUID

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3LUTUID_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUI3ID3LUTUID

        Create a new object of the class itkUnaryFunctorImageFilterIUI3ID3LUTUID and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUI3ID3LUTUID.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUI3ID3LUTUID.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUI3ID3LUTUID.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUI3ID3LUTUID in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3ID3LUTUID_swigregister(itkUnaryFunctorImageFilterIUI3ID3LUTUID)

def itkUnaryFunctorImageFilterIUI3IF3LUTUIF_New():
    return itkUnaryFunctorImageFilterIUI3IF3LUTUIF.New()

class itkUnaryFunctorImageFilterIUI3IF3LUTUIF(itk.itkCastImageFilterPython.itkCastImageFilterIUI3IF3_Superclass):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUI3IF3LUTUIF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUI3IF3LUTUIF_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3LUTUIF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUI3IF3LUTUIF_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3LUTUIF_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUIF
        GetFunctor(self) -> rtkFunctorLUTUIF
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3LUTUIF_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUIF const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3LUTUIF_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUI3IF3LUTUIF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUI3IF3LUTUIF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3LUTUIF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUI3IF3LUTUIF

        Create a new object of the class itkUnaryFunctorImageFilterIUI3IF3LUTUIF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUI3IF3LUTUIF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUI3IF3LUTUIF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUI3IF3LUTUIF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUI3IF3LUTUIF in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUI3IF3LUTUIF_swigregister(itkUnaryFunctorImageFilterIUI3IF3LUTUIF)

def itkUnaryFunctorImageFilterIUS2ID2LUTUSD_New():
    return itkUnaryFunctorImageFilterIUS2ID2LUTUSD.New()

class itkUnaryFunctorImageFilterIUS2ID2LUTUSD(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUS2ID2LUTUSD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUS2ID2LUTUSD_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2ID2LUTUSD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUS2ID2LUTUSD_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2ID2LUTUSD_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUSD
        GetFunctor(self) -> rtkFunctorLUTUSD
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2ID2LUTUSD_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUSD const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2ID2LUTUSD_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUS2ID2LUTUSD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUS2ID2LUTUSD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2ID2LUTUSD_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUS2ID2LUTUSD

        Create a new object of the class itkUnaryFunctorImageFilterIUS2ID2LUTUSD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUS2ID2LUTUSD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUS2ID2LUTUSD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUS2ID2LUTUSD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUS2ID2LUTUSD in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2ID2LUTUSD_swigregister(itkUnaryFunctorImageFilterIUS2ID2LUTUSD)

def itkUnaryFunctorImageFilterIUS2IF2LUTUSF_New():
    return itkUnaryFunctorImageFilterIUS2IF2LUTUSF.New()

class itkUnaryFunctorImageFilterIUS2IF2LUTUSF(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUS2IF2LUTUSF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUS2IF2LUTUSF_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IF2LUTUSF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUS2IF2LUTUSF_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IF2LUTUSF_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUSF
        GetFunctor(self) -> rtkFunctorLUTUSF
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IF2LUTUSF_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUSF const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IF2LUTUSF_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUS2IF2LUTUSF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUS2IF2LUTUSF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IF2LUTUSF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUS2IF2LUTUSF

        Create a new object of the class itkUnaryFunctorImageFilterIUS2IF2LUTUSF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUS2IF2LUTUSF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUS2IF2LUTUSF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUS2IF2LUTUSF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUS2IF2LUTUSF in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IF2LUTUSF_swigregister(itkUnaryFunctorImageFilterIUS2IF2LUTUSF)

def itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS_New():
    return itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS.New()

class itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUSUS
        GetFunctor(self) -> rtkFunctorLUTUSUS
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUSUS const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS

        Create a new object of the class itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS_swigregister(itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS)

def itkUnaryFunctorImageFilterIUS3ID3LUTUSD_New():
    return itkUnaryFunctorImageFilterIUS3ID3LUTUSD.New()

class itkUnaryFunctorImageFilterIUS3ID3LUTUSD(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUS3ID3LUTUSD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUS3ID3LUTUSD_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3ID3LUTUSD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUS3ID3LUTUSD_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3ID3LUTUSD_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUSD
        GetFunctor(self) -> rtkFunctorLUTUSD
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3ID3LUTUSD_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUSD const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3ID3LUTUSD_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUS3ID3LUTUSD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUS3ID3LUTUSD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3ID3LUTUSD_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUS3ID3LUTUSD

        Create a new object of the class itkUnaryFunctorImageFilterIUS3ID3LUTUSD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUS3ID3LUTUSD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUS3ID3LUTUSD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUS3ID3LUTUSD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUS3ID3LUTUSD in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3ID3LUTUSD_swigregister(itkUnaryFunctorImageFilterIUS3ID3LUTUSD)

def itkUnaryFunctorImageFilterIUS3IF3LUTUSF_New():
    return itkUnaryFunctorImageFilterIUS3IF3LUTUSF.New()

class itkUnaryFunctorImageFilterIUS3IF3LUTUSF(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUS3IF3LUTUSF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUS3IF3LUTUSF_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IF3LUTUSF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUS3IF3LUTUSF_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IF3LUTUSF_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUSF
        GetFunctor(self) -> rtkFunctorLUTUSF
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IF3LUTUSF_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUSF const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IF3LUTUSF_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUS3IF3LUTUSF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUS3IF3LUTUSF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IF3LUTUSF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUS3IF3LUTUSF

        Create a new object of the class itkUnaryFunctorImageFilterIUS3IF3LUTUSF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUS3IF3LUTUSF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUS3IF3LUTUSF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUS3IF3LUTUSF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUS3IF3LUTUSF in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IF3LUTUSF_swigregister(itkUnaryFunctorImageFilterIUS3IF3LUTUSF)

def itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS_New():
    return itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS.New()

class itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS_Pointer"""
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> rtkFunctorLUTUSUS
        GetFunctor(self) -> rtkFunctorLUTUSUS
        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: rtkFunctorLUTUSUS const &

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS_SetFunctor(self, functor)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS

        Create a new object of the class itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS_swigregister(itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS)
class rtkFunctorLUTUID(object):
    r"""Proxy of C++ rtkFunctorLUTUID class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkFunctorLUTUID

    def SetLookupTable(self, lut):
        r"""
        SetLookupTable(self, lut)

        Parameters
        ----------
        lut: itkImageD1 *

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUID_SetLookupTable(self, lut)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageD1_Pointer
        GetLookupTable(self) -> double *
        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUID_GetLookupTable(self, *args)

    def __ne__(self, lut):
        r"""
        __ne__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUID const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUID___ne__(self, lut)

    def __eq__(self, lut):
        r"""
        __eq__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUID const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUID___eq__(self, lut)

    def __call__(self, val):
        r"""
        __call__(self, val) -> double

        Parameters
        ----------
        val: unsigned int const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUID___call__(self, val)

    def __init__(self, *args):
        r"""
        __init__(self) -> rtkFunctorLUTUID
        __init__(self, arg0) -> rtkFunctorLUTUID

        Parameters
        ----------
        arg0: rtkFunctorLUTUID const &

        """
        _rtkLookupTableImageFilterPython.rtkFunctorLUTUID_swiginit(self, _rtkLookupTableImageFilterPython.new_rtkFunctorLUTUID(*args))

# Register rtkFunctorLUTUID in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkFunctorLUTUID_swigregister(rtkFunctorLUTUID)
class rtkFunctorLUTUIF(object):
    r"""Proxy of C++ rtkFunctorLUTUIF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkFunctorLUTUIF

    def SetLookupTable(self, lut):
        r"""
        SetLookupTable(self, lut)

        Parameters
        ----------
        lut: itkImageF1 *

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUIF_SetLookupTable(self, lut)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageF1_Pointer
        GetLookupTable(self) -> float *
        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUIF_GetLookupTable(self, *args)

    def __ne__(self, lut):
        r"""
        __ne__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUIF const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUIF___ne__(self, lut)

    def __eq__(self, lut):
        r"""
        __eq__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUIF const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUIF___eq__(self, lut)

    def __call__(self, val):
        r"""
        __call__(self, val) -> float

        Parameters
        ----------
        val: unsigned int const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUIF___call__(self, val)

    def __init__(self, *args):
        r"""
        __init__(self) -> rtkFunctorLUTUIF
        __init__(self, arg0) -> rtkFunctorLUTUIF

        Parameters
        ----------
        arg0: rtkFunctorLUTUIF const &

        """
        _rtkLookupTableImageFilterPython.rtkFunctorLUTUIF_swiginit(self, _rtkLookupTableImageFilterPython.new_rtkFunctorLUTUIF(*args))

# Register rtkFunctorLUTUIF in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkFunctorLUTUIF_swigregister(rtkFunctorLUTUIF)
class rtkFunctorLUTUSD(object):
    r"""Proxy of C++ rtkFunctorLUTUSD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkFunctorLUTUSD

    def SetLookupTable(self, lut):
        r"""
        SetLookupTable(self, lut)

        Parameters
        ----------
        lut: itkImageD1 *

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSD_SetLookupTable(self, lut)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageD1_Pointer
        GetLookupTable(self) -> double *
        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSD_GetLookupTable(self, *args)

    def __ne__(self, lut):
        r"""
        __ne__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUSD const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSD___ne__(self, lut)

    def __eq__(self, lut):
        r"""
        __eq__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUSD const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSD___eq__(self, lut)

    def __call__(self, val):
        r"""
        __call__(self, val) -> double

        Parameters
        ----------
        val: unsigned short const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSD___call__(self, val)

    def __init__(self, *args):
        r"""
        __init__(self) -> rtkFunctorLUTUSD
        __init__(self, arg0) -> rtkFunctorLUTUSD

        Parameters
        ----------
        arg0: rtkFunctorLUTUSD const &

        """
        _rtkLookupTableImageFilterPython.rtkFunctorLUTUSD_swiginit(self, _rtkLookupTableImageFilterPython.new_rtkFunctorLUTUSD(*args))

# Register rtkFunctorLUTUSD in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkFunctorLUTUSD_swigregister(rtkFunctorLUTUSD)
class rtkFunctorLUTUSF(object):
    r"""Proxy of C++ rtkFunctorLUTUSF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkFunctorLUTUSF

    def SetLookupTable(self, lut):
        r"""
        SetLookupTable(self, lut)

        Parameters
        ----------
        lut: itkImageF1 *

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSF_SetLookupTable(self, lut)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageF1_Pointer
        GetLookupTable(self) -> float *
        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSF_GetLookupTable(self, *args)

    def __ne__(self, lut):
        r"""
        __ne__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUSF const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSF___ne__(self, lut)

    def __eq__(self, lut):
        r"""
        __eq__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUSF const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSF___eq__(self, lut)

    def __call__(self, val):
        r"""
        __call__(self, val) -> float

        Parameters
        ----------
        val: unsigned short const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSF___call__(self, val)

    def __init__(self, *args):
        r"""
        __init__(self) -> rtkFunctorLUTUSF
        __init__(self, arg0) -> rtkFunctorLUTUSF

        Parameters
        ----------
        arg0: rtkFunctorLUTUSF const &

        """
        _rtkLookupTableImageFilterPython.rtkFunctorLUTUSF_swiginit(self, _rtkLookupTableImageFilterPython.new_rtkFunctorLUTUSF(*args))

# Register rtkFunctorLUTUSF in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkFunctorLUTUSF_swigregister(rtkFunctorLUTUSF)
class rtkFunctorLUTUSUS(object):
    r"""Proxy of C++ rtkFunctorLUTUSUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkFunctorLUTUSUS

    def SetLookupTable(self, lut):
        r"""
        SetLookupTable(self, lut)

        Parameters
        ----------
        lut: itkImageUS1 *

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSUS_SetLookupTable(self, lut)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageUS1_Pointer
        GetLookupTable(self) -> unsigned short *
        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSUS_GetLookupTable(self, *args)

    def __ne__(self, lut):
        r"""
        __ne__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUSUS const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSUS___ne__(self, lut)

    def __eq__(self, lut):
        r"""
        __eq__(self, lut) -> bool

        Parameters
        ----------
        lut: rtkFunctorLUTUSUS const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSUS___eq__(self, lut)

    def __call__(self, val):
        r"""
        __call__(self, val) -> unsigned short

        Parameters
        ----------
        val: unsigned short const &

        """
        return _rtkLookupTableImageFilterPython.rtkFunctorLUTUSUS___call__(self, val)

    def __init__(self, *args):
        r"""
        __init__(self) -> rtkFunctorLUTUSUS
        __init__(self, arg0) -> rtkFunctorLUTUSUS

        Parameters
        ----------
        arg0: rtkFunctorLUTUSUS const &

        """
        _rtkLookupTableImageFilterPython.rtkFunctorLUTUSUS_swiginit(self, _rtkLookupTableImageFilterPython.new_rtkFunctorLUTUSUS(*args))

# Register rtkFunctorLUTUSUS in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkFunctorLUTUSUS_swigregister(rtkFunctorLUTUSUS)

def rtkLookupTableImageFilterIUI2ID2_New():
    return rtkLookupTableImageFilterIUI2ID2.New()

class rtkLookupTableImageFilterIUI2ID2(itkUnaryFunctorImageFilterIUI2ID2LUTUID):
    r"""Proxy of C++ rtkLookupTableImageFilterIUI2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUI2ID2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUI2ID2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2ID2_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageD1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2ID2_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageD1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2ID2_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageD1
        GetLookupTable(self) -> itkImageD1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2ID2_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2ID2_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUI2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUI2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUI2ID2

        Create a new object of the class rtkLookupTableImageFilterIUI2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUI2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUI2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUI2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUI2ID2 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2ID2_swigregister(rtkLookupTableImageFilterIUI2ID2)

def rtkLookupTableImageFilterIUI2IF2_New():
    return rtkLookupTableImageFilterIUI2IF2.New()

class rtkLookupTableImageFilterIUI2IF2(itkUnaryFunctorImageFilterIUI2IF2LUTUIF):
    r"""Proxy of C++ rtkLookupTableImageFilterIUI2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUI2IF2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUI2IF2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2IF2_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageF1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2IF2_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageF1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2IF2_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageF1
        GetLookupTable(self) -> itkImageF1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2IF2_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2IF2_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUI2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUI2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUI2IF2

        Create a new object of the class rtkLookupTableImageFilterIUI2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUI2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUI2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUI2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUI2IF2 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI2IF2_swigregister(rtkLookupTableImageFilterIUI2IF2)

def rtkLookupTableImageFilterIUI3ID3_New():
    return rtkLookupTableImageFilterIUI3ID3.New()

class rtkLookupTableImageFilterIUI3ID3(itkUnaryFunctorImageFilterIUI3ID3LUTUID):
    r"""Proxy of C++ rtkLookupTableImageFilterIUI3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUI3ID3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUI3ID3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3ID3_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageD1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3ID3_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageD1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3ID3_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageD1
        GetLookupTable(self) -> itkImageD1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3ID3_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3ID3_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUI3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUI3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUI3ID3

        Create a new object of the class rtkLookupTableImageFilterIUI3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUI3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUI3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUI3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUI3ID3 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3ID3_swigregister(rtkLookupTableImageFilterIUI3ID3)

def rtkLookupTableImageFilterIUI3IF3_New():
    return rtkLookupTableImageFilterIUI3IF3.New()

class rtkLookupTableImageFilterIUI3IF3(itkUnaryFunctorImageFilterIUI3IF3LUTUIF):
    r"""Proxy of C++ rtkLookupTableImageFilterIUI3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUI3IF3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUI3IF3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3IF3_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageF1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3IF3_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageF1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3IF3_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageF1
        GetLookupTable(self) -> itkImageF1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3IF3_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3IF3_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUI3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUI3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUI3IF3

        Create a new object of the class rtkLookupTableImageFilterIUI3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUI3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUI3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUI3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUI3IF3 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUI3IF3_swigregister(rtkLookupTableImageFilterIUI3IF3)

def rtkLookupTableImageFilterIUS2ID2_New():
    return rtkLookupTableImageFilterIUS2ID2.New()

class rtkLookupTableImageFilterIUS2ID2(itkUnaryFunctorImageFilterIUS2ID2LUTUSD):
    r"""Proxy of C++ rtkLookupTableImageFilterIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUS2ID2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUS2ID2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2ID2_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageD1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2ID2_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageD1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2ID2_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageD1
        GetLookupTable(self) -> itkImageD1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2ID2_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2ID2_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUS2ID2

        Create a new object of the class rtkLookupTableImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUS2ID2 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2ID2_swigregister(rtkLookupTableImageFilterIUS2ID2)

def rtkLookupTableImageFilterIUS2IF2_New():
    return rtkLookupTableImageFilterIUS2IF2.New()

class rtkLookupTableImageFilterIUS2IF2(itkUnaryFunctorImageFilterIUS2IF2LUTUSF):
    r"""Proxy of C++ rtkLookupTableImageFilterIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUS2IF2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUS2IF2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IF2_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageF1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IF2_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageF1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IF2_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageF1
        GetLookupTable(self) -> itkImageF1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IF2_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IF2_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUS2IF2

        Create a new object of the class rtkLookupTableImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUS2IF2 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IF2_swigregister(rtkLookupTableImageFilterIUS2IF2)

def rtkLookupTableImageFilterIUS2IUS2_New():
    return rtkLookupTableImageFilterIUS2IUS2.New()

class rtkLookupTableImageFilterIUS2IUS2(itkUnaryFunctorImageFilterIUS2IUS2LUTUSUS):
    r"""Proxy of C++ rtkLookupTableImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUS2IUS2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUS2IUS2_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IUS2_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IUS2_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageUS1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IUS2_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageUS1
        GetLookupTable(self) -> itkImageUS1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IUS2_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IUS2_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUS2IUS2

        Create a new object of the class rtkLookupTableImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUS2IUS2 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS2IUS2_swigregister(rtkLookupTableImageFilterIUS2IUS2)

def rtkLookupTableImageFilterIUS3ID3_New():
    return rtkLookupTableImageFilterIUS3ID3.New()

class rtkLookupTableImageFilterIUS3ID3(itkUnaryFunctorImageFilterIUS3ID3LUTUSD):
    r"""Proxy of C++ rtkLookupTableImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUS3ID3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUS3ID3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3ID3_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageD1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3ID3_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageD1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3ID3_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageD1
        GetLookupTable(self) -> itkImageD1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3ID3_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3ID3_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUS3ID3

        Create a new object of the class rtkLookupTableImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUS3ID3 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3ID3_swigregister(rtkLookupTableImageFilterIUS3ID3)

def rtkLookupTableImageFilterIUS3IF3_New():
    return rtkLookupTableImageFilterIUS3IF3.New()

class rtkLookupTableImageFilterIUS3IF3(itkUnaryFunctorImageFilterIUS3IF3LUTUSF):
    r"""Proxy of C++ rtkLookupTableImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUS3IF3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUS3IF3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IF3_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageF1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IF3_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageF1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IF3_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageF1
        GetLookupTable(self) -> itkImageF1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IF3_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IF3_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUS3IF3

        Create a new object of the class rtkLookupTableImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUS3IF3 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IF3_swigregister(rtkLookupTableImageFilterIUS3IF3)

def rtkLookupTableImageFilterIUS3IUS3_New():
    return rtkLookupTableImageFilterIUS3IUS3.New()

class rtkLookupTableImageFilterIUS3IUS3(itkUnaryFunctorImageFilterIUS3IUS3LUTUSUS):
    r"""Proxy of C++ rtkLookupTableImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkLookupTableImageFilterIUS3IUS3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkLookupTableImageFilterIUS3IUS3_Pointer"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IUS3_Clone(self)

    def SetLookupTable(self, _arg):
        r"""
        SetLookupTable(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS1 *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IUS3_SetLookupTable(self, _arg)

    def GetModifiableLookupTable(self):
        r"""GetModifiableLookupTable(self) -> itkImageUS1"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IUS3_GetModifiableLookupTable(self)

    def GetLookupTable(self, *args):
        r"""
        GetLookupTable(self) -> itkImageUS1
        GetLookupTable(self) -> itkImageUS1
        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IUS3_GetLookupTable(self, *args)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IUS3_BeforeThreadedGenerateData(self)
    __swig_destroy__ = _rtkLookupTableImageFilterPython.delete_rtkLookupTableImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkLookupTableImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkLookupTableImageFilterIUS3IUS3

        Create a new object of the class rtkLookupTableImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkLookupTableImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkLookupTableImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkLookupTableImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkLookupTableImageFilterIUS3IUS3 in _rtkLookupTableImageFilterPython:
_rtkLookupTableImageFilterPython.rtkLookupTableImageFilterIUS3IUS3_swigregister(rtkLookupTableImageFilterIUS3IUS3)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def lookup_table_image_filter(*args: itkt.ImageLike,  lookup_table: itkt.Image=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LookupTableImageFilter"""
    import itk

    kwarg_typehints = { 'lookup_table':lookup_table,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LookupTableImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def lookup_table_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.LookupTableImageFilter
    lookup_table_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    lookup_table_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def unary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.UnaryFunctorImageFilter
    unary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_functor_image_filter.__doc__ = filter_object.__doc__



