# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkFourDConjugateGradientConeBeamReconstructionFilterPython
else:
    import _rtkFourDConjugateGradientConeBeamReconstructionFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.rtkForwardProjectionImageFilterPython
import itk.itkInPlaceImageFilterRTKPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterRTKPython
import itk.itkImageSourceRTKPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkImageRegionRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.rtkThreeDCircularProjectionGeometryPython
import itk.rtkProjectionGeometryPython
import itk.itkArray2DPython
import itk.rtkBackProjectionImageFilterPython

def rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_New():
    return rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass.New()

class rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ForwardProjectionType_FP_JOSEPH = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_ForwardProjectionType_FP_JOSEPH
    
    ForwardProjectionType_FP_CUDARAYCAST = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_ForwardProjectionType_FP_CUDARAYCAST
    
    ForwardProjectionType_FP_JOSEPHATTENUATED = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_ForwardProjectionType_FP_JOSEPHATTENUATED
    
    ForwardProjectionType_FP_ZENG = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_ForwardProjectionType_FP_ZENG
    
    BackProjectionType_BP_VOXELBASED = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_VOXELBASED
    
    BackProjectionType_BP_JOSEPH = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_JOSEPH
    
    BackProjectionType_BP_CUDAVOXELBASED = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_CUDAVOXELBASED
    
    BackProjectionType_BP_CUDARAYCAST = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_CUDARAYCAST
    
    BackProjectionType_BP_JOSEPHATTENUATED = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_JOSEPHATTENUATED
    
    BackProjectionType_BP_ZENG = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_BackProjectionType_BP_ZENG
    

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_Pointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_Pointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_Clone(self)

    def SetForwardProjectionFilter(self, fwtype):
        r"""
        SetForwardProjectionFilter(self, fwtype)

        Parameters
        ----------
        fwtype: enum rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass::ForwardProjectionType

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_SetForwardProjectionFilter(self, fwtype)

    def GetForwardProjectionFilter(self):
        r"""GetForwardProjectionFilter(self) -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass::ForwardProjectionType"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_GetForwardProjectionFilter(self)

    def SetBackProjectionFilter(self, bptype):
        r"""
        SetBackProjectionFilter(self, bptype)

        Parameters
        ----------
        bptype: enum rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass::BackProjectionType

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_SetBackProjectionFilter(self, bptype)

    def GetBackProjectionFilter(self):
        r"""GetBackProjectionFilter(self) -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass::BackProjectionType"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_GetBackProjectionFilter(self)

    def SetAttenuationMap(self, attenuationMap):
        r"""
        SetAttenuationMap(self, attenuationMap)

        Parameters
        ----------
        attenuationMap: itkImageD3 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_SetAttenuationMap(self, attenuationMap)

    def GetAttenuationMap(self):
        r"""GetAttenuationMap(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_GetAttenuationMap(self)

    def SetInferiorClipImage(self, inferiorClipImage):
        r"""
        SetInferiorClipImage(self, inferiorClipImage)

        Parameters
        ----------
        inferiorClipImage: itkImageD3 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_SetInferiorClipImage(self, inferiorClipImage)

    def GetInferiorClipImage(self):
        r"""GetInferiorClipImage(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_GetInferiorClipImage(self)

    def SetSuperiorClipImage(self, superiorClipImage):
        r"""
        SetSuperiorClipImage(self, superiorClipImage)

        Parameters
        ----------
        superiorClipImage: itkImageD3 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_SetSuperiorClipImage(self, superiorClipImage)

    def GetSuperiorClipImage(self):
        r"""GetSuperiorClipImage(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_GetSuperiorClipImage(self)

    def GetSigmaZero(self):
        r"""GetSigmaZero(self) -> double"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_GetSigmaZero(self)

    def SetSigmaZero(self, _arg):
        r"""
        SetSigmaZero(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_SetSigmaZero(self, _arg)

    def GetAlphaPSF(self):
        r"""GetAlphaPSF(self) -> double"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_GetAlphaPSF(self)

    def SetAlphaPSF(self, _arg):
        r"""
        SetAlphaPSF(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_SetAlphaPSF(self, _arg)

    def GetStepSize(self):
        r"""GetStepSize(self) -> double"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_GetStepSize(self)

    def SetStepSize(self, _arg):
        r"""
        SetStepSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_SetStepSize(self, _arg)
    __swig_destroy__ = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.delete_rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass

        Create a new object of the class rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass in _rtkFourDConjugateGradientConeBeamReconstructionFilterPython:
_rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass_swigregister(rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass)

def rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_New():
    return rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass.New()

class rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ForwardProjectionType_FP_JOSEPH = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_ForwardProjectionType_FP_JOSEPH
    
    ForwardProjectionType_FP_CUDARAYCAST = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_ForwardProjectionType_FP_CUDARAYCAST
    
    ForwardProjectionType_FP_JOSEPHATTENUATED = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_ForwardProjectionType_FP_JOSEPHATTENUATED
    
    ForwardProjectionType_FP_ZENG = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_ForwardProjectionType_FP_ZENG
    
    BackProjectionType_BP_VOXELBASED = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_VOXELBASED
    
    BackProjectionType_BP_JOSEPH = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_JOSEPH
    
    BackProjectionType_BP_CUDAVOXELBASED = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_CUDAVOXELBASED
    
    BackProjectionType_BP_CUDARAYCAST = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_CUDARAYCAST
    
    BackProjectionType_BP_JOSEPHATTENUATED = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_JOSEPHATTENUATED
    
    BackProjectionType_BP_ZENG = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_BackProjectionType_BP_ZENG
    

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_Pointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_Pointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_Clone(self)

    def SetForwardProjectionFilter(self, fwtype):
        r"""
        SetForwardProjectionFilter(self, fwtype)

        Parameters
        ----------
        fwtype: enum rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass::ForwardProjectionType

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_SetForwardProjectionFilter(self, fwtype)

    def GetForwardProjectionFilter(self):
        r"""GetForwardProjectionFilter(self) -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass::ForwardProjectionType"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_GetForwardProjectionFilter(self)

    def SetBackProjectionFilter(self, bptype):
        r"""
        SetBackProjectionFilter(self, bptype)

        Parameters
        ----------
        bptype: enum rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass::BackProjectionType

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_SetBackProjectionFilter(self, bptype)

    def GetBackProjectionFilter(self):
        r"""GetBackProjectionFilter(self) -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass::BackProjectionType"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_GetBackProjectionFilter(self)

    def SetAttenuationMap(self, attenuationMap):
        r"""
        SetAttenuationMap(self, attenuationMap)

        Parameters
        ----------
        attenuationMap: itkImageF3 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_SetAttenuationMap(self, attenuationMap)

    def GetAttenuationMap(self):
        r"""GetAttenuationMap(self) -> itkImageF3_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_GetAttenuationMap(self)

    def SetInferiorClipImage(self, inferiorClipImage):
        r"""
        SetInferiorClipImage(self, inferiorClipImage)

        Parameters
        ----------
        inferiorClipImage: itkImageD3 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_SetInferiorClipImage(self, inferiorClipImage)

    def GetInferiorClipImage(self):
        r"""GetInferiorClipImage(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_GetInferiorClipImage(self)

    def SetSuperiorClipImage(self, superiorClipImage):
        r"""
        SetSuperiorClipImage(self, superiorClipImage)

        Parameters
        ----------
        superiorClipImage: itkImageD3 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_SetSuperiorClipImage(self, superiorClipImage)

    def GetSuperiorClipImage(self):
        r"""GetSuperiorClipImage(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_GetSuperiorClipImage(self)

    def GetSigmaZero(self):
        r"""GetSigmaZero(self) -> double"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_GetSigmaZero(self)

    def SetSigmaZero(self, _arg):
        r"""
        SetSigmaZero(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_SetSigmaZero(self, _arg)

    def GetAlphaPSF(self):
        r"""GetAlphaPSF(self) -> double"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_GetAlphaPSF(self)

    def SetAlphaPSF(self, _arg):
        r"""
        SetAlphaPSF(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_SetAlphaPSF(self, _arg)

    def GetStepSize(self):
        r"""GetStepSize(self) -> double"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_GetStepSize(self)

    def SetStepSize(self, _arg):
        r"""
        SetStepSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_SetStepSize(self, _arg)
    __swig_destroy__ = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.delete_rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass

        Create a new object of the class rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass in _rtkFourDConjugateGradientConeBeamReconstructionFilterPython:
_rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass_swigregister(rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass)

def rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_New():
    return rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3.New()

class rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3(rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Superclass):
    r"""Proxy of C++ rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Pointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Pointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_Clone(self)

    def GetGeometry(self):
        r"""GetGeometry(self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_GetGeometry(self)

    def SetGeometry(self, _arg):
        r"""
        SetGeometry(self, _arg)

        Parameters
        ----------
        _arg: rtkThreeDCircularProjectionGeometry const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_SetGeometry(self, _arg)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> unsigned int"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_GetNumberOfIterations(self)

    def SetNumberOfIterations(self, _arg):
        r"""
        SetNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_SetNumberOfIterations(self, _arg)

    def GetCudaConjugateGradient(self):
        r"""GetCudaConjugateGradient(self) -> bool"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_GetCudaConjugateGradient(self)

    def SetCudaConjugateGradient(self, _arg):
        r"""
        SetCudaConjugateGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_SetCudaConjugateGradient(self, _arg)

    def SetInputVolumeSeries(self, VolumeSeries):
        r"""
        SetInputVolumeSeries(self, VolumeSeries)

        Parameters
        ----------
        VolumeSeries: itkImageD4 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_SetInputVolumeSeries(self, VolumeSeries)

    def GetInputVolumeSeries(self):
        r"""GetInputVolumeSeries(self) -> itkImageD4_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_GetInputVolumeSeries(self)

    def SetInputProjectionStack(self, Projections):
        r"""
        SetInputProjectionStack(self, Projections)

        Parameters
        ----------
        Projections: itkImageD3 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_SetInputProjectionStack(self, Projections)

    def GetInputProjectionStack(self):
        r"""GetInputProjectionStack(self) -> itkImageD3_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_GetInputProjectionStack(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkArray2DF const

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_SetWeights(self, _arg)

    def SetSignal(self, signal):
        r"""
        SetSignal(self, signal)

        Parameters
        ----------
        signal: std::vector< double,std::allocator< double > > const

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_SetSignal(self, signal)

    def SetDisableDisplacedDetectorFilter(self, _arg):
        r"""
        SetDisableDisplacedDetectorFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_SetDisableDisplacedDetectorFilter(self, _arg)

    def GetDisableDisplacedDetectorFilter(self):
        r"""GetDisableDisplacedDetectorFilter(self) -> bool"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_GetDisableDisplacedDetectorFilter(self)
    __swig_destroy__ = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.delete_rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3

        Create a new object of the class rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3 in _rtkFourDConjugateGradientConeBeamReconstructionFilterPython:
_rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3_swigregister(rtkFourDConjugateGradientConeBeamReconstructionFilterID4ID3)

def rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_New():
    return rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.New()

class rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3(rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass):
    r"""Proxy of C++ rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Clone(self)

    def GetGeometry(self):
        r"""GetGeometry(self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetGeometry(self)

    def SetGeometry(self, _arg):
        r"""
        SetGeometry(self, _arg)

        Parameters
        ----------
        _arg: rtkThreeDCircularProjectionGeometry const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetGeometry(self, _arg)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> unsigned int"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetNumberOfIterations(self)

    def SetNumberOfIterations(self, _arg):
        r"""
        SetNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetNumberOfIterations(self, _arg)

    def GetCudaConjugateGradient(self):
        r"""GetCudaConjugateGradient(self) -> bool"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetCudaConjugateGradient(self)

    def SetCudaConjugateGradient(self, _arg):
        r"""
        SetCudaConjugateGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetCudaConjugateGradient(self, _arg)

    def SetInputVolumeSeries(self, VolumeSeries):
        r"""
        SetInputVolumeSeries(self, VolumeSeries)

        Parameters
        ----------
        VolumeSeries: itkImageF4 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetInputVolumeSeries(self, VolumeSeries)

    def GetInputVolumeSeries(self):
        r"""GetInputVolumeSeries(self) -> itkImageF4_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetInputVolumeSeries(self)

    def SetInputProjectionStack(self, Projections):
        r"""
        SetInputProjectionStack(self, Projections)

        Parameters
        ----------
        Projections: itkImageF3 const *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetInputProjectionStack(self, Projections)

    def GetInputProjectionStack(self):
        r"""GetInputProjectionStack(self) -> itkImageF3_ConstPointer"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetInputProjectionStack(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkArray2DF const

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetWeights(self, _arg)

    def SetSignal(self, signal):
        r"""
        SetSignal(self, signal)

        Parameters
        ----------
        signal: std::vector< double,std::allocator< double > > const

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetSignal(self, signal)

    def SetDisableDisplacedDetectorFilter(self, _arg):
        r"""
        SetDisableDisplacedDetectorFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetDisableDisplacedDetectorFilter(self, _arg)

    def GetDisableDisplacedDetectorFilter(self):
        r"""GetDisableDisplacedDetectorFilter(self) -> bool"""
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetDisableDisplacedDetectorFilter(self)
    __swig_destroy__ = _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.delete_rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3

        Create a new object of the class rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 in _rtkFourDConjugateGradientConeBeamReconstructionFilterPython:
_rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_swigregister(rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def four_d_conjugate_gradient_cone_beam_reconstruction_filter(*args: itkt.ImageLike,  geometry=..., number_of_iterations: int=..., cuda_conjugate_gradient: bool=..., input_volume_series: itkt.Image=..., input_projection_stack: itkt.Image=..., weights=..., signal: Sequence[float]=..., disable_displaced_detector_filter: bool=..., forward_projection_filter=..., back_projection_filter=..., attenuation_map: itkt.Image=..., inferior_clip_image: itkt.Image=..., superior_clip_image: itkt.Image=..., sigma_zero: float=..., alpha_psf: float=..., step_size: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for FourDConjugateGradientConeBeamReconstructionFilter"""
    import itk

    kwarg_typehints = { 'geometry':geometry,'number_of_iterations':number_of_iterations,'cuda_conjugate_gradient':cuda_conjugate_gradient,'input_volume_series':input_volume_series,'input_projection_stack':input_projection_stack,'weights':weights,'signal':signal,'disable_displaced_detector_filter':disable_displaced_detector_filter,'forward_projection_filter':forward_projection_filter,'back_projection_filter':back_projection_filter,'attenuation_map':attenuation_map,'inferior_clip_image':inferior_clip_image,'superior_clip_image':superior_clip_image,'sigma_zero':sigma_zero,'alpha_psf':alpha_psf,'step_size':step_size }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.FourDConjugateGradientConeBeamReconstructionFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def four_d_conjugate_gradient_cone_beam_reconstruction_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.FourDConjugateGradientConeBeamReconstructionFilter
    four_d_conjugate_gradient_cone_beam_reconstruction_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    four_d_conjugate_gradient_cone_beam_reconstruction_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def iterative_cone_beam_reconstruction_filter(*args: itkt.ImageLike,  forward_projection_filter=..., back_projection_filter=..., attenuation_map: itkt.Image=..., inferior_clip_image: itkt.Image=..., superior_clip_image: itkt.Image=..., sigma_zero: float=..., alpha_psf: float=..., step_size: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for IterativeConeBeamReconstructionFilter"""
    import itk

    kwarg_typehints = { 'forward_projection_filter':forward_projection_filter,'back_projection_filter':back_projection_filter,'attenuation_map':attenuation_map,'inferior_clip_image':inferior_clip_image,'superior_clip_image':superior_clip_image,'sigma_zero':sigma_zero,'alpha_psf':alpha_psf,'step_size':step_size }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.IterativeConeBeamReconstructionFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def iterative_cone_beam_reconstruction_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.IterativeConeBeamReconstructionFilter
    iterative_cone_beam_reconstruction_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    iterative_cone_beam_reconstruction_filter.__doc__ = filter_object.__doc__



