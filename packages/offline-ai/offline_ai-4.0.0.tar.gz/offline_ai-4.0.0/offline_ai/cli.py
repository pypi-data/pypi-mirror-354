"""
CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è offline-ai
"""

import sys
import click
from rich.console import Console

from .main import app
from .ollama_client import ollama_client
from .config import config

console = Console()

@click.group(invoke_without_command=True)
@click.option('--version', is_flag=True, help='–ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é')
@click.option('--setup', is_flag=True, help='–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É')
@click.option('--auto-install', is_flag=True, help='–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –º–æ–¥–µ–ª—å')
@click.option('--delete', is_flag=True, help='–ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ offline-ai –∏ Ollama')
@click.pass_context
def main(ctx, version, setup, auto_install, delete):
    """
    ü§ñ offline-ai - –õ–æ–∫–∞–ª—å–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞

    –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é Ollama –∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π.
    """
    if version:
        from . import __version__
        console.print(f"offline-ai –≤–µ—Ä—Å–∏—è {__version__}", style="green")
        return

    if delete:
        from .uninstaller import uninstall_all
        uninstall_all()
        return

    if setup:
        if app.setup(auto_install=auto_install):
            console.print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!", style="green")
        else:
            console.print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", style="red")
            sys.exit(1)
        return

    # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–∫–æ–º–∞–Ω–¥—ã, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    if ctx.invoked_subcommand is None:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–≤—ã–π –ª–∏ —ç—Ç–æ –∑–∞–ø—É—Å–∫
        if app.is_first_run():
            console.print("üéâ –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ offline-ai!", style="blue")
            console.print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É...", style="yellow")

            if not app.setup(auto_install=True):
                console.print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É", style="red")
                console.print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: offline-ai --setup", style="blue")
                sys.exit(1)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        elif not ollama_client.is_ollama_running():
            console.print("‚ö†Ô∏è  Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É...", style="yellow")
            if not app.setup():
                sys.exit(1)

        app.interactive_mode()

@main.command()
@click.argument('message', nargs=-1, required=True)
@click.option('--model', '-m', help='–ú–æ–¥–µ–ª—å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è')
@click.option('--no-context', is_flag=True, help='–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞')
def ask(message, model, no_context):
    """
    –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò

    –ü—Ä–∏–º–µ—Ä: offline-ai ask "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?"
    """
    question = ' '.join(message)

    if model:
        ollama_client.model = model

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–≤—ã–π –ª–∏ —ç—Ç–æ –∑–∞–ø—É—Å–∫
    if app.is_first_run():
        console.print("üéâ –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ offline-ai!", style="blue")
        console.print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É...", style="yellow")

        if not app.setup(auto_install=True):
            console.print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É", style="red")
            console.print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: offline-ai --setup", style="blue")
            sys.exit(1)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    elif not ollama_client.is_ollama_running():
        console.print("‚ö†Ô∏è  Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É...", style="yellow")
        if not app.setup():
            sys.exit(1)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω
    use_context = not no_context and config.get("ui.use_context", True)

    if use_context and len(app.history) > 0:
        app.chat_with_context(question)
    else:
        app.chat_once(question, use_context=False)

@main.command()
@click.option('--limit', '-l', default=10, help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–∫–∞–∑–∞')
@click.option('--clear', is_flag=True, help='–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é')
def history(limit, clear):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤"""
    if clear:
        app.history.clear()
        try:
            config.history_file.write_text("", encoding='utf-8')
            console.print("üîÑ –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞", style="green")
        except Exception as e:
            console.print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏: {e}", style="red")
    else:
        app.show_history(limit)

@main.command()
@click.argument('setting', type=click.Choice(['context', 'stream']))
@click.argument('action', type=click.Choice(['on', 'off', 'status']))
def config_cmd(setting, action):
    """
    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏

    context - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç—å—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    stream - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–º –≤—ã–≤–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

    –î–µ–π—Å—Ç–≤–∏—è: on, off, status
    """
    if setting == 'context':
        if action == 'on':
            config.set("ui.use_context", True)
            console.print("üß† –ü–∞–º—è—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞", style="green")
            console.print("–ò–ò –±—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ", style="blue")

        elif action == 'off':
            config.set("ui.use_context", False)
            console.print("üí≠ –ü–∞–º—è—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞", style="yellow")
            console.print("–ö–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ", style="blue")

        elif action == 'status':
            use_context = config.get("ui.use_context", True)
            max_context = config.get("ui.max_context_messages", 10)

            status_icon = "üß†" if use_context else "üí≠"
            status_text = "–≤–∫–ª—é—á–µ–Ω–∞" if use_context else "–≤—ã–∫–ª—é—á–µ–Ω–∞"

            console.print(f"{status_icon} –ü–∞–º—è—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: {status_text}",
                         style="green" if use_context else "yellow")

            if use_context:
                console.print(f"üìä –ú–∞–∫—Å–∏–º—É–º —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: {max_context}", style="blue")
                console.print(f"üìö –°–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: {len(app.history)}", style="blue")

    elif setting == 'stream':
        if action == 'on':
            config.set("ui.streaming_mode", True)
            console.print("‚ö° –†–µ–∂–∏–º –≤—ã–≤–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤–∫–ª—é—á–µ–Ω", style="green")
            console.print("–û—Ç–≤–µ—Ç—ã –ò–ò –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø–æ –º–µ—Ä–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", style="blue")

        elif action == 'off':
            config.set("ui.streaming_mode", False)
            console.print("‚è≥ –†–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤–∫–ª—é—á–µ–Ω", style="yellow")
            console.print("–û—Ç–≤–µ—Ç—ã –ò–ò –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º", style="blue")

        elif action == 'status':
            streaming_mode = config.get("ui.streaming_mode", True)

            status_icon = "‚ö°" if streaming_mode else "‚è≥"
            status_text = "–≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏" if streaming_mode else "–ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"

            console.print(f"{status_icon} –†–µ–∂–∏–º –≤—ã–≤–æ–¥–∞: {status_text}",
                         style="green" if streaming_mode else "yellow")

@main.command()
@click.option('--recommended', '-r', is_flag=True, help='–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –º–æ–¥–µ–ª–∏')
@click.option('--pull', '-p', help='–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å')
@click.option('--use', '-u', help='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é')
@click.option('--demo', is_flag=True, help='–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –º–æ–¥–µ–ª—å')
def models(recommended, pull, use, demo):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª—è–º–∏ –ò–ò"""

    # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –¥–ª—è –¥–µ–º–æ
    if demo:
        if not ollama_client.is_ollama_running():
            console.print("‚ùå Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω", style="red")
            return

        demo_model = config.get("models.preferred_default", "llama3.2:3b")
        console.print(f"üéØ –ó–∞–≥—Ä—É–∂–∞—é —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –º–æ–¥–µ–ª—å: {demo_model}", style="blue")

        if ollama_client.pull_model(demo_model):
            console.print(f"‚úÖ –ú–æ–¥–µ–ª—å {demo_model} –∑–∞–≥—Ä—É–∂–µ–Ω–∞!", style="green")
            config.set("ollama.model", demo_model)
            ollama_client.model = demo_model
            console.print(f"üéØ –ú–æ–¥–µ–ª—å {demo_model} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", style="green")
        else:
            console.print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å {demo_model}", style="red")
        return

    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏
    if pull:
        if not ollama_client.is_ollama_running():
            console.print("‚ùå Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω", style="red")
            return

        if ollama_client.pull_model(pull):
            console.print(f"‚úÖ –ú–æ–¥–µ–ª—å {pull} –∑–∞–≥—Ä—É–∂–µ–Ω–∞!", style="green")
            config.set("ollama.model", pull)
            ollama_client.model = pull
            console.print(f"üéØ –ú–æ–¥–µ–ª—å {pull} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", style="green")
        else:
            console.print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å {pull}", style="red")
        return

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if use:
        models_list = ollama_client.list_models()
        if use not in models_list:
            console.print(f"‚ùå –ú–æ–¥–µ–ª—å {use} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", style="red")
            console.print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:", style="blue")
            for model in models_list:
                console.print(f"  ‚Ä¢ {model}", style="white")
            return

        config.set("ollama.model", use)
        ollama_client.model = use
        console.print(f"‚úÖ –ú–æ–¥–µ–ª—å {use} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", style="green")
        return

    # –ü–æ–∫–∞–∑ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –º–æ–¥–µ–ª–µ–π
    if recommended:
        console.print("üéØ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è offline-ai:", style="blue")
        recommended_models = config.get("models.recommended", [])

        for i, model_info in enumerate(recommended_models, 1):
            if isinstance(model_info, dict):
                name = model_info["name"]
                size = model_info.get("size", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                desc = model_info.get("description", "")
                context_window = model_info.get("context_window", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                optimal_context = model_info.get("optimal_context_messages", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                performance = model_info.get("performance", "")

                console.print(f"  {i}. [bold]{name}[/bold] ({size})", style="white")
                console.print(f"     {desc}", style="dim white")
                console.print(f"     üìä –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_window} —Ç–æ–∫–µ–Ω–æ–≤, –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ {optimal_context} —Å–æ–æ–±—â–µ–Ω–∏–π", style="dim cyan")
                console.print(f"     ‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {performance}", style="dim green")
            else:
                console.print(f"  {i}. {model_info}", style="white")

        demo_model = config.get("models.preferred_default")
        if demo_model:
            console.print(f"\nüèÜ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –º–æ–¥–µ–ª—å: [bold]{demo_model}[/bold]", style="green")

        console.print("\nüí° –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: offline-ai models --pull <–∏–º—è_–º–æ–¥–µ–ª–∏>", style="blue")
        console.print("üí° –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–π –º–æ–¥–µ–ª–∏: offline-ai models --demo", style="blue")
        return

    # –ü–æ–∫–∞–∑ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    if not ollama_client.is_ollama_running():
        console.print("‚ùå Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω", style="red")
        console.print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --recommended –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –º–æ–¥–µ–ª–µ–π", style="blue")
        return

    models_list = ollama_client.list_models()
    if models_list:
        console.print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:", style="blue")
        current_model = ollama_client.model
        for model in models_list:
            marker = "üëâ" if model == current_model else "  "
            console.print(f"{marker} {model}", style="green" if model == current_model else "white")

        console.print(f"\nüí° –î–ª—è —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏: offline-ai models --use <–∏–º—è_–º–æ–¥–µ–ª–∏>", style="blue")
    else:
        console.print("üì¶ –ú–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", style="yellow")
        console.print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --recommended –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –º–æ–¥–µ–ª–µ–π", style="blue")
        console.print("üí° –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–π –º–æ–¥–µ–ª–∏: offline-ai models --demo", style="blue")



@main.command()
def status():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
    console.print("üîç –°—Ç–∞—Ç—É—Å offline-ai:", style="blue")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    if app.is_first_run():
        console.print("üÜï –°—Ç–∞—Ç—É—Å: –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ (–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞)", style="yellow")
        console.print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: offline-ai --setup --auto-install", style="blue")
    else:
        console.print("‚úÖ –°—Ç–∞—Ç—É—Å: –ù–∞—Å—Ç—Ä–æ–µ–Ω", style="green")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama
    if ollama_client.is_ollama_running():
        console.print("‚úÖ Ollama: –ó–∞–ø—É—â–µ–Ω", style="green")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π
        models_list = ollama_client.list_models()
        if models_list:
            console.print(f"‚úÖ –ú–æ–¥–µ–ª–∏: {len(models_list)} –¥–æ—Å—Ç—É–ø–Ω–æ", style="green")
            console.print(f"üëâ –¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å: {ollama_client.model}", style="blue")
        else:
            console.print("‚ö†Ô∏è  –ú–æ–¥–µ–ª–∏: –ù–µ –Ω–∞–π–¥–µ–Ω—ã", style="yellow")
            console.print("üí° –ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–æ–¥–µ–ª—å: offline-ai models --demo", style="blue")
    else:
        console.print("‚ùå Ollama: –ù–µ –∑–∞–ø—É—â–µ–Ω", style="red")
        console.print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É: offline-ai --setup", style="blue")

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    use_context = config.get("ui.use_context", True)
    streaming_mode = config.get("ui.streaming_mode", True)

    context_icon = "üß†" if use_context else "üí≠"
    stream_icon = "‚ö°" if streaming_mode else "‚è≥"

    console.print(f"{context_icon} –ü–∞–º—è—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: {'–≤–∫–ª—é—á–µ–Ω–∞' if use_context else '–≤—ã–∫–ª—é—á–µ–Ω–∞'}",
                 style="green" if use_context else "yellow")
    console.print(f"{stream_icon} –†–µ–∂–∏–º –≤—ã–≤–æ–¥–∞: {'–≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏' if streaming_mode else '–ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è'}",
                 style="green" if streaming_mode else "yellow")
    console.print(f"üìÅ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config.config_file}", style="blue")
    console.print(f"üìö –ò—Å—Ç–æ—Ä–∏—è: {len(app.history)} –∑–∞–ø–∏—Å–µ–π", style="blue")



if __name__ == "__main__":
    main()
