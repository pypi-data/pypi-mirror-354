"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è offline-ai –∏ Ollama
"""

import os
import sys
import platform
import subprocess
import shutil
from pathlib import Path
from rich.console import Console
from rich.panel import Panel
from rich.prompt import Confirm

console = Console()

def stop_ollama():
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã Ollama"""
    console.print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–æ—Ü–µ—Å—Å—ã Ollama...", style="yellow")
    
    try:
        if platform.system() == "Windows":
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Ollama –Ω–∞ Windows
            subprocess.run(["taskkill", "/F", "/IM", "ollama.exe"], 
                         capture_output=True, check=False)
        else:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Ollama –Ω–∞ Linux/Mac
            subprocess.run(["pkill", "-f", "ollama"], 
                         capture_output=True, check=False)
        
        console.print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã Ollama –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã", style="green")
    except Exception as e:
        console.print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}", style="yellow")

def uninstall_ollama_windows():
    """–£–¥–∞–ª–∏—Ç—å Ollama –Ω–∞ Windows"""
    console.print("üóëÔ∏è –£–¥–∞–ª—è—é Ollama –Ω–∞ Windows...", style="blue")
    
    success = False
    
    # –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ winget
    try:
        result = subprocess.run(["winget", "uninstall", "Ollama.Ollama"], 
                              capture_output=True, text=True, timeout=60)
        if result.returncode == 0:
            console.print("‚úÖ Ollama —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ winget", style="green")
            success = True
    except:
        pass
    
    # –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –¥–µ–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä
    if not success:
        try:
            # –ò—â–µ–º –¥–µ–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
            uninstall_paths = [
                Path.home() / "AppData" / "Local" / "Programs" / "Ollama" / "Uninstall Ollama.exe",
                Path("C:/Program Files/Ollama/Uninstall Ollama.exe"),
                Path("C:/Program Files (x86)/Ollama/Uninstall Ollama.exe")
            ]
            
            for uninstall_path in uninstall_paths:
                if uninstall_path.exists():
                    console.print(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é –¥–µ–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä: {uninstall_path}", style="blue")
                    subprocess.run([str(uninstall_path), "/S"], timeout=120)  # /S –¥–ª—è —Ç–∏—Ö–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
                    success = True
                    break
        except Exception as e:
            console.print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥–µ–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä–∞: {e}", style="yellow")
    
    # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫–∏ –≤—Ä—É—á–Ω—É—é
    folders_to_remove = [
        Path.home() / "AppData" / "Local" / "Programs" / "Ollama",
        Path.home() / "AppData" / "Local" / "Ollama",
        Path.home() / ".ollama",
        Path("C:/Program Files/Ollama"),
        Path("C:/Program Files (x86)/Ollama")
    ]
    
    for folder in folders_to_remove:
        try:
            if folder.exists():
                shutil.rmtree(folder)
                console.print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {folder}", style="green")
        except Exception as e:
            console.print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {folder}: {e}", style="yellow")
    
    return success

def uninstall_ollama_linux():
    """–£–¥–∞–ª–∏—Ç—å Ollama –Ω–∞ Linux"""
    console.print("üóëÔ∏è –£–¥–∞–ª—è—é Ollama –Ω–∞ Linux...", style="blue")
    
    success = False
    
    # –£–¥–∞–ª—è–µ–º –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
    portable_path = Path.home() / ".local" / "bin" / "ollama"
    if portable_path.exists():
        try:
            portable_path.unlink()
            console.print("‚úÖ –£–¥–∞–ª–µ–Ω –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–π Ollama –∏–∑ ~/.local/bin/", style="green")
            success = True
        except Exception as e:
            console.print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–≥–æ Ollama: {e}", style="yellow")
    
    # –£–¥–∞–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–∞)
    system_paths = ["/usr/local/bin/ollama", "/usr/bin/ollama"]
    for path in system_paths:
        try:
            if Path(path).exists():
                # –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —Å sudo
                result = subprocess.run(["sudo", "rm", path], 
                                      capture_output=True, timeout=30)
                if result.returncode == 0:
                    console.print(f"‚úÖ –£–¥–∞–ª–µ–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π Ollama: {path}", style="green")
                    success = True
        except:
            pass
    
    # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    folders_to_remove = [
        Path.home() / ".ollama",
        Path.home() / ".local" / "share" / "ollama"
    ]
    
    for folder in folders_to_remove:
        try:
            if folder.exists():
                shutil.rmtree(folder)
                console.print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {folder}", style="green")
        except Exception as e:
            console.print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {folder}: {e}", style="yellow")
    
    # –£–¥–∞–ª—è–µ–º –∏–∑ PATH –≤ .bashrc
    try:
        bashrc_path = Path.home() / ".bashrc"
        if bashrc_path.exists():
            with open(bashrc_path, 'r') as f:
                lines = f.readlines()
            
            # –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å offline-ai
            new_lines = []
            skip_next = False
            for line in lines:
                if "# –î–æ–±–∞–≤–ª–µ–Ω–æ offline-ai" in line:
                    skip_next = True
                    continue
                elif skip_next and "export PATH" in line and ".local/bin" in line:
                    skip_next = False
                    continue
                else:
                    skip_next = False
                    new_lines.append(line)
            
            with open(bashrc_path, 'w') as f:
                f.writelines(new_lines)
            
            console.print("‚úÖ –û—á–∏—â–µ–Ω ~/.bashrc –æ—Ç –∑–∞–ø–∏—Å–µ–π offline-ai", style="green")
    except Exception as e:
        console.print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ ~/.bashrc: {e}", style="yellow")
    
    return success

def remove_offline_ai_data():
    """–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ offline-ai"""
    console.print("üóëÔ∏è –£–¥–∞–ª—è—é –¥–∞–Ω–Ω—ã–µ offline-ai...", style="blue")
    
    # –ü–∞–ø–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    folders_to_remove = [
        Path.home() / ".config" / "offline-ai",
        Path.home() / ".local" / "share" / "offline-ai",
        Path.home() / ".cache" / "offline-ai"
    ]
    
    if platform.system() == "Windows":
        folders_to_remove.extend([
            Path.home() / "AppData" / "Local" / "offline-ai",
            Path.home() / "AppData" / "Roaming" / "offline-ai"
        ])
    
    for folder in folders_to_remove:
        try:
            if folder.exists():
                shutil.rmtree(folder)
                console.print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {folder}", style="green")
        except Exception as e:
            console.print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {folder}: {e}", style="yellow")

def uninstall_offline_ai_package():
    """–£–¥–∞–ª–∏—Ç—å –ø–∞–∫–µ—Ç offline-ai"""
    console.print("üóëÔ∏è –£–¥–∞–ª—è—é –ø–∞–∫–µ—Ç offline-ai...", style="blue")
    
    try:
        result = subprocess.run([sys.executable, "-m", "pip", "uninstall", "offline-ai", "-y"], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            console.print("‚úÖ –ü–∞–∫–µ—Ç offline-ai —É–¥–∞–ª–µ–Ω", style="green")
            return True
        else:
            console.print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–∞: {result.stderr}", style="yellow")
            return False
    except Exception as e:
        console.print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–∞: {e}", style="yellow")
        return False

def uninstall_all():
    """–ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ offline-ai –∏ Ollama"""
    console.print(Panel.fit(
        "üóëÔ∏è –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ offline-ai –∏ Ollama\n\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç:\n"
        "‚Ä¢ –ü–∞–∫–µ—Ç offline-ai\n"
        "‚Ä¢ Ollama –∏ –≤—Å–µ –º–æ–¥–µ–ª–∏\n"
        "‚Ä¢ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –¥–∞–Ω–Ω—ã–µ\n"
        "‚Ä¢ –ò—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤\n\n"
        "‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!",
        title="–£–¥–∞–ª–µ–Ω–∏–µ",
        style="red"
    ))
    
    if not Confirm.ask("ü§î –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ?"):
        console.print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", style="yellow")
        return
    
    console.print("üöÄ –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ...", style="blue")
    
    # 1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Ollama
    stop_ollama()
    
    # 2. –£–¥–∞–ª—è–µ–º Ollama
    system = platform.system()
    if system == "Windows":
        uninstall_ollama_windows()
    elif system == "Linux":
        uninstall_ollama_linux()
    elif system == "Darwin":  # macOS
        console.print("üçé –î–ª—è macOS —É–¥–∞–ª–∏—Ç–µ Ollama –≤—Ä—É—á–Ω—É—é:", style="yellow")
        console.print("  ‚Ä¢ –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Homebrew: brew uninstall ollama", style="blue")
        console.print("  ‚Ä¢ –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ .dmg: —É–¥–∞–ª–∏—Ç–µ –∏–∑ Applications", style="blue")
    
    # 3. –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ offline-ai
    remove_offline_ai_data()
    
    # 4. –£–¥–∞–ª—è–µ–º –ø–∞–∫–µ—Ç offline-ai (–≤ –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—á–µ—Ä–µ–¥—å)
    console.print("\nüéØ –£–¥–∞–ª—è—é –ø–∞–∫–µ—Ç offline-ai...", style="blue")
    console.print("‚ö†Ô∏è –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∫–æ–º–∞–Ω–¥–∞ offline-ai –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å", style="yellow")
    
    if Confirm.ask("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞?"):
        if uninstall_offline_ai_package():
            console.print(Panel.fit(
                "üéâ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n\n"
                "–£–¥–∞–ª–µ–Ω–æ:\n"
                "‚úÖ –ü–∞–∫–µ—Ç offline-ai\n"
                "‚úÖ Ollama –∏ –º–æ–¥–µ–ª–∏\n"
                "‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n"
                "‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤\n\n"
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ offline-ai! üëã",
                title="–ì–æ—Ç–æ–≤–æ",
                style="green"
            ))
        else:
            console.print("‚ö†Ô∏è –ü–∞–∫–µ—Ç offline-ai –Ω–µ —É–¥–∞–ª–µ–Ω, –Ω–æ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã", style="yellow")
    else:
        console.print("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã, –ø–∞–∫–µ—Ç offline-ai –æ—Å—Ç–∞–≤–ª–µ–Ω", style="green")
