import importlib.resources

class ACV:
    def __init__(self):
        self.text = self._load_data()
    
    def _load_data(self):
        with importlib.resources.open_text("cv_gg.data", "all_CV.txt") as file:
            return file.read()
    
    def get_imports(self):
        """
        print(get_imports()) - получить общий импорт для всех заданий (в данной либе пустой)
        """
        return self.text.split("###")[0]
    
    def get_cell(self, topic, task, cell):
        """
        topic:
        1 - основные задачи (выводит где можно найти материал по теме)
        2 - семинары (которые подходят под тематику, вывод по задачам)
        3 - лабораторные (аналогично семинарам)
        
        task:
        1.
        1 - Задачи по сегментации по порогу (например, гистограмма)
        2 - Задачи, связанные с гистограммами изображений
        3 - Морфологические операции (расширение, эрозия)
        4 - Методы избавления от шума, фильтрация по среднему, медиане и т.д.
        5 - Методы выделения границ
        6 - Методы улучшения изображения (эквализация гистограммы)
        7 - Классификация на каком-нибудь встроенном датасете (обучение)
        8 - Трансферное обучение на каком-то встроенном датасете
        9 - Детекция объектов на фото, без обучения, работа с рамками
        10 - Семантическая сегментация без обучения
        11 - Сегментация экземпляров без обучения
        
        2.
        Не основное содержание, вызывай по очереди и найдёшь нужное, в 1 ячейке указано название
        
        3.
        Не основное содержание, вызывай по очереди и найдёшь нужное, в 1 ячейке указано название
        
        cell:
        Номер нужной ячейки
        
        Вывод: print(get_cell(topic, task, cell))
        """
        if len(self.text.split('###')[topic].split('##')[task].split('---')) <= cell:
            return 'end'
        else:
            return self.text.split('###')[topic].split('##')[task].split('---')[cell]
